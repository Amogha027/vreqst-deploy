{"ast":null,"code":"import CSSReset from '@chakra-ui/css-reset';\nimport { PortalManager } from '@chakra-ui/portal';\nimport { ThemeProvider, ColorModeProvider, GlobalStyle } from '@chakra-ui/system';\nimport { EnvironmentProvider } from '@chakra-ui/react-env';\nimport * as React from 'react';\nimport { IdProvider } from '@chakra-ui/hooks';\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\n\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      environment = props.environment,\n      cssVarsRoot = props.cssVarsRoot;\n\n  var _children =\n  /*#__PURE__*/\n  React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n\n  return (\n    /*#__PURE__*/\n    React.createElement(IdProvider, null,\n    /*#__PURE__*/\n    React.createElement(ThemeProvider, {\n      theme: theme,\n      cssVarsRoot: cssVarsRoot\n    },\n    /*#__PURE__*/\n    React.createElement(ColorModeProvider, {\n      colorModeManager: colorModeManager,\n      options: theme.config\n    }, resetCSS &&\n    /*#__PURE__*/\n    React.createElement(CSSReset, null),\n    /*#__PURE__*/\n    React.createElement(GlobalStyle, null), portalZIndex ?\n    /*#__PURE__*/\n    React.createElement(PortalManager, {\n      zIndex: portalZIndex\n    }, _children) : _children)))\n  );\n};\n\nexport { ChakraProvider };","map":{"version":3,"sources":["/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/node_modules/@chakra-ui/provider/dist/chakra-ui-provider.esm.js"],"names":["CSSReset","PortalManager","ThemeProvider","ColorModeProvider","GlobalStyle","EnvironmentProvider","React","IdProvider","ChakraProvider","props","children","colorModeManager","portalZIndex","_props$resetCSS","resetCSS","_props$theme","theme","environment","cssVarsRoot","_children","createElement","options","config","zIndex"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,aAAT,EAAwBC,iBAAxB,EAA2CC,WAA3C,QAA8D,mBAA9D;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA;;;;;AAIA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,gBAAgB,GAAGF,KAAK,CAACE,gBAD7B;AAAA,MAEIC,YAAY,GAAGH,KAAK,CAACG,YAFzB;AAAA,MAGIC,eAAe,GAAGJ,KAAK,CAACK,QAH5B;AAAA,MAIIA,QAAQ,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,IAA7B,GAAoCA,eAJnD;AAAA,MAKIE,YAAY,GAAGN,KAAK,CAACO,KALzB;AAAA,MAMIA,KAAK,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,EAA1B,GAA+BA,YAN3C;AAAA,MAOIE,WAAW,GAAGR,KAAK,CAACQ,WAPxB;AAAA,MAQIC,WAAW,GAAGT,KAAK,CAACS,WARxB;;AAUA,MAAIC,SAAS;AAAG;AAAab,EAAAA,KAAK,CAACc,aAAN,CAAoBf,mBAApB,EAAyC;AACpEY,IAAAA,WAAW,EAAEA;AADuD,GAAzC,EAE1BP,QAF0B,CAA7B;;AAIA;AAAO;AAAaJ,IAAAA,KAAK,CAACc,aAAN,CAAoBb,UAApB,EAAgC,IAAhC;AAAsC;AAAaD,IAAAA,KAAK,CAACc,aAAN,CAAoBlB,aAApB,EAAmC;AACxGc,MAAAA,KAAK,EAAEA,KADiG;AAExGE,MAAAA,WAAW,EAAEA;AAF2F,KAAnC;AAGpE;AAAaZ,IAAAA,KAAK,CAACc,aAAN,CAAoBjB,iBAApB,EAAuC;AACrDQ,MAAAA,gBAAgB,EAAEA,gBADmC;AAErDU,MAAAA,OAAO,EAAEL,KAAK,CAACM;AAFsC,KAAvC,EAGbR,QAAQ;AAAI;AAAaR,IAAAA,KAAK,CAACc,aAAN,CAAoBpB,QAApB,EAA8B,IAA9B,CAHZ;AAGiD;AAAaM,IAAAA,KAAK,CAACc,aAAN,CAAoBhB,WAApB,EAAiC,IAAjC,CAH9D,EAGsGQ,YAAY;AAAG;AAAaN,IAAAA,KAAK,CAACc,aAAN,CAAoBnB,aAApB,EAAmC;AACnLsB,MAAAA,MAAM,EAAEX;AAD2K,KAAnC,EAE/IO,SAF+I,CAAhB,GAElHA,SALA,CAHuD,CAAnD;AAApB;AASD,CAxBD;;AA0BA,SAASX,cAAT","sourcesContent":["import CSSReset from '@chakra-ui/css-reset';\nimport { PortalManager } from '@chakra-ui/portal';\nimport { ThemeProvider, ColorModeProvider, GlobalStyle } from '@chakra-ui/system';\nimport { EnvironmentProvider } from '@chakra-ui/react-env';\nimport * as React from 'react';\nimport { IdProvider } from '@chakra-ui/hooks';\n\n/**\n * The global provider that must be added to make all Chakra components\n * work correctly\n */\nvar ChakraProvider = function ChakraProvider(props) {\n  var children = props.children,\n      colorModeManager = props.colorModeManager,\n      portalZIndex = props.portalZIndex,\n      _props$resetCSS = props.resetCSS,\n      resetCSS = _props$resetCSS === void 0 ? true : _props$resetCSS,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? {} : _props$theme,\n      environment = props.environment,\n      cssVarsRoot = props.cssVarsRoot;\n\n  var _children = /*#__PURE__*/React.createElement(EnvironmentProvider, {\n    environment: environment\n  }, children);\n\n  return /*#__PURE__*/React.createElement(IdProvider, null, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    cssVarsRoot: cssVarsRoot\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, resetCSS && /*#__PURE__*/React.createElement(CSSReset, null), /*#__PURE__*/React.createElement(GlobalStyle, null), portalZIndex ? /*#__PURE__*/React.createElement(PortalManager, {\n    zIndex: portalZIndex\n  }, _children) : _children)));\n};\n\nexport { ChakraProvider };\n"]},"metadata":{},"sourceType":"module"}