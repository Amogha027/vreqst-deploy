{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/amogha/Documents/sem-6/btp-1/deploy/deployed/vreqst/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/home/amogha/Documents/sem-6/btp-1/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/home/amogha/Documents/sem-6/btp-1/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/home/amogha/Documents/sem-6/btp-1/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkExact = void 0;\n\nvar base_1 = require(\"../base\");\n\nvar chain_1 = require(\"../chain\");\n\nvar context_1 = require(\"../context\");\n\nvar field_selection_1 = require(\"../field-selection\");\n\nvar utils_1 = require(\"../utils\");\n/**\n * Checks whether the request contains exactly only those fields that have been validated.\n *\n * Unknown fields, if found, will generate an error of type `unknown_fields`.\n *\n * @param chains either a single chain, an array of chains, or a mixed array of chains and array of chains.\n *               This means that all of the below are valid:\n * ```\n * checkExact(check('foo'))\n * checkExact([check('foo'), check('bar')])\n * checkExact([check('foo'), check('bar')])\n * checkExact(checkSchema({ ... }))\n * checkExact([checkSchema({ ... }), check('foo')])\n * ```\n * @param opts\n */\n\n\nfunction checkExact(chains, opts) {\n  // Don't include all locations by default. Browsers will add cookies and headers that the user\n  // might not want to validate, which would be a footgun.\n  var locations = (opts === null || opts === void 0 ? void 0 : opts.locations) || ['body', 'params', 'query'];\n  var chainsArr = Array.isArray(chains) ? chains.flat() : chains ? [chains] : [];\n\n  var run =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(req) {\n      var internalReq, fieldsByLocation, unknownFields, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, location, fields, context;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              internalReq = req;\n              fieldsByLocation = new Map();\n              _context.next = 4;\n              return utils_1.runAllChains(req, chainsArr);\n\n            case 4:\n              // The chains above will have added contexts to the request\n              (internalReq[base_1.contextsKey] || []).forEach(function (context) {\n                context.locations.forEach(function (location) {\n                  if (!locations.includes(location)) {\n                    return;\n                  }\n\n                  var locationFields = fieldsByLocation.get(location) || [];\n                  locationFields.push.apply(locationFields, _toConsumableArray(context.fields));\n                  fieldsByLocation.set(location, locationFields);\n                });\n              }); // when none of the chains matched anything, then everything is unknown.\n\n              if (!fieldsByLocation.size) {\n                locations.forEach(function (location) {\n                  return fieldsByLocation.set(location, []);\n                });\n              }\n\n              unknownFields = [];\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _iteratorError = undefined;\n              _context.prev = 10;\n\n              for (_iterator = fieldsByLocation.entries()[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                _step$value = _slicedToArray(_step.value, 2), location = _step$value[0], fields = _step$value[1];\n                unknownFields = unknownFields.concat(field_selection_1.selectUnknownFields(req, fields, [location]));\n              }\n\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](10);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n\n            case 18:\n              _context.prev = 18;\n              _context.prev = 19;\n\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n\n            case 21:\n              _context.prev = 21;\n\n              if (!_didIteratorError) {\n                _context.next = 24;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 24:\n              return _context.finish(21);\n\n            case 25:\n              return _context.finish(18);\n\n            case 26:\n              context = new context_1.Context([], [], [], false, false);\n\n              if (unknownFields.length) {\n                context.addError({\n                  type: 'unknown_fields',\n                  req: req,\n                  message: (opts === null || opts === void 0 ? void 0 : opts.message) || 'Unknown field(s)',\n                  fields: unknownFields\n                });\n              }\n\n              internalReq[base_1.contextsKey] = internalReq[base_1.contextsKey] || [];\n              internalReq[base_1.contextsKey].push(context);\n              return _context.abrupt(\"return\", new chain_1.ResultWithContextImpl(context));\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[10, 14, 18, 26], [19,, 21, 25]]);\n    }));\n\n    return function run(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var middleware = function middleware(req, _res, next) {\n    return run(req).then(function () {\n      return next();\n    }, next);\n  };\n\n  return Object.assign(middleware, {\n    run: run\n  });\n}\n\nexports.checkExact = checkExact;","map":{"version":3,"sources":["/home/amogha/Documents/sem-6/btp-1/deploy/deployed/vreqst/node_modules/express-validator/src/middlewares/exact.js"],"names":["Object","defineProperty","exports","value","checkExact","base_1","require","chain_1","context_1","field_selection_1","utils_1","chains","opts","locations","chainsArr","Array","isArray","flat","run","req","internalReq","fieldsByLocation","Map","runAllChains","contextsKey","forEach","context","location","includes","locationFields","get","push","fields","set","size","unknownFields","entries","concat","selectUnknownFields","Context","length","addError","type","message","ResultWithContextImpl","middleware","_res","next","then","assign"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkExact = void 0;\nconst base_1 = require(\"../base\");\nconst chain_1 = require(\"../chain\");\nconst context_1 = require(\"../context\");\nconst field_selection_1 = require(\"../field-selection\");\nconst utils_1 = require(\"../utils\");\n/**\n * Checks whether the request contains exactly only those fields that have been validated.\n *\n * Unknown fields, if found, will generate an error of type `unknown_fields`.\n *\n * @param chains either a single chain, an array of chains, or a mixed array of chains and array of chains.\n *               This means that all of the below are valid:\n * ```\n * checkExact(check('foo'))\n * checkExact([check('foo'), check('bar')])\n * checkExact([check('foo'), check('bar')])\n * checkExact(checkSchema({ ... }))\n * checkExact([checkSchema({ ... }), check('foo')])\n * ```\n * @param opts\n */\nfunction checkExact(chains, opts) {\n    // Don't include all locations by default. Browsers will add cookies and headers that the user\n    // might not want to validate, which would be a footgun.\n    const locations = opts?.locations || ['body', 'params', 'query'];\n    const chainsArr = Array.isArray(chains) ? chains.flat() : chains ? [chains] : [];\n    const run = async (req) => {\n        const internalReq = req;\n        const fieldsByLocation = new Map();\n        await utils_1.runAllChains(req, chainsArr);\n        // The chains above will have added contexts to the request\n        (internalReq[base_1.contextsKey] || []).forEach(context => {\n            context.locations.forEach(location => {\n                if (!locations.includes(location)) {\n                    return;\n                }\n                const locationFields = fieldsByLocation.get(location) || [];\n                locationFields.push(...context.fields);\n                fieldsByLocation.set(location, locationFields);\n            });\n        });\n        // when none of the chains matched anything, then everything is unknown.\n        if (!fieldsByLocation.size) {\n            locations.forEach(location => fieldsByLocation.set(location, []));\n        }\n        let unknownFields = [];\n        for (const [location, fields] of fieldsByLocation.entries()) {\n            unknownFields = unknownFields.concat(field_selection_1.selectUnknownFields(req, fields, [location]));\n        }\n        const context = new context_1.Context([], [], [], false, false);\n        if (unknownFields.length) {\n            context.addError({\n                type: 'unknown_fields',\n                req,\n                message: opts?.message || 'Unknown field(s)',\n                fields: unknownFields,\n            });\n        }\n        internalReq[base_1.contextsKey] = internalReq[base_1.contextsKey] || [];\n        internalReq[base_1.contextsKey].push(context);\n        return new chain_1.ResultWithContextImpl(context);\n    };\n    const middleware = (req, _res, next) => run(req).then(() => next(), next);\n    return Object.assign(middleware, { run });\n}\nexports.checkExact = checkExact;\n"]},"metadata":{},"sourceType":"script"}