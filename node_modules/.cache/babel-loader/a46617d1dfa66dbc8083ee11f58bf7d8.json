{"ast":null,"code":"import _classCallCheck from \"/home/amogha/btp/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/amogha/btp/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { invariant } from '@react-dnd/invariant';\nvar isCallingCanDrop = false;\nexport var DropTargetMonitorImpl =\n/*#__PURE__*/\nfunction () {\n  _createClass(DropTargetMonitorImpl, [{\n    key: \"receiveHandlerId\",\n    value: function receiveHandlerId(targetId) {\n      this.targetId = targetId;\n    }\n  }, {\n    key: \"getHandlerId\",\n    value: function getHandlerId() {\n      return this.targetId;\n    }\n  }, {\n    key: \"subscribeToStateChange\",\n    value: function subscribeToStateChange(listener, options) {\n      return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop() {\n      // Cut out early if the target id has not been set. This should prevent errors\n      // where the user has an older version of dnd-core like in\n      // https://github.com/react-dnd/react-dnd/issues/1310\n      if (!this.targetId) {\n        return false;\n      }\n\n      invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n      try {\n        isCallingCanDrop = true;\n        return this.internalMonitor.canDropOnTarget(this.targetId);\n      } finally {\n        isCallingCanDrop = false;\n      }\n    }\n  }, {\n    key: \"isOver\",\n    value: function isOver(options) {\n      if (!this.targetId) {\n        return false;\n      }\n\n      return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n  }, {\n    key: \"getItemType\",\n    value: function getItemType() {\n      return this.internalMonitor.getItemType();\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem() {\n      return this.internalMonitor.getItem();\n    }\n  }, {\n    key: \"getDropResult\",\n    value: function getDropResult() {\n      return this.internalMonitor.getDropResult();\n    }\n  }, {\n    key: \"didDrop\",\n    value: function didDrop() {\n      return this.internalMonitor.didDrop();\n    }\n  }, {\n    key: \"getInitialClientOffset\",\n    value: function getInitialClientOffset() {\n      return this.internalMonitor.getInitialClientOffset();\n    }\n  }, {\n    key: \"getInitialSourceClientOffset\",\n    value: function getInitialSourceClientOffset() {\n      return this.internalMonitor.getInitialSourceClientOffset();\n    }\n  }, {\n    key: \"getSourceClientOffset\",\n    value: function getSourceClientOffset() {\n      return this.internalMonitor.getSourceClientOffset();\n    }\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      return this.internalMonitor.getClientOffset();\n    }\n  }, {\n    key: \"getDifferenceFromInitialOffset\",\n    value: function getDifferenceFromInitialOffset() {\n      return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n  }]);\n\n  function DropTargetMonitorImpl(manager) {\n    _classCallCheck(this, DropTargetMonitorImpl);\n\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n  return DropTargetMonitorImpl;\n}();","map":{"version":3,"sources":["../../src/internals/DropTargetMonitorImpl.ts"],"names":["invariant","isCallingCanDrop","DropTargetMonitorImpl","targetId","manager","internalMonitor","getMonitor","listener","options","subscribeToStateChange","canDropOnTarget","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAYA,IAAIC,gBAAgB,GAAG,KAAvB;AAEA,WAAaC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA,qCAQyBC,QARzB,EAQ4D;AAC1D,WAAKA,QAAL,GAAgBA,QAAhB;AACA;AAVF;AAAA;AAAA,mCAY0C;AACxC,aAAO,KAAKA,QAAZ;AACA;AAdF;AAAA;AAAA,2CAiBEI,QAjBF,EAkBEC,OAlBF,EAmBgB;AACd,aAAO,KAAKH,eAAL,CAAqBI,sBAArB,CAA4CF,QAA5C,EAAsDC,OAAtD,CAAP;AACA;AArBF;AAAA;AAAA,8BAuB2B;AACzB;AACA;AACA;AACA,UAAI,CAAC,KAAKL,QAAV,EAAoB;AACnB,eAAO,KAAP;AACA;;AACDH,MAAAA,SAAS,CACR,CAACC,gBADO,EAER,8EACC,8EAHO,CAATD;;AAMA,UAAI;AACHC,QAAAA,gBAAgB,GAAG,IAAnBA;AACA,eAAO,KAAKI,eAAL,CAAqBK,eAArB,CAAqC,KAAKP,QAA1C,CAAP;AACA,OAHD,SAGU;AACTF,QAAAA,gBAAgB,GAAG,KAAnBA;AACA;AACD;AA1CF;AAAA;AAAA,2BA4CeO,OA5Cf,EA4CyD;AACvD,UAAI,CAAC,KAAKL,QAAV,EAAoB;AACnB,eAAO,KAAP;AACA;;AACD,aAAO,KAAKE,eAAL,CAAqBM,YAArB,CAAkC,KAAKR,QAAvC,EAAiDK,OAAjD,CAAP;AACA;AAjDF;AAAA;AAAA,kCAmDyC;AACvC,aAAO,KAAKH,eAAL,CAAqBO,WAArB,EAAP;AACA;AArDF;AAAA;AAAA,8BAuDuB;AACrB,aAAO,KAAKP,eAAL,CAAqBQ,OAArB,EAAP;AACA;AAzDF;AAAA;AAAA,oCA2D6B;AAC3B,aAAO,KAAKR,eAAL,CAAqBS,aAArB,EAAP;AACA;AA7DF;AAAA;AAAA,8BA+D2B;AACzB,aAAO,KAAKT,eAAL,CAAqBU,OAArB,EAAP;AACA;AAjEF;AAAA;AAAA,6CAmEiD;AAC/C,aAAO,KAAKV,eAAL,CAAqBW,sBAArB,EAAP;AACA;AArEF;AAAA;AAAA,mDAuEuD;AACrD,aAAO,KAAKX,eAAL,CAAqBY,4BAArB,EAAP;AACA;AAzEF;AAAA;AAAA,4CA2EgD;AAC9C,aAAO,KAAKZ,eAAL,CAAqBa,qBAArB,EAAP;AACA;AA7EF;AAAA;AAAA,sCA+E0C;AACxC,aAAO,KAAKb,eAAL,CAAqBc,eAArB,EAAP;AACA;AAjFF;AAAA;AAAA,qDAmFyD;AACvD,aAAO,KAAKd,eAAL,CAAqBe,8BAArB,EAAP;AACA;AArFF;;AAIC,iCAAmBhB,OAAnB,EAA6C;AAAA;;AAF7C,SAAQD,QAAR,GAhBD,IAgBC;AAGC,SAAKE,eAAL,GAAuBD,OAAO,CAACE,UAARF,EAAvB;AACA;;AANF;AAAA","sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}