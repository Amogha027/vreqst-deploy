{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/Components/Profile/Profile.jsx\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Button, Flex, FormControl, FormLabel, Heading, Input, Stack, useColorModeValue } from \"@chakra-ui/react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { backend } from \"../../server_urls\";\n\nconst Profile = props => {\n  const toast = useToast();\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n  useEffect(() => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n\n    const getuser = async () => {\n      try {\n        const requestOptions = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            token: jwttoken\n          }\n        };\n        const res = await axios.get( // \"http://localhost:5002/api/users/me\",\n        backend + \"/api/users/me\", requestOptions);\n        setname(res === null || res === void 0 ? void 0 : res.data.name);\n        setemail(res === null || res === void 0 ? void 0 : res.data.email);\n        setOrganization(res === null || res === void 0 ? void 0 : res.data.organization);\n        setusername(res === null || res === void 0 ? void 0 : res.data.username);\n      } catch (error) {\n        toast({\n          title: \"Something went wrong\",\n          status: \"error\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\"\n        });\n        console.log(error);\n      }\n    };\n\n    getuser();\n  }, []);\n  return React.createElement(Flex, {\n    minH: \"85vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Stack, {\n    spacing: 4,\n    w: \"full\",\n    maxW: \"md\",\n    bg: useColorModeValue(\"white\", \"gray.700\"),\n    rounded: \"xl\",\n    boxShadow: \"lg\",\n    p: 6,\n    my: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    lineHeight: 1.1,\n    fontSize: {\n      base: \"2xl\",\n      sm: \"3xl\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"User Profile Edit\"), React.createElement(FormControl, {\n    id: \"userName\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Full Name\"), React.createElement(Input, {\n    placeholder: \"Full Name\",\n    _placeholder: {\n      color: \"gray.500\"\n    },\n    value: name,\n    onChange: e => setname(e.target.value),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    id: \"email\",\n    isReadOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(Input, {\n    placeholder: \"your-email@example.com\",\n    type: \"email\",\n    backgroundColor: \"lightgray\",\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    id: \"username\",\n    isRequired: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Input, {\n    placeholder: \"UserName\",\n    _placeholder: {\n      color: \"gray.500\"\n    },\n    type: \"text\",\n    value: username,\n    onChange: e => setusername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    id: \"organization\",\n    isReadOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Organization\"), React.createElement(Input, {\n    placeholder: \"Organization\",\n    type: \"text\",\n    value: organization,\n    backgroundColor: \"lightgray\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(Stack, {\n    spacing: 6,\n    direction: [\"column\", \"row\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/Components/Profile/Profile.jsx"],"names":["React","useState","useEffect","connect","axios","Button","Flex","FormControl","FormLabel","Heading","Input","Stack","useColorModeValue","useToast","backend","Profile","props","toast","name","setname","email","setemail","username","setusername","organization","setOrganization","jwttoken","localStorage","getItem","getuser","requestOptions","headers","token","res","get","data","error","title","status","duration","isClosable","position","console","log","base","sm","color","e","target","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { backend } from \"../../server_urls\";\n\nconst Profile = (props) => {\n  const toast = useToast();\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  useEffect(() => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n\n    const getuser = async () => {\n      try {\n        const requestOptions = {\n          headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n        };\n        const res = await axios.get(\n          // \"http://localhost:5002/api/users/me\",\n          backend + \"/api/users/me\",\n          requestOptions\n        );\n        setname(res?.data.name);\n        setemail(res?.data.email);\n        setOrganization(res?.data.organization);\n        setusername(res?.data.username);\n      } catch (error) {\n        toast({\n          title: \"Something went wrong\",\n          status: \"error\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\",\n        });\n        console.log(error);\n      }\n    };\n\n    getuser();\n  }, []);\n  return (\n    <Flex\n      minH={\"85vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n    >\n      <Stack\n        spacing={4}\n        w={\"full\"}\n        maxW={\"md\"}\n        bg={useColorModeValue(\"white\", \"gray.700\")}\n        rounded={\"xl\"}\n        boxShadow={\"lg\"}\n        p={6}\n        my={12}\n      >\n        <Heading lineHeight={1.1} fontSize={{ base: \"2xl\", sm: \"3xl\" }}>\n          User Profile Edit\n        </Heading>\n        <FormControl id=\"userName\" isRequired>\n          <FormLabel>Full Name</FormLabel>\n          <Input\n            placeholder=\"Full Name\"\n            _placeholder={{ color: \"gray.500\" }}\n            value={name}\n            onChange={(e) => setname(e.target.value)}\n            type=\"text\"\n          />\n        </FormControl>\n        <FormControl id=\"email\" isReadOnly>\n          <FormLabel>Email address</FormLabel>\n          <Input\n            placeholder=\"your-email@example.com\"\n            type=\"email\"\n            backgroundColor=\"lightgray\"\n            value={email}\n          />\n        </FormControl>\n        <FormControl id=\"username\" isRequired>\n          <FormLabel>Username</FormLabel>\n          <Input\n            placeholder=\"UserName\"\n            _placeholder={{ color: \"gray.500\" }}\n            type=\"text\"\n            value={username}\n            onChange={(e) => setusername(e.target.value)}\n          />\n        </FormControl>\n        <FormControl id=\"organization\" isReadOnly>\n          <FormLabel>Organization</FormLabel>\n          <Input\n            placeholder=\"Organization\"\n            type=\"text\"\n            value={organization}\n            backgroundColor=\"lightgray\"\n          />\n        </FormControl>\n\n        <Stack spacing={6} direction={[\"column\", \"row\"]}>\n          {/* <Button\n            bg={\"blue.400\"}\n            color={\"white\"}\n            w=\"full\"\n            _hover={{\n              bg: \"blue.500\",\n            }}\n          >\n            Submit\n          </Button> */}\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}