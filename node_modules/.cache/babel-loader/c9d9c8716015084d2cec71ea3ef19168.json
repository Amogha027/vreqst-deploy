{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/Components/Auth/Login.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions/authActions\";\nimport { Box, Stack, Heading, Container, Input, Button, SimpleGrid, FormControl, FormLabel, FormErrorMessage, Link as CLink, Text } from \"@chakra-ui/react\";\nimport { Blur } from \"./Blur\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.onChangePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.loginSubmit = e => {\n      this.setState({\n        loading: true\n      });\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    var _this$state$errors, _this$state$errors2, _this$state$errors3, _this$state$errors4, _this$state$errors5, _this$state$errors6;\n\n    return React.createElement(Box, {\n      position: \"relative\",\n      minH: \"85vh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Container, {\n      as: SimpleGrid,\n      maxW: \"7xl\",\n      columns: {\n        base: 1,\n        md: 2\n      },\n      spacing: {\n        base: 10,\n        lg: 32\n      },\n      py: {\n        base: 10,\n        sm: 20,\n        lg: 32\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Stack, {\n      spacing: {\n        base: 10,\n        md: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Heading, {\n      lineHeight: 0.2,\n      fontSize: {\n        base: \"3xl\",\n        sm: \"4xl\",\n        md: \"5xl\",\n        lg: \"6xl\"\n      },\n      textColor: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"VReqST\")), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Text, {\n      color: \"black\",\n      fontSize: {\n        base: \"sm\",\n        sm: \"2xl\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Now author clear requirement specifications with less hassle for Virtual Reality Software Products\")), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"assets/vr.png\",\n      alt: \"VR Image\",\n      width: \"250px\",\n      height: \"100px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(Stack, {\n      bg: \"gray.50\",\n      rounded: \"xl\",\n      p: {\n        base: 4,\n        sm: 6,\n        md: 8\n      },\n      spacing: {\n        base: 8\n      },\n      maxW: {\n        lg: \"lg\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Stack, {\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Heading, {\n      color: \"gray.800\",\n      lineHeight: 1.1,\n      fontSize: {\n        base: \"2xl\",\n        sm: \"3xl\",\n        md: \"4xl\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Box, {\n      as: \"form\",\n      mt: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Stack, {\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      isRequired: true,\n      isInvalid: (_this$state$errors = this.state.errors) === null || _this$state$errors === void 0 ? void 0 : _this$state$errors.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      color: \"gray.800\",\n      fontSize: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Input, {\n      placeholder: \"Enter your email\",\n      bg: \"gray.100\",\n      border: 0,\n      color: \"gray.500\",\n      _placeholder: {\n        color: \"gray.500\"\n      },\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), ((_this$state$errors2 = this.state.errors) === null || _this$state$errors2 === void 0 ? void 0 : _this$state$errors2.email) && React.createElement(FormErrorMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.errors.email)), React.createElement(FormControl, {\n      isRequired: true,\n      isInvalid: ((_this$state$errors3 = this.state.errors) === null || _this$state$errors3 === void 0 ? void 0 : _this$state$errors3.passwordIncorrect) || ((_this$state$errors4 = this.state.errors) === null || _this$state$errors4 === void 0 ? void 0 : _this$state$errors4.password),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      color: \"gray.800\",\n      fontSize: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      placeholder: \"Enter your password\",\n      bg: \"gray.100\",\n      border: 0,\n      color: \"gray.500\",\n      _placeholder: {\n        color: \"gray.500\"\n      },\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), ((_this$state$errors5 = this.state.errors) === null || _this$state$errors5 === void 0 ? void 0 : _this$state$errors5.passwordIncorrect) && React.createElement(FormErrorMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.errors.passwordIncorrect), ((_this$state$errors6 = this.state.errors) === null || _this$state$errors6 === void 0 ? void 0 : _this$state$errors6.password) && React.createElement(FormErrorMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.errors.password))), React.createElement(Box, {\n      color: \"black\",\n      py: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"New User?\", \" \", React.createElement(CLink, {\n      as: Link,\n      color: \"red.400\",\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Register\")), React.createElement(Button, {\n      isLoading: this.state.loading,\n      loadingText: \"Logging in\",\n      fontFamily: \"heading\",\n      mt: 3,\n      w: \"full\",\n      bgGradient: \"linear(to-r, red.400,pink.400)\",\n      color: \"white\",\n      _hover: {\n        bgGradient: \"linear(to-r, red.400,pink.400)\",\n        boxShadow: \"xl\"\n      },\n      onClick: this.loginSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Login\")))), React.createElement(Blur, {\n      position: \"absolute\",\n      top: -150,\n      left: -150,\n      style: {\n        filter: \"blur(70px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/Components/Auth/Login.jsx"],"names":["React","Component","Link","PropTypes","connect","loginUser","Box","Stack","Heading","Container","Input","Button","SimpleGrid","FormControl","FormLabel","FormErrorMessage","CLink","Text","Blur","Login","constructor","props","onChangeEmail","e","setState","email","target","value","onChangePassword","password","loginSubmit","loading","preventDefault","userData","state","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","base","md","lg","sm","color","passwordIncorrect","bgGradient","boxShadow","filter","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../redux/actions/authActions\";\n\nimport {\n  Box,\n  Stack,\n  Heading,\n  Container,\n  Input,\n  Button,\n  SimpleGrid,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Link as CLink,\n  Text,\n} from \"@chakra-ui/react\";\nimport { Blur } from \"./Blur\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChangeEmail = (e) => {\n    this.setState({ email: e.target.value });\n  };\n\n  onChangePassword = (e) => {\n    this.setState({ password: e.target.value });\n  };\n\n  loginSubmit = (e) => {\n    this.setState({ loading: true });\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    this.props.loginUser(userData);\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <Box position={\"relative\"} minH=\"85vh\">\n        <Container\n          as={SimpleGrid}\n          maxW={\"7xl\"}\n          columns={{ base: 1, md: 2 }}\n          spacing={{ base: 10, lg: 32 }}\n          py={{ base: 10, sm: 20, lg: 32 }}\n        >\n          <Stack spacing={{ base: 10, md: 20 }}>\n          <center>\n            <Heading\n              lineHeight={0.2}\n              fontSize={{ base: \"3xl\", sm: \"4xl\", md: \"5xl\", lg: \"6xl\" }}\n              textColor={\"black\"}\n            >\n              VReqST\n            </Heading>\n            </center>\n            <center>\n            <Text color={\"black\"} fontSize={{ base: \"sm\", sm: \"2xl\" }}>\n              Now author clear requirement specifications with less hassle for Virtual Reality Software Products\n            </Text>\n            </center>\n            <center>\n              <img src=\"assets/vr.png\" alt=\"VR Image\" width=\"250px\" height=\"100px\"/>\n            </center>\n            {/* <center>\n            <Text color={\"gray.300\"} fontSize={{ base: \"sm\", sm: \"2x2\" }}>\n              VReqST is a Tool support for writing clear requirement specifications while building Virtual Reality Software Products.It can be used by Requirement Analysts to record the elicited requirements with business stake-holders in detail.\n            </Text>\n            </center> */}\n          </Stack>\n          <Stack\n            bg={\"gray.50\"}\n            rounded={\"xl\"}\n            p={{ base: 4, sm: 6, md: 8 }}\n            spacing={{ base: 8 }}\n            maxW={{ lg: \"lg\" }}\n          >\n            <Stack spacing={4}>\n              <Heading\n                color={\"gray.800\"}\n                lineHeight={1.1}\n                fontSize={{ base: \"2xl\", sm: \"3xl\", md: \"4xl\" }}\n              >\n                Login\n              </Heading>\n            </Stack>\n            <Box as={\"form\"} mt={10}>\n              <Stack spacing={4}>\n                <FormControl isRequired isInvalid={this.state.errors?.email}>\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Email address\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your email\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                  />\n                  {this.state.errors?.email && (\n                    <FormErrorMessage>\n                      {this.state.errors.email}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n\n                <FormControl\n                  isRequired\n                  isInvalid={\n                    this.state.errors?.passwordIncorrect ||\n                    this.state.errors?.password\n                  }\n                >\n                  <FormLabel color={\"gray.800\"} fontSize={\"sm\"}>\n                    Password\n                  </FormLabel>\n                  <Input\n                    placeholder=\"Enter your password\"\n                    bg={\"gray.100\"}\n                    border={0}\n                    color={\"gray.500\"}\n                    _placeholder={{\n                      color: \"gray.500\",\n                    }}\n                    type=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                  />\n                  {this.state.errors?.passwordIncorrect && (\n                    <FormErrorMessage>\n                      {this.state.errors.passwordIncorrect}\n                    </FormErrorMessage>\n                  )}\n                  {this.state.errors?.password && (\n                    <FormErrorMessage>\n                      {this.state.errors.password}\n                    </FormErrorMessage>\n                  )}\n                </FormControl>\n              </Stack>\n              <Box color={\"black\"} py={2}>\n                New User?{\" \"}\n                <CLink as={Link} color=\"red.400\" to={\"/register\"}>\n                  Register\n                </CLink>\n              </Box>\n              <Button\n                isLoading={this.state.loading}\n                loadingText=\"Logging in\"\n                fontFamily={\"heading\"}\n                mt={3}\n                w={\"full\"}\n                bgGradient=\"linear(to-r, red.400,pink.400)\"\n                color={\"white\"}\n                _hover={{\n                  bgGradient: \"linear(to-r, red.400,pink.400)\",\n                  boxShadow: \"xl\",\n                }}\n                onClick={this.loginSubmit}\n              >\n                Login\n              </Button>\n            </Box>\n          </Stack>\n        </Container>\n        <Blur\n          position={\"absolute\"}\n          top={-150}\n          left={-150}\n          style={{ filter: \"blur(70px)\" }}\n        />\n      </Box>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n"]},"metadata":{},"sourceType":"module"}