{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchedData = void 0;\n\nvar _ = require(\"lodash\");\n\nvar base_1 = require(\"./base\");\n/**\n * Extracts data validated or sanitized from the request, and builds an object with them.\n *\n * @param req the express request object\n * @param options\n * @returns an object of data that's been validated or sanitized in the passed request\n */\n\n\nfunction matchedData(req) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var internalReq = req;\n  var fieldExtractor = createFieldExtractor(options.includeOptionals !== true);\n  var validityFilter = createValidityFilter(options.onlyValidData);\n  var locationFilter = createLocationFilter(options.locations);\n  return _(internalReq[base_1.contextsKey]).flatMap(fieldExtractor).filter(validityFilter).map(function (field) {\n    return field.instance;\n  }).filter(locationFilter).reduce(function (state, instance) {\n    return _.set(state, instance.path, instance.value);\n  }, {}).valueOf();\n}\n\nexports.matchedData = matchedData;\n\nfunction createFieldExtractor(removeOptionals) {\n  return function (context) {\n    var instances = context.getData({\n      requiredOnly: removeOptionals\n    });\n    return instances.map(function (instance) {\n      return {\n        instance: instance,\n        context: context\n      };\n    });\n  };\n}\n\nfunction createValidityFilter() {\n  var onlyValidData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return !onlyValidData ? function () {\n    return true;\n  } : function (field) {\n    var hasError = field.context.errors.some(function (error) {\n      return error.location === field.instance.location && error.param === field.instance.path;\n    });\n    return !hasError;\n  };\n}\n\nfunction createLocationFilter() {\n  var locations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  // No locations mean all locations\n  var allLocations = locations.length === 0;\n  return allLocations ? function () {\n    return true;\n  } : function (field) {\n    return locations.includes(field.location);\n  };\n}","map":{"version":3,"sources":["/home/amogha/btp/deploy/VReqST-2/VReqST-main/VReqST/frontend/client/node_modules/express-validator/src/matched-data.js"],"names":["Object","defineProperty","exports","value","matchedData","_","require","base_1","req","options","internalReq","fieldExtractor","createFieldExtractor","includeOptionals","validityFilter","createValidityFilter","onlyValidData","locationFilter","createLocationFilter","locations","contextsKey","flatMap","filter","map","field","instance","reduce","state","set","path","valueOf","removeOptionals","context","instances","getData","requiredOnly","hasError","errors","some","error","location","param","allLocations","length","includes"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;;AACA,IAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;AACA;;;;;;;;;AAOA,SAASF,WAAT,CAAqBI,GAArB,EAAwC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AACpC,MAAMC,WAAW,GAAGF,GAApB;AACA,MAAMG,cAAc,GAAGC,oBAAoB,CAACH,OAAO,CAACI,gBAAR,KAA6B,IAA9B,CAA3C;AACA,MAAMC,cAAc,GAAGC,oBAAoB,CAACN,OAAO,CAACO,aAAT,CAA3C;AACA,MAAMC,cAAc,GAAGC,oBAAoB,CAACT,OAAO,CAACU,SAAT,CAA3C;AACA,SAAOd,CAAC,CAACK,WAAW,CAACH,MAAM,CAACa,WAAR,CAAZ,CAAD,CACFC,OADE,CACMV,cADN,EAEFW,MAFE,CAEKR,cAFL,EAGFS,GAHE,CAGE,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAV;AAAA,GAHP,EAIFH,MAJE,CAIKL,cAJL,EAKFS,MALE,CAKK,UAACC,KAAD,EAAQF,QAAR;AAAA,WAAqBpB,CAAC,CAACuB,GAAF,CAAMD,KAAN,EAAaF,QAAQ,CAACI,IAAtB,EAA4BJ,QAAQ,CAACtB,KAArC,CAArB;AAAA,GALL,EAKuE,EALvE,EAMF2B,OANE,EAAP;AAOH;;AACD5B,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AACA,SAASQ,oBAAT,CAA8BmB,eAA9B,EAA+C;AAC3C,SAAO,UAACC,OAAD,EAAa;AAChB,QAAMC,SAAS,GAAGD,OAAO,CAACE,OAAR,CAAgB;AAAEC,MAAAA,YAAY,EAAEJ;AAAhB,KAAhB,CAAlB;AACA,WAAOE,SAAS,CAACV,GAAV,CAAc,UAACE,QAAD;AAAA,aAAe;AAAEA,QAAAA,QAAQ,EAARA,QAAF;AAAYO,QAAAA,OAAO,EAAPA;AAAZ,OAAf;AAAA,KAAd,CAAP;AACH,GAHD;AAIH;;AACD,SAASjB,oBAAT,GAAoD;AAAA,MAAtBC,aAAsB,uEAAN,IAAM;AAChD,SAAO,CAACA,aAAD,GACD;AAAA,WAAM,IAAN;AAAA,GADC,GAED,UAACQ,KAAD,EAAW;AACT,QAAMY,QAAQ,GAAGZ,KAAK,CAACQ,OAAN,CAAcK,MAAd,CAAqBC,IAArB,CAA0B,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,QAAN,KAAmBhB,KAAK,CAACC,QAAN,CAAee,QAAlC,IAA8CD,KAAK,CAACE,KAAN,KAAgBjB,KAAK,CAACC,QAAN,CAAeI,IAAjF;AAAA,KAA/B,CAAjB;AACA,WAAO,CAACO,QAAR;AACH,GALL;AAMH;;AACD,SAASlB,oBAAT,GAA8C;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;AAC1C;AACA,MAAMuB,YAAY,GAAGvB,SAAS,CAACwB,MAAV,KAAqB,CAA1C;AACA,SAAOD,YAAY,GAAG;AAAA,WAAM,IAAN;AAAA,GAAH,GAAgB,UAAClB,KAAD;AAAA,WAAWL,SAAS,CAACyB,QAAV,CAAmBpB,KAAK,CAACgB,QAAzB,CAAX;AAAA,GAAnC;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matchedData = void 0;\nconst _ = require(\"lodash\");\nconst base_1 = require(\"./base\");\n/**\n * Extracts data validated or sanitized from the request, and builds an object with them.\n *\n * @param req the express request object\n * @param options\n * @returns an object of data that's been validated or sanitized in the passed request\n */\nfunction matchedData(req, options = {}) {\n    const internalReq = req;\n    const fieldExtractor = createFieldExtractor(options.includeOptionals !== true);\n    const validityFilter = createValidityFilter(options.onlyValidData);\n    const locationFilter = createLocationFilter(options.locations);\n    return _(internalReq[base_1.contextsKey])\n        .flatMap(fieldExtractor)\n        .filter(validityFilter)\n        .map(field => field.instance)\n        .filter(locationFilter)\n        .reduce((state, instance) => _.set(state, instance.path, instance.value), {})\n        .valueOf();\n}\nexports.matchedData = matchedData;\nfunction createFieldExtractor(removeOptionals) {\n    return (context) => {\n        const instances = context.getData({ requiredOnly: removeOptionals });\n        return instances.map((instance) => ({ instance, context }));\n    };\n}\nfunction createValidityFilter(onlyValidData = true) {\n    return !onlyValidData\n        ? () => true\n        : (field) => {\n            const hasError = field.context.errors.some(error => error.location === field.instance.location && error.param === field.instance.path);\n            return !hasError;\n        };\n}\nfunction createLocationFilter(locations = []) {\n    // No locations mean all locations\n    const allLocations = locations.length === 0;\n    return allLocations ? () => true : (field) => locations.includes(field.location);\n}\n"]},"metadata":{},"sourceType":"script"}