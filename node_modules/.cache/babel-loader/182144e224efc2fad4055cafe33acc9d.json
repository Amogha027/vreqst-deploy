{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/Components/AddFile/AddFile.jsx\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Box, Breadcrumb, BreadcrumbItem, BreadcrumbLink, Button, Center, Flex, FormControl, FormLabel, Input, Radio, RadioGroup, Stack, useToast, Switch } from \"@chakra-ui/react\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport { FaSave } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\nimport isJson from \"../../utils/checkjson\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\n\nconst AddFile = () => {\n  const [filename, setfilename] = useState(\"\");\n  const [data, setdata] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [grammarfor, setGrammarfor] = React.useState(\"scene\");\n  const [privateFile, setPrivateFile] = React.useState(false);\n  const history = useHistory();\n  const toast = useToast();\n\n  function onChange(newValue) {\n    setdata(newValue);\n  }\n\n  const submitform = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    setLoading(true);\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      }; //  if (grammarfor==\"scene\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"action\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"asset\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"custom\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"timeline\"){ let url =\"http://localhost:5002/api/json/upload\";}\n\n      await axios.post( // \"http://localhost:5002/api/json/upload\",\n      backend + \"/api/json/upload\", {\n        name: filename,\n        private: privateFile\n      }, requestOptions);\n      history.push(\"/myfiles\");\n      setLoading(false);\n      toast({\n        title: \"File saved successfully\",\n        status: \"success\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Breadcrumb, {\n    spacing: \"8px\",\n    pt: 5,\n    pl: 5,\n    separator: React.createElement(ChevronRightIcon, {\n      color: \"gray.500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(BreadcrumbLink, {\n    as: Link,\n    to: \"/myfiles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"My Validators\")), React.createElement(BreadcrumbItem, {\n    isCurrentPage: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(BreadcrumbLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Add Validator\"))), React.createElement(Flex, {\n    backgroundColor: \"white\",\n    flexDir: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    py: \"100px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    boxShadow: \"xl\",\n    p: 8,\n    rounded: \"xl\",\n    align: \"center\",\n    borderWidth: \"1px\",\n    borderColor: \"gray.400\",\n    mb: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    justifyContent: \"center\",\n    flexDir: \"column\",\n    backgroundColor: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Box, {\n    p: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Input, {\n    colorScheme: \"yellow\",\n    placeholder: \"Validator Name\",\n    isRequired: true,\n    onChange: e => setfilename(e.target.value),\n    value: filename,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(FormControl, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    pb: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    htmlFor: \"public-file\",\n    mb: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Private\"), React.createElement(Switch, {\n    id: \"public-file\",\n    defaultChecked: privateFile,\n    onChange: () => {\n      setPrivateFile(!privateFile);\n\n      if (!privateFile) {\n        toast({\n          title: \"Enabled! The File will be only visible to you.\",\n          status: \"success\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\"\n        });\n      } else {\n        toast({\n          title: \"Disabled! File is publicly visible.\",\n          status: \"success\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\"\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })))), React.createElement(Box, {\n    mx: \"40px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Center, {\n    minW: \"max-content\",\n    justifyContent: \"center\",\n    my: \"20px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Button, {\n    leftIcon: React.createElement(FaSave, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }),\n    colorScheme: \"yellow\",\n    onClick: submitform,\n    isLoading: loading,\n    isDisabled: !filename,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Create Validator\"))));\n};\n\nexport default AddFile;","map":{"version":3,"sources":["/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/Components/AddFile/AddFile.jsx"],"names":["axios","React","useState","AceEditor","Box","Breadcrumb","BreadcrumbItem","BreadcrumbLink","Button","Center","Flex","FormControl","FormLabel","Input","Radio","RadioGroup","Stack","useToast","Switch","FaSave","Link","useHistory","backend","isJson","ChevronRightIcon","AddFile","filename","setfilename","data","setdata","loading","setLoading","grammarfor","setGrammarfor","privateFile","setPrivateFile","history","toast","onChange","newValue","submitform","jwttoken","localStorage","getItem","requestOptions","headers","token","post","name","private","push","title","status","duration","isClosable","position","error","console","log","e","target","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Button,\n  Center,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Radio,\n  RadioGroup,\n  Stack,\n  useToast,\n  Switch,\n} from \"@chakra-ui/react\";\n\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport { FaSave } from \"react-icons/fa\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { backend } from \"../../server_urls\";\n\nimport isJson from \"../../utils/checkjson\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\n\nconst AddFile = () => {\n  const [filename, setfilename] = useState(\"\");\n  const [data, setdata] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [grammarfor, setGrammarfor] = React.useState(\"scene\");\n  const [privateFile, setPrivateFile] = React.useState(false);\n  const history = useHistory();\n  const toast = useToast();\n\n  function onChange(newValue) {\n    setdata(newValue);\n  }\n\n  const submitform = async () => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n    setLoading(true);\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      //  if (grammarfor==\"scene\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"action\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"asset\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"custom\"){ let url =\"http://localhost:5002/api/json/upload\";}\n      //  if (grammarfor==\"timeline\"){ let url =\"http://localhost:5002/api/json/upload\";}\n\n\n      await axios.post(\n        // \"http://localhost:5002/api/json/upload\",\n        backend + \"/api/json/upload\",\n        { name: filename, private: privateFile },\n        requestOptions\n      );\n      history.push(\"/myfiles\");\n      setLoading(false);\n      toast({\n        title: \"File saved successfully\",\n        status: \"success\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <Breadcrumb\n        spacing=\"8px\"\n        pt={5}\n        pl={5}\n        separator={<ChevronRightIcon color=\"gray.500\" />}\n      >\n        <BreadcrumbItem>\n          <BreadcrumbLink as={Link} to=\"/myfiles\">\n            My Validators\n          </BreadcrumbLink>\n        </BreadcrumbItem>\n\n        <BreadcrumbItem isCurrentPage>\n          <BreadcrumbLink>Add Validator</BreadcrumbLink>\n        </BreadcrumbItem>\n      </Breadcrumb>\n      <Flex\n        backgroundColor={\"white\"}\n        flexDir={\"column\"}\n        justifyContent={\"center\"}\n        alignItems=\"center\"\n        py=\"100px\"\n      >\n        <Flex\n          boxShadow={\"xl\"}\n          p={8}\n          rounded={\"xl\"}\n          align={\"center\"}\n          borderWidth={\"1px\"}\n          borderColor=\"gray.400\"\n          mb={5}\n        >\n          <Flex justifyContent=\"center\" flexDir={\"column\"} backgroundColor={\"white\"}>\n            <Box p=\"2\">\n              <Input\n                colorScheme=\"yellow\"\n                placeholder=\"Validator Name\"\n                isRequired\n                onChange={(e) => setfilename(e.target.value)}\n                value={filename}\n              />\n            </Box>\n            <FormControl display=\"flex\" justifyContent=\"center\" pb={2}>\n              <FormLabel htmlFor=\"public-file\" mb=\"0\">\n                Private\n              </FormLabel>\n              <Switch\n                id=\"public-file\"\n                defaultChecked={privateFile}\n                onChange={() => {\n                  setPrivateFile(!privateFile);\n                  if (!privateFile) {\n                    toast({\n                      title: \"Enabled! The File will be only visible to you.\",\n                      status: \"success\",\n                      duration: 10000,\n                      isClosable: true,\n                      position: \"top\",\n                    })\n                  }\n                  else\n                  {\n                    toast({\n                      title: \"Disabled! File is publicly visible.\",\n                      status: \"success\",\n                      duration: 10000,\n                      isClosable: true,\n                      position: \"top\",\n                    })\n                  }\n                }}\n              />\n            </FormControl>\n          </Flex>\n        </Flex>\n        <Box mx={\"40px\"}>\n        </Box>\n        <Center minW=\"max-content\" justifyContent={\"center\"} my={\"20px\"}>\n          <Button\n            leftIcon={<FaSave />}\n            colorScheme=\"yellow\"\n            onClick={submitform}\n            isLoading={loading}\n            isDisabled={!filename}\n          >\n            Create Validator\n          </Button>\n        </Center>\n      </Flex>\n    </>\n  );\n};\n\nexport default AddFile;\n"]},"metadata":{},"sourceType":"module"}