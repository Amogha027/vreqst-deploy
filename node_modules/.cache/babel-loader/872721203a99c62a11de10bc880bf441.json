{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidatorsImpl = void 0;\n\nvar validator = require(\"validator\");\n\nvar context_items_1 = require(\"../context-items\");\n\nvar ValidatorsImpl =\n/*#__PURE__*/\nfunction () {\n  function ValidatorsImpl(builder, chain) {\n    _classCallCheck(this, ValidatorsImpl);\n\n    this.builder = builder;\n    this.chain = chain;\n    this.negateNext = false;\n  }\n\n  _createClass(ValidatorsImpl, [{\n    key: \"addItem\",\n    value: function addItem(item) {\n      this.builder.addItem(item);\n      this.lastValidator = item; // Reset this.negateNext so that next validation isn't negated too\n\n      this.negateNext = false;\n      return this.chain;\n    } // validation manipulation\n\n  }, {\n    key: \"not\",\n    value: function not() {\n      this.negateNext = true;\n      return this.chain;\n    }\n  }, {\n    key: \"withMessage\",\n    value: function withMessage(message) {\n      this.lastValidator.message = message;\n      return this.chain;\n    } // custom validators\n\n  }, {\n    key: \"custom\",\n    value: function custom(validator) {\n      return this.addItem(new context_items_1.CustomValidation(validator, this.negateNext));\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var validator;\n\n      if (options.checkFalsy) {\n        validator = function validator(value) {\n          return !!value;\n        };\n      } else if (options.checkNull) {\n        validator = function validator(value) {\n          return value != null;\n        };\n      } else {\n        validator = function validator(value) {\n          return value !== undefined;\n        };\n      }\n\n      return this.custom(validator);\n    }\n  }, {\n    key: \"isArray\",\n    value: function isArray() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.custom(function (value) {\n        return Array.isArray(value) && (typeof options.min === 'undefined' || value.length >= options.min) && (typeof options.max === 'undefined' || value.length <= options.max);\n      });\n    }\n  }, {\n    key: \"isObject\",\n    value: function isObject() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        strict: true\n      };\n      return this.custom(function (value) {\n        return typeof value === 'object' && (options.strict ? value !== null && !Array.isArray(value) : true);\n      });\n    }\n  }, {\n    key: \"isString\",\n    value: function isString() {\n      return this.custom(function (value) {\n        return typeof value === 'string';\n      });\n    }\n  }, {\n    key: \"notEmpty\",\n    value: function notEmpty(options) {\n      this.not();\n      return this.isEmpty(options);\n    } // Standard validators\n\n  }, {\n    key: \"addStandardValidation\",\n    value: function addStandardValidation(validator) {\n      for (var _len = arguments.length, options = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        options[_key - 1] = arguments[_key];\n      }\n\n      return this.addItem(new context_items_1.StandardValidation(validator, this.negateNext, options));\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(elem, options) {\n      return this.addStandardValidation(validator.contains, elem, options);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(comparison) {\n      return this.addStandardValidation(validator.equals, comparison);\n    }\n  }, {\n    key: \"isAfter\",\n    value: function isAfter(dateOrOptions) {\n      return this.addStandardValidation(validator.isAfter, dateOrOptions);\n    }\n  }, {\n    key: \"isAlpha\",\n    value: function isAlpha(locale, options) {\n      // TODO(v7): remove string[] support\n      var ignore = Array.isArray(options === null || options === void 0 ? void 0 : options.ignore) ? options === null || options === void 0 ? void 0 : options.ignore.join('') : options === null || options === void 0 ? void 0 : options.ignore;\n      return this.addStandardValidation(validator.isAlpha, locale, Object.assign(Object.assign({}, options), {\n        ignore: ignore\n      }));\n    }\n  }, {\n    key: \"isAlphanumeric\",\n    value: function isAlphanumeric(locale, options) {\n      return this.addStandardValidation(validator.isAlphanumeric, locale, options);\n    }\n  }, {\n    key: \"isAscii\",\n    value: function isAscii() {\n      return this.addStandardValidation(validator.isAscii);\n    }\n  }, {\n    key: \"isBase32\",\n    value: function isBase32(options) {\n      return this.addStandardValidation(validator.isBase32, options);\n    }\n  }, {\n    key: \"isBase58\",\n    value: function isBase58() {\n      return this.addStandardValidation(validator.isBase58);\n    }\n  }, {\n    key: \"isBase64\",\n    value: function isBase64(options) {\n      return this.addStandardValidation(validator.isBase64, options);\n    }\n  }, {\n    key: \"isBefore\",\n    value: function isBefore(date) {\n      return this.addStandardValidation(validator.isBefore, date);\n    }\n  }, {\n    key: \"isBIC\",\n    value: function isBIC() {\n      return this.addStandardValidation(validator.isBIC);\n    }\n    /**\n     * There are basically three levels of strictness for this validator.\n     * Passing `{ strict: true }` as option only passes the validation if the value is a JS bool. (It also overrides the loose property of the options).\n     * Passing `{ loose: true|false }` along with no `strict` prop of with `strict` falsy follows the behaviour specified in validator.js docs.\n     */\n\n  }, {\n    key: \"isBoolean\",\n    value: function isBoolean(options) {\n      if (options === null || options === void 0 ? void 0 : options.strict) {\n        return this.custom(function (value) {\n          return value === true || value === false;\n        });\n      }\n\n      return this.addStandardValidation(validator.isBoolean, options);\n    }\n  }, {\n    key: \"isBtcAddress\",\n    value: function isBtcAddress() {\n      return this.addStandardValidation(validator.isBtcAddress);\n    }\n  }, {\n    key: \"isByteLength\",\n    value: function isByteLength(options) {\n      return this.addStandardValidation(validator.isByteLength, options);\n    }\n  }, {\n    key: \"isCreditCard\",\n    value: function isCreditCard() {\n      return this.addStandardValidation(validator.isCreditCard);\n    }\n  }, {\n    key: \"isCurrency\",\n    value: function isCurrency(options) {\n      return this.addStandardValidation(validator.isCurrency, options);\n    }\n  }, {\n    key: \"isDataURI\",\n    value: function isDataURI() {\n      return this.addStandardValidation(validator.isDataURI);\n    }\n  }, {\n    key: \"isDate\",\n    value: function isDate(options) {\n      return this.addStandardValidation(validator.isDate, options);\n    }\n  }, {\n    key: \"isDecimal\",\n    value: function isDecimal(options) {\n      return this.addStandardValidation(validator.isDecimal, options);\n    }\n  }, {\n    key: \"isDivisibleBy\",\n    value: function isDivisibleBy(number) {\n      return this.addStandardValidation(validator.isDivisibleBy, number);\n    }\n  }, {\n    key: \"isEAN\",\n    value: function isEAN() {\n      return this.addStandardValidation(validator.isEAN);\n    }\n  }, {\n    key: \"isEmail\",\n    value: function isEmail(options) {\n      return this.addStandardValidation(validator.isEmail, options);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty(options) {\n      return this.addStandardValidation(validator.isEmpty, options);\n    }\n  }, {\n    key: \"isEthereumAddress\",\n    value: function isEthereumAddress() {\n      return this.addStandardValidation(validator.isEthereumAddress);\n    }\n  }, {\n    key: \"isFQDN\",\n    value: function isFQDN(options) {\n      return this.addStandardValidation(validator.isFQDN, options);\n    }\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(options) {\n      return this.addStandardValidation(validator.isFloat, options);\n    }\n  }, {\n    key: \"isFullWidth\",\n    value: function isFullWidth() {\n      return this.addStandardValidation(validator.isFullWidth);\n    }\n  }, {\n    key: \"isHalfWidth\",\n    value: function isHalfWidth() {\n      return this.addStandardValidation(validator.isHalfWidth);\n    }\n  }, {\n    key: \"isHash\",\n    value: function isHash(algorithm) {\n      return this.addStandardValidation(validator.isHash, algorithm);\n    }\n  }, {\n    key: \"isHexColor\",\n    value: function isHexColor() {\n      return this.addStandardValidation(validator.isHexColor);\n    }\n  }, {\n    key: \"isHexadecimal\",\n    value: function isHexadecimal() {\n      return this.addStandardValidation(validator.isHexadecimal);\n    }\n  }, {\n    key: \"isHSL\",\n    value: function isHSL() {\n      return this.addStandardValidation(validator.isHSL);\n    }\n  }, {\n    key: \"isIBAN\",\n    value: function isIBAN() {\n      return this.addStandardValidation(validator.isIBAN);\n    }\n  }, {\n    key: \"isIdentityCard\",\n    value: function isIdentityCard(locale) {\n      return this.addStandardValidation(validator.isIdentityCard, locale);\n    }\n  }, {\n    key: \"isIMEI\",\n    value: function isIMEI(options) {\n      return this.addStandardValidation(validator.isIMEI, options);\n    }\n  }, {\n    key: \"isIP\",\n    value: function isIP(version) {\n      return this.addStandardValidation(validator.isIP, version);\n    }\n  }, {\n    key: \"isIPRange\",\n    value: function isIPRange(version) {\n      return this.addStandardValidation(validator.isIPRange, version);\n    }\n  }, {\n    key: \"isISBN\",\n    value: function isISBN(versionOrOptions) {\n      return this.addStandardValidation(validator.isISBN, versionOrOptions);\n    }\n  }, {\n    key: \"isISSN\",\n    value: function isISSN(options) {\n      return this.addStandardValidation(validator.isISSN, options);\n    }\n  }, {\n    key: \"isISIN\",\n    value: function isISIN() {\n      return this.addStandardValidation(validator.isISIN);\n    }\n  }, {\n    key: \"isISO6391\",\n    value: function isISO6391() {\n      return this.addStandardValidation(validator.isISO6391);\n    }\n  }, {\n    key: \"isISO8601\",\n    value: function isISO8601(options) {\n      return this.addStandardValidation(validator.isISO8601, options);\n    }\n  }, {\n    key: \"isISO31661Alpha2\",\n    value: function isISO31661Alpha2() {\n      return this.addStandardValidation(validator.isISO31661Alpha2);\n    }\n  }, {\n    key: \"isISO31661Alpha3\",\n    value: function isISO31661Alpha3() {\n      return this.addStandardValidation(validator.isISO31661Alpha3);\n    }\n  }, {\n    key: \"isISO4217\",\n    value: function isISO4217() {\n      return this.addStandardValidation(validator.isISO4217);\n    }\n  }, {\n    key: \"isISRC\",\n    value: function isISRC() {\n      return this.addStandardValidation(validator.isISRC);\n    }\n  }, {\n    key: \"isIn\",\n    value: function isIn(values) {\n      return this.addStandardValidation(validator.isIn, values);\n    }\n  }, {\n    key: \"isInt\",\n    value: function isInt(options) {\n      return this.addStandardValidation(validator.isInt, options);\n    }\n  }, {\n    key: \"isJSON\",\n    value: function isJSON(options) {\n      return this.addStandardValidation(validator.isJSON, options);\n    }\n  }, {\n    key: \"isJWT\",\n    value: function isJWT() {\n      return this.addStandardValidation(validator.isJWT);\n    }\n  }, {\n    key: \"isLatLong\",\n    value: function isLatLong(options) {\n      return this.addStandardValidation(validator.isLatLong, options);\n    }\n  }, {\n    key: \"isLength\",\n    value: function isLength(options) {\n      return this.addStandardValidation(validator.isLength, options);\n    }\n  }, {\n    key: \"isLicensePlate\",\n    value: function isLicensePlate(locale) {\n      return this.addStandardValidation(validator.isLicensePlate, locale);\n    }\n  }, {\n    key: \"isLocale\",\n    value: function isLocale() {\n      return this.addStandardValidation(validator.isLocale);\n    }\n  }, {\n    key: \"isLowercase\",\n    value: function isLowercase() {\n      return this.addStandardValidation(validator.isLowercase);\n    }\n  }, {\n    key: \"isLuhnNumber\",\n    value: function isLuhnNumber() {\n      return this.addStandardValidation(validator.isLuhnNumber);\n    }\n  }, {\n    key: \"isMagnetURI\",\n    value: function isMagnetURI() {\n      return this.addStandardValidation(validator.isMagnetURI);\n    }\n  }, {\n    key: \"isMACAddress\",\n    value: function isMACAddress(options) {\n      return this.addStandardValidation(validator.isMACAddress, options);\n    }\n  }, {\n    key: \"isMD5\",\n    value: function isMD5() {\n      return this.addStandardValidation(validator.isMD5);\n    }\n  }, {\n    key: \"isMimeType\",\n    value: function isMimeType() {\n      return this.addStandardValidation(validator.isMimeType);\n    }\n  }, {\n    key: \"isMobilePhone\",\n    value: function isMobilePhone(locale, options) {\n      return this.addStandardValidation(validator.isMobilePhone, locale, options);\n    }\n  }, {\n    key: \"isMongoId\",\n    value: function isMongoId() {\n      return this.addStandardValidation(validator.isMongoId);\n    }\n  }, {\n    key: \"isMultibyte\",\n    value: function isMultibyte() {\n      return this.addStandardValidation(validator.isMultibyte);\n    }\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric(options) {\n      return this.addStandardValidation(validator.isNumeric, options);\n    }\n  }, {\n    key: \"isOctal\",\n    value: function isOctal() {\n      return this.addStandardValidation(validator.isOctal);\n    }\n  }, {\n    key: \"isPassportNumber\",\n    value: function isPassportNumber(countryCode) {\n      return this.addStandardValidation(validator.isPassportNumber, countryCode);\n    }\n  }, {\n    key: \"isPort\",\n    value: function isPort() {\n      return this.addStandardValidation(validator.isPort);\n    }\n  }, {\n    key: \"isPostalCode\",\n    value: function isPostalCode(locale) {\n      return this.addStandardValidation(validator.isPostalCode, locale);\n    }\n  }, {\n    key: \"isRFC3339\",\n    value: function isRFC3339() {\n      return this.addStandardValidation(validator.isRFC3339);\n    }\n  }, {\n    key: \"isRgbColor\",\n    value: function isRgbColor(includePercentValues) {\n      return this.addStandardValidation(validator.isRgbColor, includePercentValues);\n    }\n  }, {\n    key: \"isSemVer\",\n    value: function isSemVer() {\n      return this.addStandardValidation(validator.isSemVer);\n    }\n  }, {\n    key: \"isSlug\",\n    value: function isSlug() {\n      return this.addStandardValidation(validator.isSlug);\n    }\n  }, {\n    key: \"isStrongPassword\",\n    value: function isStrongPassword(options) {\n      return this.addStandardValidation(validator.isStrongPassword, options);\n    }\n  }, {\n    key: \"isSurrogatePair\",\n    value: function isSurrogatePair() {\n      return this.addStandardValidation(validator.isSurrogatePair);\n    }\n  }, {\n    key: \"isTaxID\",\n    value: function isTaxID(locale) {\n      return this.addStandardValidation(validator.isTaxID, locale);\n    }\n  }, {\n    key: \"isTime\",\n    value: function isTime(options) {\n      return this.addStandardValidation(validator.isTime, options);\n    }\n  }, {\n    key: \"isURL\",\n    value: function isURL(options) {\n      return this.addStandardValidation(validator.isURL, options);\n    }\n  }, {\n    key: \"isUUID\",\n    value: function isUUID(version) {\n      return this.addStandardValidation(validator.isUUID, version);\n    }\n  }, {\n    key: \"isUppercase\",\n    value: function isUppercase() {\n      return this.addStandardValidation(validator.isUppercase);\n    }\n  }, {\n    key: \"isVariableWidth\",\n    value: function isVariableWidth() {\n      return this.addStandardValidation(validator.isVariableWidth);\n    }\n  }, {\n    key: \"isVAT\",\n    value: function isVAT(countryCode) {\n      return this.addStandardValidation(validator.isVAT, countryCode);\n    }\n  }, {\n    key: \"isWhitelisted\",\n    value: function isWhitelisted(chars) {\n      return this.addStandardValidation(validator.isWhitelisted, chars);\n    }\n  }, {\n    key: \"matches\",\n    value: function matches(pattern, modifiers) {\n      return this.addStandardValidation.apply(this, [validator.matches].concat(_toConsumableArray(typeof pattern === 'string' ? [pattern, modifiers] : [pattern.source, _toConsumableArray(new Set((modifiers || '') + pattern.flags)).join('')])));\n    }\n  }]);\n\n  return ValidatorsImpl;\n}();\n\nexports.ValidatorsImpl = ValidatorsImpl;","map":{"version":3,"sources":["/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/express-validator/src/chain/validators-impl.js"],"names":["Object","defineProperty","exports","value","ValidatorsImpl","validator","require","context_items_1","builder","chain","negateNext","item","addItem","lastValidator","message","CustomValidation","options","checkFalsy","checkNull","undefined","custom","Array","isArray","min","length","max","strict","not","isEmpty","StandardValidation","elem","addStandardValidation","contains","comparison","equals","dateOrOptions","isAfter","locale","ignore","join","isAlpha","assign","isAlphanumeric","isAscii","isBase32","isBase58","isBase64","date","isBefore","isBIC","isBoolean","isBtcAddress","isByteLength","isCreditCard","isCurrency","isDataURI","isDate","isDecimal","number","isDivisibleBy","isEAN","isEmail","isEthereumAddress","isFQDN","isFloat","isFullWidth","isHalfWidth","algorithm","isHash","isHexColor","isHexadecimal","isHSL","isIBAN","isIdentityCard","isIMEI","version","isIP","isIPRange","versionOrOptions","isISBN","isISSN","isISIN","isISO6391","isISO8601","isISO31661Alpha2","isISO31661Alpha3","isISO4217","isISRC","values","isIn","isInt","isJSON","isJWT","isLatLong","isLength","isLicensePlate","isLocale","isLowercase","isLuhnNumber","isMagnetURI","isMACAddress","isMD5","isMimeType","isMobilePhone","isMongoId","isMultibyte","isNumeric","isOctal","countryCode","isPassportNumber","isPort","isPostalCode","isRFC3339","includePercentValues","isRgbColor","isSemVer","isSlug","isStrongPassword","isSurrogatePair","isTaxID","isTime","isURL","isUUID","isUppercase","isVariableWidth","isVAT","chars","isWhitelisted","pattern","modifiers","apply","matches","source","Set","flags"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidatorsImpl = void 0;\nconst validator = require(\"validator\");\nconst context_items_1 = require(\"../context-items\");\nclass ValidatorsImpl {\n    constructor(builder, chain) {\n        this.builder = builder;\n        this.chain = chain;\n        this.negateNext = false;\n    }\n    addItem(item) {\n        this.builder.addItem(item);\n        this.lastValidator = item;\n        // Reset this.negateNext so that next validation isn't negated too\n        this.negateNext = false;\n        return this.chain;\n    }\n    // validation manipulation\n    not() {\n        this.negateNext = true;\n        return this.chain;\n    }\n    withMessage(message) {\n        this.lastValidator.message = message;\n        return this.chain;\n    }\n    // custom validators\n    custom(validator) {\n        return this.addItem(new context_items_1.CustomValidation(validator, this.negateNext));\n    }\n    exists(options = {}) {\n        let validator;\n        if (options.checkFalsy) {\n            validator = value => !!value;\n        }\n        else if (options.checkNull) {\n            validator = value => value != null;\n        }\n        else {\n            validator = value => value !== undefined;\n        }\n        return this.custom(validator);\n    }\n    isArray(options = {}) {\n        return this.custom(value => Array.isArray(value) &&\n            (typeof options.min === 'undefined' || value.length >= options.min) &&\n            (typeof options.max === 'undefined' || value.length <= options.max));\n    }\n    isObject(options = { strict: true }) {\n        return this.custom(value => typeof value === 'object' &&\n            (options.strict ? value !== null && !Array.isArray(value) : true));\n    }\n    isString() {\n        return this.custom(value => typeof value === 'string');\n    }\n    notEmpty(options) {\n        this.not();\n        return this.isEmpty(options);\n    }\n    // Standard validators\n    addStandardValidation(validator, ...options) {\n        return this.addItem(new context_items_1.StandardValidation(validator, this.negateNext, options));\n    }\n    contains(elem, options) {\n        return this.addStandardValidation(validator.contains, elem, options);\n    }\n    equals(comparison) {\n        return this.addStandardValidation(validator.equals, comparison);\n    }\n    isAfter(dateOrOptions) {\n        return this.addStandardValidation(validator.isAfter, dateOrOptions);\n    }\n    isAlpha(locale, options) {\n        // TODO(v7): remove string[] support\n        const ignore = Array.isArray(options === null || options === void 0 ? void 0 : options.ignore) ? options === null || options === void 0 ? void 0 : options.ignore.join('') : options === null || options === void 0 ? void 0 : options.ignore;\n        return this.addStandardValidation(validator.isAlpha, locale, Object.assign(Object.assign({}, options), { ignore }));\n    }\n    isAlphanumeric(locale, options) {\n        return this.addStandardValidation(validator.isAlphanumeric, locale, options);\n    }\n    isAscii() {\n        return this.addStandardValidation(validator.isAscii);\n    }\n    isBase32(options) {\n        return this.addStandardValidation(validator.isBase32, options);\n    }\n    isBase58() {\n        return this.addStandardValidation(validator.isBase58);\n    }\n    isBase64(options) {\n        return this.addStandardValidation(validator.isBase64, options);\n    }\n    isBefore(date) {\n        return this.addStandardValidation(validator.isBefore, date);\n    }\n    isBIC() {\n        return this.addStandardValidation(validator.isBIC);\n    }\n    /**\n     * There are basically three levels of strictness for this validator.\n     * Passing `{ strict: true }` as option only passes the validation if the value is a JS bool. (It also overrides the loose property of the options).\n     * Passing `{ loose: true|false }` along with no `strict` prop of with `strict` falsy follows the behaviour specified in validator.js docs.\n     */\n    isBoolean(options) {\n        if (options === null || options === void 0 ? void 0 : options.strict) {\n            return this.custom(value => {\n                return value === true || value === false;\n            });\n        }\n        return this.addStandardValidation(validator.isBoolean, options);\n    }\n    isBtcAddress() {\n        return this.addStandardValidation(validator.isBtcAddress);\n    }\n    isByteLength(options) {\n        return this.addStandardValidation(validator.isByteLength, options);\n    }\n    isCreditCard() {\n        return this.addStandardValidation(validator.isCreditCard);\n    }\n    isCurrency(options) {\n        return this.addStandardValidation(validator.isCurrency, options);\n    }\n    isDataURI() {\n        return this.addStandardValidation(validator.isDataURI);\n    }\n    isDate(options) {\n        return this.addStandardValidation(validator.isDate, options);\n    }\n    isDecimal(options) {\n        return this.addStandardValidation(validator.isDecimal, options);\n    }\n    isDivisibleBy(number) {\n        return this.addStandardValidation(validator.isDivisibleBy, number);\n    }\n    isEAN() {\n        return this.addStandardValidation(validator.isEAN);\n    }\n    isEmail(options) {\n        return this.addStandardValidation(validator.isEmail, options);\n    }\n    isEmpty(options) {\n        return this.addStandardValidation(validator.isEmpty, options);\n    }\n    isEthereumAddress() {\n        return this.addStandardValidation(validator.isEthereumAddress);\n    }\n    isFQDN(options) {\n        return this.addStandardValidation(validator.isFQDN, options);\n    }\n    isFloat(options) {\n        return this.addStandardValidation(validator.isFloat, options);\n    }\n    isFullWidth() {\n        return this.addStandardValidation(validator.isFullWidth);\n    }\n    isHalfWidth() {\n        return this.addStandardValidation(validator.isHalfWidth);\n    }\n    isHash(algorithm) {\n        return this.addStandardValidation(validator.isHash, algorithm);\n    }\n    isHexColor() {\n        return this.addStandardValidation(validator.isHexColor);\n    }\n    isHexadecimal() {\n        return this.addStandardValidation(validator.isHexadecimal);\n    }\n    isHSL() {\n        return this.addStandardValidation(validator.isHSL);\n    }\n    isIBAN() {\n        return this.addStandardValidation(validator.isIBAN);\n    }\n    isIdentityCard(locale) {\n        return this.addStandardValidation(validator.isIdentityCard, locale);\n    }\n    isIMEI(options) {\n        return this.addStandardValidation(validator.isIMEI, options);\n    }\n    isIP(version) {\n        return this.addStandardValidation(validator.isIP, version);\n    }\n    isIPRange(version) {\n        return this.addStandardValidation(validator.isIPRange, version);\n    }\n    isISBN(versionOrOptions) {\n        return this.addStandardValidation(validator.isISBN, versionOrOptions);\n    }\n    isISSN(options) {\n        return this.addStandardValidation(validator.isISSN, options);\n    }\n    isISIN() {\n        return this.addStandardValidation(validator.isISIN);\n    }\n    isISO6391() {\n        return this.addStandardValidation(validator.isISO6391);\n    }\n    isISO8601(options) {\n        return this.addStandardValidation(validator.isISO8601, options);\n    }\n    isISO31661Alpha2() {\n        return this.addStandardValidation(validator.isISO31661Alpha2);\n    }\n    isISO31661Alpha3() {\n        return this.addStandardValidation(validator.isISO31661Alpha3);\n    }\n    isISO4217() {\n        return this.addStandardValidation(validator.isISO4217);\n    }\n    isISRC() {\n        return this.addStandardValidation(validator.isISRC);\n    }\n    isIn(values) {\n        return this.addStandardValidation(validator.isIn, values);\n    }\n    isInt(options) {\n        return this.addStandardValidation(validator.isInt, options);\n    }\n    isJSON(options) {\n        return this.addStandardValidation(validator.isJSON, options);\n    }\n    isJWT() {\n        return this.addStandardValidation(validator.isJWT);\n    }\n    isLatLong(options) {\n        return this.addStandardValidation(validator.isLatLong, options);\n    }\n    isLength(options) {\n        return this.addStandardValidation(validator.isLength, options);\n    }\n    isLicensePlate(locale) {\n        return this.addStandardValidation(validator.isLicensePlate, locale);\n    }\n    isLocale() {\n        return this.addStandardValidation(validator.isLocale);\n    }\n    isLowercase() {\n        return this.addStandardValidation(validator.isLowercase);\n    }\n    isLuhnNumber() {\n        return this.addStandardValidation(validator.isLuhnNumber);\n    }\n    isMagnetURI() {\n        return this.addStandardValidation(validator.isMagnetURI);\n    }\n    isMACAddress(options) {\n        return this.addStandardValidation(validator.isMACAddress, options);\n    }\n    isMD5() {\n        return this.addStandardValidation(validator.isMD5);\n    }\n    isMimeType() {\n        return this.addStandardValidation(validator.isMimeType);\n    }\n    isMobilePhone(locale, options) {\n        return this.addStandardValidation(validator.isMobilePhone, locale, options);\n    }\n    isMongoId() {\n        return this.addStandardValidation(validator.isMongoId);\n    }\n    isMultibyte() {\n        return this.addStandardValidation(validator.isMultibyte);\n    }\n    isNumeric(options) {\n        return this.addStandardValidation(validator.isNumeric, options);\n    }\n    isOctal() {\n        return this.addStandardValidation(validator.isOctal);\n    }\n    isPassportNumber(countryCode) {\n        return this.addStandardValidation(validator.isPassportNumber, countryCode);\n    }\n    isPort() {\n        return this.addStandardValidation(validator.isPort);\n    }\n    isPostalCode(locale) {\n        return this.addStandardValidation(validator.isPostalCode, locale);\n    }\n    isRFC3339() {\n        return this.addStandardValidation(validator.isRFC3339);\n    }\n    isRgbColor(includePercentValues) {\n        return this.addStandardValidation(validator.isRgbColor, includePercentValues);\n    }\n    isSemVer() {\n        return this.addStandardValidation(validator.isSemVer);\n    }\n    isSlug() {\n        return this.addStandardValidation(validator.isSlug);\n    }\n    isStrongPassword(options) {\n        return this.addStandardValidation(validator.isStrongPassword, options);\n    }\n    isSurrogatePair() {\n        return this.addStandardValidation(validator.isSurrogatePair);\n    }\n    isTaxID(locale) {\n        return this.addStandardValidation(validator.isTaxID, locale);\n    }\n    isTime(options) {\n        return this.addStandardValidation(validator.isTime, options);\n    }\n    isURL(options) {\n        return this.addStandardValidation(validator.isURL, options);\n    }\n    isUUID(version) {\n        return this.addStandardValidation(validator.isUUID, version);\n    }\n    isUppercase() {\n        return this.addStandardValidation(validator.isUppercase);\n    }\n    isVariableWidth() {\n        return this.addStandardValidation(validator.isVariableWidth);\n    }\n    isVAT(countryCode) {\n        return this.addStandardValidation(validator.isVAT, countryCode);\n    }\n    isWhitelisted(chars) {\n        return this.addStandardValidation(validator.isWhitelisted, chars);\n    }\n    matches(pattern, modifiers) {\n        return this.addStandardValidation.apply(this, [\n            validator.matches,\n            ...(typeof pattern === 'string'\n                ? [pattern, modifiers]\n                : [pattern.source, [...new Set((modifiers || '') + pattern.flags)].join('')]),\n        ]);\n    }\n}\nexports.ValidatorsImpl = ValidatorsImpl;\n"]},"metadata":{},"sourceType":"script"}