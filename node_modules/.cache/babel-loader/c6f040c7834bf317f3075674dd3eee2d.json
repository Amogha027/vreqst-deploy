{"ast":null,"code":"export function matchesType(targetType, draggedItemType) {\n  if (draggedItemType === null) {\n    return targetType === null;\n  }\n\n  return Array.isArray(targetType) ? targetType.some(function (t) {\n    return t === draggedItemType;\n  }) : targetType === draggedItemType;\n}","map":{"version":3,"sources":["../../src/utils/matchesType.ts"],"names":["matchesType","targetType","draggedItemType","Array","isArray","some","t"],"mappings":"AAEA,OAAO,SAASA,WAAT,CACNC,UADM,EAENC,eAFM,EAGI;AACV,MAAIA,eAAe,KAAK,IAAxB,EAA8B;AAC7B,WAAOD,UAAU,KAAK,IAAtB;AACA;;AACD,SAAOE,KAAK,CAACC,OAAND,CAAcF,UAAdE,IACHF,UAAU,CAAkBI,IAA5BJ,CAAiC,UAACK,CAAD;AAAA,WAAOA,CAAC,KAAKJ,eAAb;AAAA,GAAjCD,CADGE,GAEJF,UAAU,KAAKC,eAFlB;AAGA","sourcesContent":["import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n"]},"metadata":{},"sourceType":"module"}