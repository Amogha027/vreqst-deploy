{"ast":null,"code":"import _regeneratorRuntime from\"/home/amogha/btp/deploy/deployed/vreqst/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/amogha/btp/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/amogha/btp/deploy/deployed/vreqst/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useEffect}from\"react\";import{connect}from\"react-redux\";import axios from\"axios\";import{Button,Flex,FormControl,FormLabel,Heading,Input,Stack,useColorModeValue}from\"@chakra-ui/react\";import{useToast}from\"@chakra-ui/react\";import{backend}from\"../../server_urls\";var Profile=function Profile(props){var toast=useToast();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setname=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setemail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setusername=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),organization=_useState8[0],setOrganization=_useState8[1];useEffect(function(){var jwttoken=localStorage.getItem(\"jwtToken\");var getuser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var requestOptions,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;requestOptions={headers:{\"Content-Type\":\"application/json\",token:jwttoken}};_context.next=4;return axios.get(// \"http://localhost:5002/api/users/me\",\nbackend+\"/api/users/me\",requestOptions);case 4:res=_context.sent;setname(res===null||res===void 0?void 0:res.data.name);setemail(res===null||res===void 0?void 0:res.data.email);setOrganization(res===null||res===void 0?void 0:res.data.organization);setusername(res===null||res===void 0?void 0:res.data.username);_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);toast({title:\"Something went wrong\",status:\"error\",duration:10000,isClosable:true,position:\"top\"});console.log(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function getuser(){return _ref.apply(this,arguments);};}();getuser();},[]);return React.createElement(Flex,{minH:\"85vh\",align:\"center\",justify:\"center\",bg:useColorModeValue(\"gray.50\",\"gray.800\")},React.createElement(Stack,{spacing:4,w:\"full\",maxW:\"md\",bg:useColorModeValue(\"white\",\"gray.700\"),rounded:\"xl\",boxShadow:\"lg\",p:6,my:12},React.createElement(Heading,{lineHeight:1.1,fontSize:{base:\"2xl\",sm:\"3xl\"}},\"User Profile Edit\"),React.createElement(FormControl,{id:\"userName\",isRequired:true},React.createElement(FormLabel,null,\"Full Name\"),React.createElement(Input,{placeholder:\"Full Name\",_placeholder:{color:\"gray.500\"},value:name,onChange:function onChange(e){return setname(e.target.value);},type:\"text\"})),React.createElement(FormControl,{id:\"email\",isReadOnly:true},React.createElement(FormLabel,null,\"Email address\"),React.createElement(Input,{placeholder:\"your-email@example.com\",type:\"email\",backgroundColor:\"lightgray\",value:email})),React.createElement(FormControl,{id:\"username\",isRequired:true},React.createElement(FormLabel,null,\"Username\"),React.createElement(Input,{placeholder:\"UserName\",_placeholder:{color:\"gray.500\"},type:\"text\",value:username,onChange:function onChange(e){return setusername(e.target.value);}})),React.createElement(FormControl,{id:\"organization\",isReadOnly:true},React.createElement(FormLabel,null,\"Organization\"),React.createElement(Input,{placeholder:\"Organization\",type:\"text\",value:organization,backgroundColor:\"lightgray\"})),React.createElement(Stack,{spacing:6,direction:[\"column\",\"row\"]})));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps)(Profile);","map":{"version":3,"sources":["/home/amogha/btp/deploy/deployed/vreqst/src/Components/Profile/Profile.jsx"],"names":["React","useState","useEffect","connect","axios","Button","Flex","FormControl","FormLabel","Heading","Input","Stack","useColorModeValue","useToast","backend","Profile","props","toast","name","setname","email","setemail","username","setusername","organization","setOrganization","jwttoken","localStorage","getItem","getuser","requestOptions","headers","token","get","res","data","title","status","duration","isClosable","position","console","log","base","sm","color","e","target","value","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { backend } from \"../../server_urls\";\n\nconst Profile = (props) => {\n  const toast = useToast();\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [organization, setOrganization] = useState(\"\");\n\n  useEffect(() => {\n    const jwttoken = localStorage.getItem(\"jwtToken\");\n\n    const getuser = async () => {\n      try {\n        const requestOptions = {\n          headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n        };\n        const res = await axios.get(\n          // \"http://localhost:5002/api/users/me\",\n          backend + \"/api/users/me\",\n          requestOptions\n        );\n        setname(res?.data.name);\n        setemail(res?.data.email);\n        setOrganization(res?.data.organization);\n        setusername(res?.data.username);\n      } catch (error) {\n        toast({\n          title: \"Something went wrong\",\n          status: \"error\",\n          duration: 10000,\n          isClosable: true,\n          position: \"top\",\n        });\n        console.log(error);\n      }\n    };\n\n    getuser();\n  }, []);\n  return (\n    <Flex\n      minH={\"85vh\"}\n      align={\"center\"}\n      justify={\"center\"}\n      bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n    >\n      <Stack\n        spacing={4}\n        w={\"full\"}\n        maxW={\"md\"}\n        bg={useColorModeValue(\"white\", \"gray.700\")}\n        rounded={\"xl\"}\n        boxShadow={\"lg\"}\n        p={6}\n        my={12}\n      >\n        <Heading lineHeight={1.1} fontSize={{ base: \"2xl\", sm: \"3xl\" }}>\n          User Profile Edit\n        </Heading>\n        <FormControl id=\"userName\" isRequired>\n          <FormLabel>Full Name</FormLabel>\n          <Input\n            placeholder=\"Full Name\"\n            _placeholder={{ color: \"gray.500\" }}\n            value={name}\n            onChange={(e) => setname(e.target.value)}\n            type=\"text\"\n          />\n        </FormControl>\n        <FormControl id=\"email\" isReadOnly>\n          <FormLabel>Email address</FormLabel>\n          <Input\n            placeholder=\"your-email@example.com\"\n            type=\"email\"\n            backgroundColor=\"lightgray\"\n            value={email}\n          />\n        </FormControl>\n        <FormControl id=\"username\" isRequired>\n          <FormLabel>Username</FormLabel>\n          <Input\n            placeholder=\"UserName\"\n            _placeholder={{ color: \"gray.500\" }}\n            type=\"text\"\n            value={username}\n            onChange={(e) => setusername(e.target.value)}\n          />\n        </FormControl>\n        <FormControl id=\"organization\" isReadOnly>\n          <FormLabel>Organization</FormLabel>\n          <Input\n            placeholder=\"Organization\"\n            type=\"text\"\n            value={organization}\n            backgroundColor=\"lightgray\"\n          />\n        </FormControl>\n\n        <Stack spacing={6} direction={[\"column\", \"row\"]}>\n          {/* <Button\n            bg={\"blue.400\"}\n            color={\"white\"}\n            w=\"full\"\n            _hover={{\n              bg: \"blue.500\",\n            }}\n          >\n            Submit\n          </Button> */}\n        </Stack>\n      </Stack>\n    </Flex>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(Profile);\n"]},"metadata":{},"sourceType":"module"}