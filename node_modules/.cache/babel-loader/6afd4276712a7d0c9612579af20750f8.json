{"ast":null,"code":"import axios from\"axios\";import setAuthToken from\"../../utils/setAuthToken\";import jwt_decode from\"jwt-decode\";import{GET_ERRORS,SET_CURRENT_USER,USER_LOADING}from\"./types\";// Register User\nimport{backend}from\"../../server_urls\";export var registerUser=function registerUser(userData,history){return function(dispatch){axios// .post(\"http://localhost:5002/api/users/register\", userData)\n.post(backend+\"/api/users/register\",userData).then(function(res){return history.push(\"/login\");})// re-direct to login on successful register\n.catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Login - get user token\nexport var loginUser=function loginUser(userData){return function(dispatch){axios// .post(\"http://localhost:5002/api/users/login\", userData)\n.post(backend+\"/api/users/login\",userData).then(function(res){// Save to localStorage// Set token to localStorage\nvar token=res.data.token;localStorage.setItem(\"jwtToken\",token);// Set token to Auth header\nsetAuthToken(token);// Decode token to get user data\nvar decoded=jwt_decode(token);console.log(decoded);// Set current user\ndispatch(setCurrentUser(decoded));}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// Set logged in user\nexport var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};// User loading\nexport var setUserLoading=function setUserLoading(){return{type:USER_LOADING};};// Log user out\nexport var logoutUser=function logoutUser(){return function(dispatch){// Remove token from local storage\nlocalStorage.removeItem(\"jwtToken\");// Remove auth header for future requests\nsetAuthToken(false);// Set current user to empty object {} which will set isAuthenticated to false\ndispatch(setCurrentUser({}));};};","map":{"version":3,"sources":["/home/amogha/btp/deploy/VReqST-2/VReqST-main/VReqST/frontend/client/src/redux/actions/authActions.jsx"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","backend","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","console","log","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,YAAvC,KAA2D,SAA3D,CAAsE;AACtE,OAASC,OAAT,KAAwB,mBAAxB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAAWC,OAAX,QAAuB,UAACC,QAAD,CAAc,CAC/DV,KACE;AADG,CAEFW,IAFH,CAEQL,OAAO,CAAG,qBAFlB,CAEyCE,QAFzC,EAGGI,IAHH,CAGQ,SAACC,GAAD,QAASJ,CAAAA,OAAO,CAACK,IAAR,CAAa,QAAb,CAAT,EAHR,CAGyC;AAHzC,CAIGC,KAJH,CAIS,SAACC,GAAD,QACLN,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAEd,UADC,CAEPe,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFf,CAAD,CADH,EAJT,EAUD,CAX2B,EAArB,CAWJ;AACH,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACb,QAAD,QAAc,UAACE,QAAD,CAAc,CACnDV,KACE;AADG,CAEFW,IAFH,CAEQL,OAAO,CAAG,kBAFlB,CAEsCE,QAFtC,EAGGI,IAHH,CAGQ,SAACC,GAAD,CAAS,CACb;AADa,GAELS,CAAAA,KAFK,CAEKT,GAAG,CAACO,IAFT,CAELE,KAFK,CAGbC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCF,KAAjC,EACA;AACArB,YAAY,CAACqB,KAAD,CAAZ,CACA;AACA,GAAMG,CAAAA,OAAO,CAAGvB,UAAU,CAACoB,KAAD,CAA1B,CACAI,OAAO,CAACC,GAAR,CAAYF,OAAZ,EACA;AACAf,QAAQ,CAACkB,cAAc,CAACH,OAAD,CAAf,CAAR,CACD,CAdH,EAeGV,KAfH,CAeS,SAACC,GAAD,QACLN,CAAAA,QAAQ,CAAC,CACPO,IAAI,CAAEd,UADC,CAEPe,OAAO,CAAEF,GAAG,CAACG,QAAJ,CAAaC,IAFf,CAAD,CADH,EAfT,EAqBD,CAtBwB,EAAlB,CAsBJ;AACH,MAAO,IAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,OAAD,CAAa,CACzC,MAAO,CACLR,IAAI,CAAEb,gBADD,CAELc,OAAO,CAAEO,OAFJ,CAAP,CAID,CALM,CAKJ;AACH,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO,CACLZ,IAAI,CAAEZ,YADD,CAAP,CAGD,CAJM,CAIJ;AACH,MAAO,IAAMyB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAACpB,QAAD,CAAc,CAC5C;AACAa,YAAY,CAACQ,UAAb,CAAwB,UAAxB,EACA;AACA9B,YAAY,CAAC,KAAD,CAAZ,CACA;AACAS,QAAQ,CAACkB,cAAc,CAAC,EAAD,CAAf,CAAR,CACD,CAPyB,EAAnB","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; // Register User\nimport { backend } from \"../../server_urls\";\n\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    // .post(\"http://localhost:5002/api/users/register\", userData)\n    .post(backend + \"/api/users/register\", userData)\n    .then((res) => history.push(\"/login\")) // re-direct to login on successful register\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n}; // Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    // .post(\"http://localhost:5002/api/users/login\", userData)\n    .post(backend + \"/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      console.log(decoded);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n}; // Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n}; // User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n}; // Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}