{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/App.js\";\nimport { Box, ChakraProvider, extendTheme, useColorMode } from \"@chakra-ui/react\";\nimport { StepsStyleConfig as Steps } from \"chakra-ui-steps\";\nimport jwt_decode from \"jwt-decode\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./Components/private-route/PrivateRoute\";\nimport { logoutUser, setCurrentUser } from \"./redux/actions/authActions\";\nimport store from \"./redux/store\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport AddFile from \"./Components/AddFile/AddFile\";\nimport Login from \"./Components/Auth/Login\";\nimport Register from \"./Components/Auth/Register\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport EditFile from \"./Components/EditFile/EditFile\";\nimport Help from \"./Components/Help/Help\";\nimport MyFiles from \"./Components/MyFiles/MyFiles\";\nimport NotFound from \"./Components/NotFound/NotFound\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Project from \"./Components/Project/Project\";\nimport ProjectPage from \"./Components/Project/ProjectPage\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\nimport \"./App.css\";\nimport HelpPage from \"./Components/Help/HelpPage\";\nimport AllFiles from \"./Components/AllFiles/AllFiles\";\nconst theme = extendTheme({\n  components: {\n    Steps\n  }\n});\n\nfunction App() {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token); // Decode token and get user info and exp\n\n    const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n    store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n\n      window.location.href = \"./login\";\n    }\n  }\n\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  if (colorMode === \"light\") toggleColorMode();\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(ChakraProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/help\",\n    component: HelpPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/myfiles\",\n    component: MyFiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/allfiles\",\n    component: AllFiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/myfiles/new\",\n    component: AddFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/projects\",\n    component: Project,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/myfiles/:fileid\",\n    component: EditFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    path: \"/projects/:projectid\",\n    component: ProjectPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"*\",\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"*\",\n    component: NotFound,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/src/App.js"],"names":["Box","ChakraProvider","extendTheme","useColorMode","StepsStyleConfig","Steps","jwt_decode","React","Provider","BrowserRouter","Router","Route","Switch","PrivateRoute","logoutUser","setCurrentUser","store","setAuthToken","AddFile","Login","Register","Dashboard","EditFile","Help","MyFiles","NotFound","Profile","Project","ProjectPage","Sidebar","HelpPage","AllFiles","theme","components","App","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","colorMode","toggleColorMode"],"mappings":"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","sourcesContent":["import {\n  Box,\n  ChakraProvider,\n  extendTheme,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { StepsStyleConfig as Steps } from \"chakra-ui-steps\";\nimport jwt_decode from \"jwt-decode\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport PrivateRoute from \"./Components/private-route/PrivateRoute\";\nimport { logoutUser, setCurrentUser } from \"./redux/actions/authActions\";\nimport store from \"./redux/store\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport AddFile from \"./Components/AddFile/AddFile\";\nimport Login from \"./Components/Auth/Login\";\nimport Register from \"./Components/Auth/Register\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport EditFile from \"./Components/EditFile/EditFile\";\nimport Help from \"./Components/Help/Help\";\nimport MyFiles from \"./Components/MyFiles/MyFiles\";\nimport NotFound from \"./Components/NotFound/NotFound\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Project from \"./Components/Project/Project\";\nimport ProjectPage from \"./Components/Project/ProjectPage\";\nimport Sidebar from \"./Components/Sidebar/Sidebar\";\n\nimport \"./App.css\";\nimport HelpPage from \"./Components/Help/HelpPage\";\nimport AllFiles from \"./Components/AllFiles/AllFiles\";\n\nconst theme = extendTheme({\n  components: {\n    Steps,\n  },\n});\n\nfunction App() {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded)); // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n      window.location.href = \"./login\";\n    }\n  }\n  const { colorMode, toggleColorMode } = useColorMode();\n  if (colorMode === \"light\") toggleColorMode();\n\n  return (\n    <Provider store={store}>\n      <ChakraProvider theme={theme}>\n        <Router>\n          <Sidebar>\n            <Box>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/help\" component={HelpPage} />\n                <Switch>\n                  <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                  <PrivateRoute exact path=\"/profile\" component={Profile} />\n                  <PrivateRoute exact path=\"/myfiles\" component={MyFiles} />\n                  <PrivateRoute exact path=\"/allfiles\" component={AllFiles} />\n                  <PrivateRoute exact path=\"/myfiles/new\" component={AddFile} />\n                  <PrivateRoute exact path=\"/projects\" component={Project} />\n                  <PrivateRoute path=\"/myfiles/:fileid\" component={EditFile} />\n                  <PrivateRoute\n                    path=\"/projects/:projectid\"\n                    component={ProjectPage}\n                  />\n                  <Route path=\"*\" component={NotFound} />\n                </Switch>\n                <Route path=\"*\" component={NotFound} />\n              </Switch>\n            </Box>\n          </Sidebar>\n        </Router>\n      </ChakraProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}