{"ast":null,"code":"import { union, without } from './utils/js_utils.js';\nexport class EnterLeaveCounter {\n  enter(enteringNode) {\n    const previousLength = this.entered.length;\n\n    const isNodeEntered = node => this.isNodeInDocument(node) && (!node.contains || node.contains(enteringNode));\n\n    this.entered = union(this.entered.filter(isNodeEntered), [enteringNode]);\n    return previousLength === 0 && this.entered.length > 0;\n  }\n\n  leave(leavingNode) {\n    const previousLength = this.entered.length;\n    this.entered = without(this.entered.filter(this.isNodeInDocument), leavingNode);\n    return previousLength > 0 && this.entered.length === 0;\n  }\n\n  reset() {\n    this.entered = [];\n  }\n\n  constructor(isNodeInDocument) {\n    this.entered = [];\n    this.isNodeInDocument = isNodeInDocument;\n  }\n\n}","map":{"version":3,"sources":["../src/EnterLeaveCounter.ts"],"names":["union","without","EnterLeaveCounter","entered","isNodeInDocument","enter","enteringNode","previousLength","length","isNodeEntered","node","contains","filter","leave","leavingNode","reset"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,OAAhB,QAA+B,qBAA/B;AAIA,OAAO,MAAMC,iBAAN,CAAuB;AAQtBG,EAAAA,KAAK,CAACC,YAAD,EAA4C;AACvD,UAAMC,cAAc,GAAG,KAAKJ,OAAL,CAAaK,MAApC;;AAEA,UAAMC,aAAa,GAAIC,IAAD,IACrB,KAAKN,gBAAL,CAAsBM,IAAtB,MACC,CAACA,IAAI,CAACC,QAAN,IAAkBD,IAAI,CAACC,QAALD,CAAcJ,YAAdI,CADnB,CADD;;AAIA,SAAKP,OAAL,GAAeH,KAAK,CAAC,KAAKG,OAAL,CAAaS,MAAb,CAAoBH,aAApB,CAAD,EAAqC,CAACH,YAAD,CAArC,CAApB;AAEA,WAAOC,cAAc,KAAK,CAAnBA,IAAwB,KAAKJ,OAAL,CAAaK,MAAb,GAAsB,CAArD;AACA;;AAEMK,EAAAA,KAAK,CAACC,WAAD,EAA2C;AACtD,UAAMP,cAAc,GAAG,KAAKJ,OAAL,CAAaK,MAApC;AAEA,SAAKL,OAAL,GAAeF,OAAO,CACrB,KAAKE,OAAL,CAAaS,MAAb,CAAoB,KAAKR,gBAAzB,CADqB,EAErBU,WAFqB,CAAtB;AAKA,WAAOP,cAAc,GAAG,CAAjBA,IAAsB,KAAKJ,OAAL,CAAaK,MAAb,KAAwB,CAArD;AACA;;AAEMO,EAAAA,KAAK,GAAS;AACpB,SAAKZ,OAAL,GAAe,EAAf;AACA;;AA7BD,EAAA,WAAA,CAAmBC,gBAAnB,EAAoD;AAHpD,SAAQD,OAAR,GALD,EAKC;AAIC,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA;;AAN4B","sourcesContent":["import { union, without } from './utils/js_utils.js'\n\ntype NodePredicate = (node: Node | null | undefined) => boolean\n\nexport class EnterLeaveCounter {\n\tprivate entered: any[] = []\n\tprivate isNodeInDocument: NodePredicate\n\n\tpublic constructor(isNodeInDocument: NodePredicate) {\n\t\tthis.isNodeInDocument = isNodeInDocument\n\t}\n\n\tpublic enter(enteringNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tconst isNodeEntered = (node: Node): boolean =>\n\t\t\tthis.isNodeInDocument(node) &&\n\t\t\t(!node.contains || node.contains(enteringNode as Node))\n\n\t\tthis.entered = union(this.entered.filter(isNodeEntered), [enteringNode])\n\n\t\treturn previousLength === 0 && this.entered.length > 0\n\t}\n\n\tpublic leave(leavingNode: EventTarget | null): boolean {\n\t\tconst previousLength = this.entered.length\n\n\t\tthis.entered = without(\n\t\t\tthis.entered.filter(this.isNodeInDocument),\n\t\t\tleavingNode,\n\t\t)\n\n\t\treturn previousLength > 0 && this.entered.length === 0\n\t}\n\n\tpublic reset(): void {\n\t\tthis.entered = []\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}