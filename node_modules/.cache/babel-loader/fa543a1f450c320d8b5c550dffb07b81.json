{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar base32 = /^[A-Z2-7]+=*$/;\nvar crockfordBase32 = /^[A-HJKMNP-TV-Z0-9]+$/;\nvar defaultBase32Options = {\n  crockford: false\n};\n\nfunction isBase32(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase32Options);\n\n  if (options.crockford) {\n    return crockfordBase32.test(str);\n  }\n\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/home/amogha/btp/nonlocal/VReqST-main/VReqST/frontend/client/node_modules/express-validator/node_modules/validator/lib/isBase32.js"],"names":["Object","defineProperty","exports","value","default","isBase32","_assertString","_interopRequireDefault","require","_merge","obj","__esModule","base32","crockfordBase32","defaultBase32Options","crockford","str","options","test","len","length","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,IAAIC,MAAM,GAAGF,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAnC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,MAAM,GAAG,eAAb;AACA,IAAIC,eAAe,GAAG,uBAAtB;AACA,IAAIC,oBAAoB,GAAG;AACzBC,EAAAA,SAAS,EAAE;AADc,CAA3B;;AAIA,SAASV,QAAT,CAAkBW,GAAlB,EAAuBC,OAAvB,EAAgC;AAC9B,GAAC,GAAGX,aAAa,CAACF,OAAlB,EAA2BY,GAA3B;AACAC,EAAAA,OAAO,GAAG,CAAC,GAAGR,MAAM,CAACL,OAAX,EAAoBa,OAApB,EAA6BH,oBAA7B,CAAV;;AAEA,MAAIG,OAAO,CAACF,SAAZ,EAAuB;AACrB,WAAOF,eAAe,CAACK,IAAhB,CAAqBF,GAArB,CAAP;AACD;;AAED,MAAIG,GAAG,GAAGH,GAAG,CAACI,MAAd;;AAEA,MAAID,GAAG,GAAG,CAAN,KAAY,CAAZ,IAAiBP,MAAM,CAACM,IAAP,CAAYF,GAAZ,CAArB,EAAuC;AACrC,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;;AAEDK,MAAM,CAACnB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAiB,MAAM,CAACnB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isBase32;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar base32 = /^[A-Z2-7]+=*$/;\nvar crockfordBase32 = /^[A-HJKMNP-TV-Z0-9]+$/;\nvar defaultBase32Options = {\n  crockford: false\n};\n\nfunction isBase32(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, defaultBase32Options);\n\n  if (options.crockford) {\n    return crockfordBase32.test(str);\n  }\n\n  var len = str.length;\n\n  if (len % 8 === 0 && base32.test(str)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}