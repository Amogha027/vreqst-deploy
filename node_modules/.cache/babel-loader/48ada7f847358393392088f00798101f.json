{"ast":null,"code":"var _jsxFileName = \"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/src/Components/Project/ProjectPageContent.jsx\";\nimport { Box, Button, Divider, Flex, Grid, GridItem, Heading, Input, List, ListIcon, ListItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalOverlay, Select, Spinner, Stack, Tag, Text, Tooltip, useDisclosure, useToast, Tabs, TabList, TabPanels, Tab, TabPanel, FormControl, Textarea, VStack } from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { FaExclamationCircle, FaFileAlt } from \"react-icons/fa\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport { useDrop } from 'react-dnd';\nimport { validation_server, backend } from \"../../server_urls\";\nimport isJson from \"../../utils/checkjson\";\nimport e from \"cors\";\nimport semantics from \"../../utils/syntax.json\";\nimport Behaviour from \"./Behaviour\";\nimport { Link } from \"react-router-dom\";\nlet errors = [];\nlet rules = [];\nlet valid_rule = [];\nlet grammarDataArray = [];\nlet flag = false;\nlet fl = false;\nconst tipcolors = {\n  number: \"orange\",\n  object: \"green\",\n  boolean: \"red\",\n  string: \"yellow\",\n  array: \"blue\"\n};\n\nconst jsonValidator = (grammar, validating) => {\n  const keys = Object.keys(grammar);\n  const keys22 = Object.keys(validating);\n  const grammarArray = Object.keys(grammar).filter(value => !Object.keys(validating).includes(value));\n  const extraEntries = Object.keys(validating).filter(value => !Object.keys(grammar).includes(value));\n  extraEntries.map(en => {\n    let app = 1;\n\n    for (let i = 0; i < keys.length; i++) {\n      if (keys[i] === en || grammar[keys[i]].root === en || grammar[keys[i]].proot === en) app = 0;\n    }\n\n    if (app) {\n      errors.push(`\"${en}\" is invalid key in the JSON`);\n    }\n  });\n  grammarArray.map(en => {\n    let app = 1;\n\n    for (let i = 0; i < keys22.length; i++) {\n      if (en === keys22[i] || grammar[en].root === keys22[i] || grammar[en].proot === keys22[i]) {\n        app = 0;\n      }\n    }\n\n    if (app === 1) {\n      errors.push(`\"${en}\" is a mandatory field! Please add the field with ${grammar[en].typeof} type`);\n    }\n  });\n\n  for (let i = 0; i < keys.length; i++) {\n    var key = keys[i];\n\n    if (grammar[key].hasOwnProperty('proot')) {\n      let a = validating[grammar[key].proot];\n\n      for (let i = 0; i < a.length; i++) {\n        let c = a[i];\n\n        if (c.hasOwnProperty(grammar[key].root)) {\n          if (typeof c[grammar[key].root][key] === grammar[key].typeof) {} else {\n            if (typeof c[grammar[key].root][key] === \"undefined\") {\n              errors.push(`\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`);\n            } else {\n              errors.push(` \"${key}\" has an invalid type of '${typeof c[grammar[key].root][key]}'. Expected type of ${grammar[key].typeof}`);\n            }\n          }\n        }\n      }\n    } else if (grammar[key].hasOwnProperty('repeat') && grammar[key].repeat === \"allow\") {\n      let a = grammar[key].root;\n      var obje = Object.keys(validating);\n      let found = obje.indexOf(a);\n\n      if (typeof validating[a] === \"object\") {\n        for (let i = 0; i < validating[a].length; i++) {\n          if (typeof validating[a][i][key] === grammar[key].typeof || typeof validating[a][i][key] === \"object\" && grammar[key].typeof === \"array\") {} else {\n            if (typeof validating[a][i][key] === \"undefined\") {\n              errors.push(`\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`);\n            } else {\n              errors.push(` \"${key}\" has an invalid type of '${typeof validating[a][i][key]}'. Expected type of ${grammar[key].typeof}`);\n            }\n          }\n        }\n      }\n    } else {\n      if (grammar[key].root === 'null' || grammar[key].root === 'undefined' || !grammar[key].hasOwnProperty('root')) {\n        if (typeof validating[key] === \"undefined\") {\n          continue;\n        } // Handling nested objects recursively\n\n\n        if (typeof validating[key] === \"object\" && grammar[key].typeof === \"object\") {\n          continue;\n        }\n\n        if (typeof validating[key] !== grammar[key].typeof) {\n          errors.push(` \"${key}\" has an invalid type of '${typeof validating[key]}'. Expected type of ${grammar[key].typeof}`);\n        } else {// alert(\"sucess\");\n        }\n\n        if (typeof validating[key] === \"string\" && typeof validating[key] === grammar[key].typeof && grammar[key].req === \"mandatory\" && validating[key].length === 0) {\n          errors.push(`\"${key}\" is mandatory, empty string is not allowed`);\n        }\n      } else {\n        let a = grammar[key].root;\n\n        if (false) {\n          for (let i = 0; i < validating[a].length; i++) {\n            if (typeof validating[a][i].key === grammar[key].typeof) {\n              alert(\"Sucess\");\n            } else {\n              //alert(\"Failure\");\n              //errors.push(\"kindly see the json syntax\");\n              errors.push(`\"${key}\" has invalid type, expected \"${grammar[key].typeof}\"`);\n            }\n          }\n        } else {\n          var b = validating[a]; //alert(a);\n\n          let c = Object.keys(b);\n          let found = c.indexOf(key);\n\n          if (typeof validating[a][c[found]] === grammar[key].typeof || typeof validating[a][c[found]] === \"object\" && grammar[key].typeof === \"array\") {//alert(\"Sucess!!!!!!\");\n          } else {\n            if (typeof validating[a][c[found]] === \"undefined\") {\n              errors.push(`\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`);\n            } else {\n              errors.push(` \"${key}\" has an invalid type of '${typeof validating[a][c[found]]}'. Expected type of ${grammar[key].typeof}`);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (errors.length > 0) {\n    console.log(errors);\n    return true;\n  }\n\n  return false;\n};\n\nconst ProjectPageContent = ({\n  stepslen,\n  nextStep,\n  prevStep,\n  reset,\n  activeStep,\n  scene,\n  action,\n  asset,\n  projectname,\n  timeline,\n  custom\n}) => {\n  const toast = useToast();\n  const {\n    projectid\n  } = useParams();\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n  let [val, setValue] = React.useState(\"\");\n  const [files, setfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setdata] = useState(\"\");\n  const [grammarid, setGrammarid] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [grammarbundle, setGrammarbundle] = useState({});\n  const [displayErrors, setDisplayErrors] = useState([]);\n  const [rule_list, setRuleList] = useState([]);\n  const [names, setNames] = useState([]);\n  const [arr, setArr] = useState([]);\n  const [idx, setIdx] = useState(0);\n  const [downloadable, setDownloadable] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [description, setDescription] = useState(\"\");\n  const [perdata, setPerdata] = useState(\"\");\n  const [seed, setSeed] = useState(0);\n  const [rulename, setRulename] = useState(\"\");\n  const [textPointer, setTextPointer] = useState({\n    \"row\": 0,\n    \"column\": 0\n  });\n  const [position, setPosition] = useState(0);\n  const [savebutton, setSavebutton] = useState(false);\n  const [rule, setRule] = useState({});\n  const [logic, setLogic] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [reorder, setReorder] = useState(false);\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop(() => ({\n    accept: \"behaviour\",\n    drop: item => setBoard(board => !board.includes(item.obj) ? [...board, item.obj] : board),\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  }));\n\n  const handleReorder = (dragIndex, hoverIndex) => {\n    const dragged = board[dragIndex];\n    const newBoard = [...board];\n    newBoard.splice(dragIndex, 1);\n    newBoard.splice(hoverIndex, 0, dragged);\n    setBoard(newBoard);\n  };\n\n  const convertPointer = (pointer, lines) => {\n    let pos = 0;\n\n    for (let i = 0; i <= pointer.row - 1; i++) {\n      pos += lines[i].length;\n      if (lines[i].length === 0) pos += 1;\n    }\n\n    pos += pointer.column;\n    if (pointer.column === 0) pos += 1;\n    setPosition(pos);\n  };\n\n  const getFiles = async () => {\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.get( // `http://localhost:5002/api/json/timeline`,\n      backend + \"/api/json/timeline\", requestOptions);\n      const requestOption = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res2 = await Axios.get( // `http://localhost:5002/api/project/${projectid}/grammarName`,\n      backend + `/api/project/${projectid}/grammarName`, requestOption);\n      setfiles(res.data);\n      res.data.map(p => {\n        if (p.name == res2.data.grammarName) {\n          if (grammarDataArray.length != 5) {\n            grammarDataArray.push(p.scene);\n            grammarDataArray.push(p.asset);\n            grammarDataArray.push(p.action);\n            grammarDataArray.push(p.custom);\n            grammarDataArray.push(p.timeline);\n          }\n        }\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        //Goes wrong\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n  };\n\n  const getRules = async () => {\n    const res_rules = await Axios.post( // \"http://localhost:5002/api/custom/get-custom-rules\",\n    backend + \"/api/custom/get-custom-rules\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        token: jwttoken\n      },\n      data: {\n        project_id: projectid\n      }\n    });\n    setRuleList(res_rules.data);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getFiles();\n    getRules();\n\n    if (activeStep == 0) {\n      setdata(scene);\n      getFiles();\n      fl = false;\n\n      if (isJson(scene)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 1) {\n      const myobjs = JSON.parse(asset);\n      let all_names = [];\n      let tarr = myobjs.articles;\n      myobjs.articles.map((c, i) => {\n        all_names.push(c._objectname);\n      });\n      setNames(all_names);\n      setArr(tarr);\n      setdata(JSON.stringify(tarr[idx], null, '\\t')); // setdata(asset);\n\n      fl = false;\n\n      if (isJson(asset)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 2) {\n      let myobjs = JSON.parse(action);\n      let all_names = [];\n      let tarr = myobjs.ObjAction;\n      myobjs.ObjAction.map((c, i) => {\n        all_names.push(c.actresid);\n      });\n      setNames(all_names);\n      setArr(tarr);\n      setdata(JSON.stringify(tarr[idx], null, '\\t')); // setdata(action)\n\n      fl = false;\n\n      if (isJson(action)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 3) {\n      // setdata(custom);\n      fl = false;\n\n      if (isJson(custom)) {\n        setDownloadable(true);\n      }\n    }\n\n    if (activeStep == 4) {\n      setdata(timeline);\n      fl = false;\n\n      if (isJson(timeline)) {\n        setDownloadable(true);\n      }\n    }\n\n    setLoading(false);\n  }, []);\n\n  const downloadTxtFile = () => {\n    if (data === \"\" || !isJson(data)) {\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n      setDownloadable(false);\n      return;\n    }\n\n    let fileName = \"\";\n    if (activeStep === 0) fileName = \"scene\";\n    if (activeStep === 1) fileName = \"asset\";\n    if (activeStep === 2) fileName = \"action\";\n    if (activeStep === 3) fileName = \"custom\";\n    if (activeStep === 4) fileName = \"timeline\";\n    const json = data;\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const href = URL.createObjectURL(blob);\n    const downlink = document.createElement(\"a\");\n    downlink.href = href;\n    downlink.download = projectname + \"-\" + fileName + \".json\";\n    document.body.appendChild(downlink);\n    downlink.click(); // clean up \"a\" element & remove ObjectURL\n\n    document.body.removeChild(downlink);\n    URL.revokeObjectURL(href);\n  };\n\n  let handleInputChange = e => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  let asset_valid = (asset, asset_list, flag) => {\n    // if flag is zero, dont print any errors\n    let valid_obj = false;\n    asset_list.map((d, j) => {\n      if (asset === d) valid_obj = true; // if(c.targetObj == d)\n      //   valid_target = true;\n    });\n\n    if (valid_obj === false) {\n      setValidated(false);\n      setDownloadable(false);\n\n      if (flag) {\n        toast({\n          title: \"Object \" + asset + \" is not listed in Asset JSON. Only assets present in Asset JSON are valid.\" + asset + \"  \" + asset_list,\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\"\n        });\n      }\n\n      return -1;\n    }\n\n    return 1;\n  };\n\n  let assetValidator = (a, all_object_ids) => {\n    a.map((c, i) => {\n      let ret1 = asset_valid(c.sourceObj, all_object_ids, 1);\n      let ret2;\n\n      if (c.targetObj[c.targetObj.length - 1] === '*') {\n        ret2 = 1;\n      } else ret2 = asset_valid(c.targetObj, all_object_ids, 1);\n\n      if (ret1 === -1) {\n        return false;\n      }\n\n      if (c.repeatactionfor !== null && c.repeatactionfor.length !== 0 && c.repeatactionfor[0] !== \" \") {\n        let repeat_assets = [];\n        let curr_word = \"\";\n        Array.from(c.repeatactionfor).map((char, key) => {\n          if (char === ',' || char === ' ') {\n            if (curr_word !== \"\" && curr_word !== \" \" && curr_word.length !== 0) {\n              repeat_assets.push(curr_word);\n              curr_word = \"\";\n            }\n          } else curr_word = curr_word + char;\n        });\n        if (curr_word != \"\" || curr_word != \" \" || curr_word.length != 0) repeat_assets.push(curr_word);\n        repeat_assets.map((word, key) => {\n          let ret = asset_valid(word, all_object_ids, 1);\n\n          if (ret === -1) {\n            return false;\n          }\n        });\n\n        if (ret2 === -1 && c.targetObj[c.targetObj.length - 1] !== \"*\") {\n          toast({\n            title: \"Please update the Target Object according to the reccomendations in the document.\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return false;\n        } else {\n          if (asset_valid(c.targetObj, repeat_assets, 0) === 1) {\n            toast({\n              title: \"Target object should not be a part of repeatactionfor.\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\"\n            });\n            return false;\n          }\n        }\n      }\n    });\n    return true;\n  };\n\n  let onValidate2 = async () => {\n    toast({\n      title: \"Validation successful\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\"\n    });\n    valid_rule.push({\n      rulename: rulename,\n      data_name: data,\n      description: description\n    });\n    setDownloadable(true);\n    setSavebutton(true);\n  };\n\n  const onValidate = async () => {\n    let tdata = data;\n    if (activeStep == 1) tdata = JSON.stringify({\n      articles: arr\n    }, null, 4);else if (activeStep == 2) tdata = JSON.stringify({\n      ObjAction: arr\n    }, null, 4);\n\n    if (!isJson(tdata)) {\n      setValidated(false);\n      setDownloadable(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n      return;\n    }\n\n    setDisplayErrors([]);\n    errors = [];\n    var myjson = JSON.parse(tdata);\n\n    try {\n      var mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]); // console.log(typeof errors);\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      if (activeStep == 2) {\n        try {\n          {\n            let all_object_ids = [];\n            const myobjs = JSON.parse(asset);\n            myobjs.articles.map((c, i) => {\n              all_object_ids.push(c._sid);\n            });\n            var a = myjson.ObjAction;\n\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i].actresid;\n              flag = true;\n\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"There are errors in the specification. Please review the error message\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return;\n        }\n      } else if (activeStep == 1) {\n        try {\n          {\n            var a = myjson.articles;\n\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i]._objectname;\n              flag = true;\n\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"There are errors in the specification. Please review the error message\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return;\n        }\n      }\n    } catch {\n      console.log(e);\n    }\n\n    if (grammarDataArray.length === 0) {\n      await getFiles();\n    }\n\n    try {\n      let mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n\n      if (!jsonValidator(mygrm, myjson)) {\n        if (activeStep === 2) {\n          let all_object_ids = [];\n          const myobjs = JSON.parse(asset);\n          myobjs.articles.map((c, i) => {\n            all_object_ids.push(c._sid);\n          });\n          const ret_asset = assetValidator(myjson.ObjAction, all_object_ids);\n\n          if (!ret_asset) {\n            console.log(errors);\n            toast({\n              title: \"There are errors in the specification. Please review the error message\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\"\n            });\n            return;\n          } else {\n            setValidated(true);\n            setDownloadable(true);\n            toast({\n              title: \"Validation Successful\",\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\"\n            });\n          }\n        } else {\n          setValidated(true);\n          setDownloadable(true);\n          toast({\n            title: \"Validation Successful\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n        }\n      } else {\n        console.log(errors);\n        toast({\n          title: \"There are errors in the specification. Please review the error message\",\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\"\n        });\n      }\n\n      setDisplayErrors(errors);\n    } catch (e) {\n      console.log(e);\n      toast({\n        title: \"There are errors in the specification. Please review the error message\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n    }\n  };\n\n  const showValidateHandler = async () => {\n    let code = data;\n    let jsonData = JSON.stringify({\n      types: [{\n        type: \"if\",\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"else\",\n        prev: [\"if\", \"else-if\"],\n        order: [[\"scope\"]]\n      }, {\n        type: \"else-if\",\n        prev: [\"if\", \"else-if\"],\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"switch\",\n        order: [[\"condition\"], [\"scope\", [\"Case\"], [\"Default\"]]]\n      }, {\n        type: \"switch-case\",\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"switch-case-default\",\n        order: [[\"scope\"]]\n      }, {\n        type: \"for\",\n        order: [[\"condition\", [\"conditionSeparator\", \"conditionSeparator\"]], [\"scope\"]]\n      }, {\n        type: \"while\",\n        order: [[\"condition\"], [\"scope\"]]\n      }, {\n        type: \"do\",\n        order: [[\"scope\"]],\n        next: [\"do-while\"]\n      }, {\n        type: \"do-while\",\n        order: [[\"condition\"]],\n        prev: [\"do\"]\n      }],\n      constructs: [{\n        name: \"if\",\n        type: \"if\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\"\n      }, {\n        name: \"else-if\",\n        type: \"else-if\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        pre: [\"if\", \"else-if\"]\n      }, {\n        name: \"else\",\n        type: \"else\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        pre: [\"if\", \"else-if\"]\n      }, {\n        name: \"switch\",\n        type: \"switch\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        body: \"Case\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        \"end-body\": \"default\"\n      }, {\n        name: \"Case\",\n        type: \"switch-case\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        parent: \"switch\"\n      }, {\n        name: \"Default\",\n        type: \"switch-case-default\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        parent: \"switch\"\n      }, {\n        name: \"for\",\n        type: \"for\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        conditionSeparator: \"/\",\n        scopeStart: \"(\",\n        scopeEnd: \")\"\n      }, {\n        name: \"while\",\n        type: \"while\",\n        conditionStart: \"(\",\n        conditionEnd: \")\",\n        scopeStart: \"(\",\n        scopeEnd: \")\"\n      }, {\n        name: \"do\",\n        type: \"do\",\n        scopeStart: \"(\",\n        scopeEnd: \")\",\n        next: \"do-while\"\n      }, {\n        name: \"do-while\",\n        type: \"do-while\",\n        conditionStart: \"(\",\n        conditionEnd: \")\"\n      }],\n      specialSymbols: [\"#\", \":\", \"!\", \"/\", \"(\", \")\"]\n    }); // fetch(`http://localhost:5001/api/upload`, {\n\n    fetch(validation_server + '/api/upload', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        jsonData\n      })\n    }).then(response => {\n      response.json().then(val => {\n        console.log(\"Uploaded\");\n        console.log(val);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    }); // fetch(`http://localhost:5001/api/process`, {\n\n    fetch(validation_server + '/api/process', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        code\n      })\n    }).then(response => {\n      response.json().then(val => {\n        if (val.valid) {\n          onValidate2();\n        } else {\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"Error! Please follow conditional syntax.\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\"\n          });\n          return;\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleValidateButton = () => {\n    showValidateHandler(true);\n    setValidated(true);\n  };\n\n  const saveButton = async () => {\n    try {\n      const res = await Axios.post( // \"http://localhost:5002/api/custom/upload-custom-rule\", {\n      backend + \"/api/custom/upload-custom-rule\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        },\n        data: {\n          project_id: projectid,\n          rulename: rulename,\n          data_name: btoa(data),\n          description: description\n        }\n      });\n      toast({\n        title: \"Behaviour Added\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n      setRuleList([...rule_list, {\n        project_id: projectid,\n        rulename: rulename,\n        data_name: btoa(data),\n        description: description\n      }]);\n      setdata('');\n      setRulename('');\n      setDescription('');\n      setValidated(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const flushWrite = () => {\n    console.log('flushed everything!');\n    setValidated(false);\n    setdata('');\n    setRulename('');\n    setDescription('');\n  };\n\n  const onNextStep = async () => {\n    let tdata = data;\n    if (activeStep == 1) tdata = JSON.stringify({\n      articles: arr\n    }, null, 4);else if (activeStep == 2) tdata = JSON.stringify({\n      ObjAction: arr\n    }, null, 4);\n\n    if (!isJson(data) && activeStep !== 3) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0) url = url + `/api/project/${projectid}/scene`;else if (activeStep === 1) url = url + `/api/project/${projectid}/asset`;else if (activeStep === 2) url = url + `/api/project/${projectid}/action`;else if (activeStep === 3) url = url + `/api/project/${projectid}/custom`;else if (activeStep === 4) url = url + `/api/project/${projectid}/timeline`;\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.patch(url, {\n        data: tdata\n      }, requestOptions);\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Something wents wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n\n    setSubmitting(false);\n    nextStep();\n  };\n\n  const handel_name = e => {\n    setRulename(e.target.value);\n  };\n\n  const handel_description = e => {\n    setDescription(e.target.value);\n  };\n\n  const onFinish = async () => {\n    if (!isJson(data)) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0) url = url + `/api/project/${projectid}/scene`;else if (activeStep === 1) url = url + `/api/project/${projectid}/asset`;else if (activeStep === 2) url = url + `/api/project/${projectid}/action`;else if (activeStep === 3) url = url + `/api/project/${projectid}/custom`;else if (activeStep === 4) url = url + `/api/project/${projectid}/timeline`;\n\n    try {\n      const requestOptions = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: jwttoken\n        }\n      };\n      const res = await Axios.patch(url, {\n        data\n      }, requestOptions);\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\"\n      });\n      console.log(error);\n    }\n\n    setSubmitting(false);\n    onOpen();\n  };\n\n  const saveCustom = () => {\n    let str = '';\n    board.map(p => {\n      if (str.length > 0) {\n        str += `,{\"rulename\":\"${p.rulename}\", \"description\":\"${p.description}\",\"logic\": \"${btoa(p.data_name)}\"}\\n`;\n      } else {\n        str += `{\"rulename\":\"${p.rulename}\", \"description\":\"${p.description}\",\"logic\": \"${btoa(p.data_name)}\"}\\n`;\n      }\n    });\n\n    if (!fl) {\n      for (let i = 0; i < rules.length; i++) {\n        rules[i] = `\"` + rules[i] + `\"`;\n      }\n\n      fl = true;\n    }\n\n    setdata(`{\"objects_used\":[${rules}],\"rules\":[${str}]}`);\n    toast({\n      title: \"JSON is saved, click Next to continue\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\"\n    });\n    setReorder(false);\n    setDownloadable(true);\n    setBoard([]);\n    console.log(`{\"objects_used\":[${rules}],\"rules\":[${str}]}`);\n  };\n\n  return loading ? React.createElement(React.Fragment, null, React.createElement(Flex, {\n    width: \"80vw\",\n    height: \"90vh\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    thickness: \"4px\",\n    speed: \"0.65s\",\n    emptyColor: \"gray.200\",\n    color: \"blue.500\",\n    size: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199\n    },\n    __self: this\n  }))) : React.createElement(React.Fragment, null, activeStep !== 3 ? React.createElement(Grid, {\n    templateColumns: \"repeat(6, 1fr)\",\n    gap: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDir: \"column\",\n    pr: 20,\n    pt: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1213\n    },\n    __self: this\n  })), React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    marginTop: 20,\n    marginBottom: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    fontSize: 16,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    mode: \"json\",\n    theme: \"terminal\",\n    onChange: (newvalue, event) => {\n      setdata(newvalue);\n      setDownloadable(false);\n      let temp = arr;\n      temp[idx] = JSON.parse(newvalue);\n      setArr(temp);\n    },\n    value: data,\n    name: \"grammar-editor\",\n    wrapEnabled: true,\n    height: \"40em\",\n    width: \"40em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219\n    },\n    __self: this\n  }), React.createElement(Stack, {\n    marginLeft: 10,\n    py: 4,\n    direction: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246\n    },\n    __self: this\n  }, names.map((name, id) => React.createElement(React.Fragment, null, React.createElement(Button, {\n    colorScheme: \"blue\",\n    onClick: () => setdata(JSON.stringify(arr[id], null, '\\t')),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249\n    },\n    __self: this\n  }, name))))), React.createElement(Stack, {\n    py: 4,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257\n    },\n    __self: this\n  }, React.createElement(Button, {\n    colorScheme: \"yellow\",\n    disabled: !data,\n    onClick: onValidate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258\n    },\n    __self: this\n  }, \"Validate\"), React.createElement(Button, {\n    colorScheme: \"green\",\n    disabled: !downloadable,\n    onClick: downloadTxtFile,\n    leftIcon: React.createElement(BiDownload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265\n    },\n    __self: this\n  }, \"Download File\")), activeStep === stepslen ? React.createElement(Flex, {\n    px: 4,\n    py: 4,\n    width: \"100%\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    fontSize: \"xl\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286\n    },\n    __self: this\n  }, \"Woohoo! All steps completed!\"), React.createElement(Button, {\n    mx: \"auto\",\n    mt: 6,\n    size: \"sm\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(Flex, {\n    width: \"100%\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1294\n    },\n    __self: this\n  }, React.createElement(Button, {\n    isDisabled: activeStep === 0,\n    mr: 4,\n    onClick: prevStep,\n    size: \"sm\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295\n    },\n    __self: this\n  }, \"Prev\"), activeStep === stepslen - 1 ? React.createElement(Button, {\n    size: \"sm\",\n    onClick: onFinish,\n    disabled: !validated,\n    isLoading: submitting,\n    colorScheme: \"green\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1305\n    },\n    __self: this\n  }, \"Finish\") : React.createElement(Button, {\n    size: \"sm\",\n    onClick: onNextStep,\n    disabled: !validated,\n    isLoading: submitting,\n    colorScheme: \"yellow\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1316\n    },\n    __self: this\n  }, \"Next\")))), React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 2,\n    pt: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1332\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDir: \"column\",\n    pl: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333\n    },\n    __self: this\n  }, displayErrors.length > 0 ? React.createElement(List, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335\n    },\n    __self: this\n  }, displayErrors.map((e, i) => {\n    let str = \"\";\n    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n    let Val;\n\n    if (splitarr.length === 12) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1346\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1347\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1354\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1355\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    if (splitarr.length === 7 || splitarr.length === 8) {\n      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1370\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: \"teal.400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1371\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1378\n        },\n        __self: this\n      }, str)));\n    }\n\n    if (splitarr.length === 11) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1389\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1390\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1397\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1398\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    return React.createElement(ListItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1410\n      },\n      __self: this\n    }, React.createElement(ListIcon, {\n      as: FaExclamationCircle,\n      color: \"red.500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1411\n      },\n      __self: this\n    }), React.createElement(Val, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1412\n      },\n      __self: this\n    }));\n  })) : React.createElement(React.Fragment, null))), React.createElement(Modal, {\n    onClose: onClose,\n    isOpen: isOpen,\n    isCentered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1422\n    },\n    __self: this\n  }, React.createElement(ModalOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1423\n    },\n    __self: this\n  }), React.createElement(ModalContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1424\n    },\n    __self: this\n  }, React.createElement(ModalCloseButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1425\n    },\n    __self: this\n  }), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1426\n    },\n    __self: this\n  }, React.createElement(Box, {\n    textAlign: \"center\",\n    py: 10,\n    px: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1427\n    },\n    __self: this\n  }, React.createElement(CheckCircleIcon, {\n    boxSize: \"50px\",\n    color: \"green.500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1428\n    },\n    __self: this\n  }), React.createElement(Heading, {\n    as: \"h2\",\n    size: \"xl\",\n    mt: 6,\n    mb: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1429\n    },\n    __self: this\n  }, \"Your specification are successful saved!\"), React.createElement(Text, {\n    color: \"gray.500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432\n    },\n    __self: this\n  }, \"We have made sure that your data is free from any data-types or syntax errors. Happy Development!\"))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    as: Link,\n    to: \"/projects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1440\n    },\n    __self: this\n  }, \"Close\")))))) : React.createElement(React.Fragment, null, React.createElement(Tabs, {\n    isFitted: true,\n    variant: \"unstyled\",\n    marginTop: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1448\n    },\n    __self: this\n  }, React.createElement(TabList, {\n    mb: \"1em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1449\n    },\n    __self: this\n  }, React.createElement(Tab, {\n    _selected: {\n      color: 'white',\n      bg: 'blue.300'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1450\n    },\n    __self: this\n  }, \"Author Custom Behaviour\"), React.createElement(Tab, {\n    _selected: {\n      color: 'white',\n      bg: 'blue.300'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451\n    },\n    __self: this\n  }, \"View Authored Custom Behaviours\"), React.createElement(Tab, {\n    _selected: {\n      color: 'white',\n      bg: 'blue.300'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1452\n    },\n    __self: this\n  }, \"Publish\")), React.createElement(TabPanels, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1454\n    },\n    __self: this\n  }, React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1455\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1456\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    templateColumns: \"repeat(8, 1fr)\",\n    gap: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1457\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 8,\n    colStart: 1,\n    colEnd: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1458\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1460\n    },\n    __self: this\n  }, \"Author your custom behaviours below.\"), React.createElement(Flex, {\n    flexDir: \"row\",\n    marginTop: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1461\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1462\n    },\n    __self: this\n  }, \"Behaviour Name:\"), React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1463\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    paddingRight: 10,\n    paddingLeft: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1464\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: rulename,\n    onChange: handel_name,\n    placeholder: \"Name\",\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1468\n    },\n    __self: this\n  }))), React.createElement(Text, {\n    fontSize: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1476\n    },\n    __self: this\n  }, \"Behaviour Description:\"), React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1477\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    paddingLeft: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1478\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: description,\n    onChange: handel_description,\n    placeholder: \"Description\",\n    size: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1481\n    },\n    __self: this\n  })))), React.createElement(Flex, {\n    flexDir: \"row\",\n    paddingTop: 10,\n    paddingLeft: 35,\n    marginLeft: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1490\n    },\n    __self: this\n  }, React.createElement(Box, {\n    as: \"pane\",\n    bg: \"grey\",\n    _dark: {\n      bg: \"gray.800\"\n    },\n    h: \"32em\",\n    w: \"12em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1491\n    },\n    __self: this\n  }, React.createElement(Box, {\n    as: \"pane\",\n    zIndex: \"fixed\",\n    h: \"300px\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    w: \"400px\",\n    colorScheme: \"yellow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    px: \"4\",\n    pb: \"3\",\n    pt: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1509\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    ml: \"2\",\n    color: \"white\",\n    fontWeight: \"semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1510\n    },\n    __self: this\n  }, \"Code Constructs\")), React.createElement(Flex, {\n    direction: \"column\",\n    as: \"nav\",\n    fontSize: \"lg\",\n    color: \"white\",\n    \"aria-label\": \"Main Navigation\",\n    margin: 5,\n    marginTop: 2,\n    marginLeft: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1519\n    },\n    __self: this\n  }, semantics.elements.map(p => React.createElement(\"a\", {\n    onClick: () => {\n      console.log(position);\n      var newdata_part1 = data.slice(0, position);\n      var newdata_part2 = data.slice(position);\n      setdata(newdata_part1 + p.editorDisplay + newdata_part2);\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1530\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1539\n    },\n    __self: this\n  }, p.displayName)))))), React.createElement(Flex, {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1546\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    fontSize: 16,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    mode: \"json\",\n    theme: \"terminal\",\n    onChange: (newvalue, event) => {\n      fl = false;\n      setdata(newvalue);\n      setDownloadable(false);\n    },\n    onCursorChange: newplace => {\n      convertPointer({\n        \"row\": newplace.cursor.row,\n        \"column\": newplace.cursor.column\n      }, newplace.cursor.document.$lines);\n    },\n    onSelectionChange: e => {\n      convertPointer({\n        \"row\": e.cursor.row,\n        \"column\": e.cursor.column\n      }, e.doc.$lines);\n    },\n    value: data,\n    name: \"grammar-editor\",\n    wrapEnabled: true,\n    height: \"40em\",\n    width: \"40em\",\n    id: \"editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1547\n    },\n    __self: this\n  })), React.createElement(Box, {\n    as: \"pane\",\n    bg: \"grey\",\n    _dark: {\n      bg: \"gray.800\"\n    },\n    h: \"32em\",\n    w: \"18em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1580\n    },\n    __self: this\n  }, React.createElement(Box // navbar\n  , {\n    as: \"pane\",\n    zIndex: \"fixed\",\n    h: \"300px\",\n    pb: \"10\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    bg: \"grey\",\n    w: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1589\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    px: \"4\",\n    pb: \"3\",\n    pt: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1599\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    ml: \"2\",\n    color: \"white\",\n    fontWeight: \"semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1600\n    },\n    __self: this\n  }, \"Action-Responses\")), React.createElement(Flex, {\n    direction: \"column\",\n    as: \"nav\",\n    fontSize: \"lg\",\n    color: \"white\",\n    \"aria-label\": \"Main Navigation\",\n    margin: 5,\n    marginTop: 2,\n    marginLeft: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1609\n    },\n    __self: this\n  }, flag ? rules.map(p => React.createElement(\"a\", {\n    onClick: () => {\n      var newdata_part1 = data.slice(0, position);\n      var newdata_part2 = data.slice(position);\n      setdata(newdata_part1 + p + newdata_part2);\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1621\n    },\n    __self: this\n  }, p)) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1634\n    },\n    __self: this\n  }, \"No recent files...\")))))), React.createElement(Stack, {\n    py: 4,\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1641\n    },\n    __self: this\n  }, React.createElement(Button, {\n    colorScheme: \"yellow\",\n    disabled: !(data && rulename && description),\n    onClick: () => {\n      handleValidateButton();\n      setSeed(Math.random());\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1642\n    },\n    __self: this\n  }, \"Validate\"), React.createElement(Button, {\n    colorScheme: \"green\",\n    disabled: !validated,\n    onClick: () => {\n      saveButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1652\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    colorScheme: \"red\",\n    disabled: !(data || rulename || description),\n    onClick: () => {\n      flushWrite();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1661\n    },\n    __self: this\n  }, \"Flush\")), activeStep === stepslen ? React.createElement(Flex, {\n    px: 4,\n    py: 4,\n    width: \"100%\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1672\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    fontSize: \"xl\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1678\n    },\n    __self: this\n  }, \"Woohoo! All steps completed!\"), React.createElement(Button, {\n    mx: \"auto\",\n    mt: 6,\n    size: \"sm\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1681\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(Flex, {\n    width: \"100%\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1686\n    },\n    __self: this\n  }, React.createElement(Button, {\n    isDisabled: activeStep === 0,\n    mr: 4,\n    onClick: prevStep,\n    size: \"sm\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1687\n    },\n    __self: this\n  }, \"Prev\")))), React.createElement(GridItem, {\n    rowSpan: 3,\n    colSpan: 2,\n    pt: 120,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1701\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    flexDir: \"column\",\n    pl: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1702\n    },\n    __self: this\n  }, displayErrors.length > 0 ? React.createElement(List, {\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1704\n    },\n    __self: this\n  }, displayErrors.map((e, i) => {\n    let str = \"\";\n    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n    let Val;\n\n    if (splitarr.length === 12) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1716\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1717\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1724\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1725\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    if (splitarr.length === 7 || splitarr.length === 8) {\n      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1746\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: \"teal.400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1747\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1754\n        },\n        __self: this\n      }, str)));\n    }\n\n    if (splitarr.length === 11) {\n      splitarr.map((m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m));\n\n      Val = () => React.createElement(React.Fragment, null, React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1767\n        },\n        __self: this\n      }, React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1768\n        },\n        __self: this\n      }, splitarr[0]), React.createElement(Text, {\n        as: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1775\n        },\n        __self: this\n      }, str), React.createElement(Text, {\n        as: \"span\",\n        fontWeight: \"bold\",\n        color: tipcolors[splitarr[10]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1776\n        },\n        __self: this\n      }, \" \" + splitarr[10])));\n    }\n\n    return React.createElement(ListItem, {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1789\n      },\n      __self: this\n    }, React.createElement(ListIcon, {\n      as: FaExclamationCircle,\n      color: \"red.500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1790\n      },\n      __self: this\n    }), React.createElement(Val, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1794\n      },\n      __self: this\n    }));\n  })) : React.createElement(React.Fragment, null)))))), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1807\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1808\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    templateColumns: \"repeat(6, 1fr)\",\n    gap: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1809\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 8,\n    colStart: 1,\n    colEnd: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1810\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1811\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1812\n    },\n    __self: this\n  }, \"Choose a custom behaviour to view the behaviour logic.\"), React.createElement(Flex, {\n    flexDir: \"row\",\n    paddingTop: 10,\n    paddingLeft: 35,\n    marginLeft: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1813\n    },\n    __self: this\n  }, React.createElement(Stack, {\n    direction: \"column\",\n    marginRight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1814\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1815\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1816\n    },\n    __self: this\n  }, \"Behaviour Name: \", rule.rulename)), React.createElement(Flex, {\n    paddingTop: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1818\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1819\n    },\n    __self: this\n  }, \"Behaviour Description: \", rule.description)), React.createElement(Flex, {\n    paddingTop: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1821\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1822\n    },\n    __self: this\n  }, \"Behaviour Logic:\")), React.createElement(Flex, {\n    paddingLeft: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1824\n    },\n    __self: this\n  }, React.createElement(AceEditor, {\n    fontSize: 20,\n    showPrintMargin: true,\n    showGutter: true,\n    highlightActiveLine: true,\n    setOptions: {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true,\n      enableSnippets: false,\n      showLineNumbers: true,\n      tabSize: 2\n    },\n    mode: \"json\",\n    theme: \"terminal\",\n    value: rule.data_name != null ? atob(rule.data_name) : rule.data_name // value={logic}\n    ,\n    name: \"grammar-editor\",\n    wrapEnabled: true,\n    height: \"28em\",\n    width: \"32em\",\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1825\n    },\n    __self: this\n  }))), React.createElement(Box, {\n    as: \"pane\",\n    bg: \"grey\",\n    _dark: {\n      bg: \"gray.800\"\n    },\n    h: \"36em\",\n    w: \"18em\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1849\n    },\n    __self: this\n  }, React.createElement(Box // navbar\n  , {\n    as: \"pane\",\n    zIndex: \"fixed\",\n    h: \"300px\",\n    pb: \"10\",\n    overflowX: \"hidden\",\n    overflowY: \"auto\",\n    bg: \"grey\",\n    w: \"400px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1858\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    px: \"4\",\n    pb: \"3\",\n    pt: \"5\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1868\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    ml: \"2\",\n    color: \"white\",\n    fontWeight: \"semibold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1869\n    },\n    __self: this\n  }, \"Custom Behaviours\")), React.createElement(Flex, {\n    direction: \"column\",\n    as: \"nav\",\n    fontSize: \"md\",\n    color: \"white\",\n    \"aria-label\": \"Main Navigation\",\n    margin: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1878\n    },\n    __self: this\n  }, rule_list.length > 0 ? rule_list.map(p => React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1888\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: () => {\n      setRule(p);\n      setLogic(p.data_name);\n    },\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1889\n    },\n    __self: this\n  }, p.rulename))) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1902\n    },\n    __self: this\n  }, \"No recent files!\")))))), React.createElement(Flex, {\n    marginTop: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1909\n    },\n    __self: this\n  }, React.createElement(Button, {\n    colorScheme: \"red\",\n    disabled: !rule.rulename,\n    onClick: () => {\n      setRule({});\n      setLogic(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1910\n    },\n    __self: this\n  }, \"Flush\"))))))), React.createElement(TabPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1926\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1927\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    templateColumns: \"repeat(6, 1fr)\",\n    gap: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1928\n    },\n    __self: this\n  }, React.createElement(GridItem, {\n    rowSpan: 8,\n    colStart: 1,\n    colEnd: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    py: 4,\n    alignItems: \"center\",\n    flexDir: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1931\n    },\n    __self: this\n  }, \"Select and Publish final custom behaviours.\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1932\n    },\n    __self: this\n  }, \"Drag and drop custom behaviours from the behaviour section. Organise them in an order. On saving, the underlying specification will be published.\"), React.createElement(Flex, {\n    flexDir: \"row\",\n    paddingTop: 10,\n    paddingLeft: 35,\n    marginLeft: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1935\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    paddingTop: 10,\n    marginRight: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1937\n    },\n    __self: this\n  }, board.length > 0 ? React.createElement(Box, {\n    ref: drop,\n    width: 600,\n    height: 700,\n    border: \"1px solid\",\n    position: \"relative\",\n    maxHeight: 700,\n    overflowY: \"auto\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1940\n    },\n    __self: this\n  }, React.createElement(Stack, {\n    py: 4,\n    direction: \"column\",\n    paddingLeft: 5,\n    paddingRight: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1950\n    },\n    __self: this\n  }, board.map((p, index) => React.createElement(Button, {\n    backgroundColor: \"blue.200\",\n    height: 10,\n    width: \"auto\",\n    draggable: true,\n    onDragStart: e => {\n      if (reorder) {\n        e.dataTransfer.setData('text/plain', index);\n      }\n    },\n    onDragOver: e => {\n      e.preventDefault();\n    },\n    onDrop: e => {\n      if (reorder) {\n        const dragIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\n        console.log(dragIndex);\n        const hoverIndex = index;\n\n        if (dragIndex != hoverIndex) {\n          handleReorder(dragIndex, hoverIndex);\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1957\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1981\n    },\n    __self: this\n  }, p.rulename))))) : React.createElement(Box, {\n    ref: drop,\n    width: 600,\n    height: 700,\n    border: \"1px solid\",\n    position: \"relative\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1987\n    },\n    __self: this\n  }, React.createElement(Text, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1996\n    },\n    __self: this\n  }, \"Drop Here\"))), React.createElement(Stack, {\n    py: 4,\n    direction: \"column\",\n    maxHeight: 800,\n    overflowY: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2003\n    },\n    __self: this\n  }, React.createElement(Flex, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2009\n    },\n    __self: this\n  }, React.createElement(Text, {\n    fontSize: \"2xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2010\n    },\n    __self: this\n  }, \"Custom Behaviours\")), rule_list.length > 0 ? rule_list.map(p => {\n    return React.createElement(Behaviour, {\n      obj: p,\n      reorder: reorder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2014\n      },\n      __self: this\n    });\n  }) : React.createElement(React.Fragment, null, React.createElement(Text, {\n    fontSize: \"xl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2018\n    },\n    __self: this\n  }, \"No recent files!\")))), React.createElement(Stack, {\n    py: 4,\n    direction: \"row\",\n    marginTop: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2023\n    },\n    __self: this\n  }, React.createElement(Button, {\n    colorScheme: \"yellow\",\n    onClick: () => {\n      setReorder(true);\n    },\n    disabled: board.length === 0,\n    isLoading: submitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2024\n    },\n    __self: this\n  }, \"Reorder\"), React.createElement(Button, {\n    onClick: saveCustom,\n    disabled: !reorder,\n    isLoading: submitting,\n    colorScheme: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2032\n    },\n    __self: this\n  }, \"Save\"), React.createElement(Button, {\n    onClick: () => {\n      setBoard([]);\n      setReorder(false);\n    },\n    disabled: board.length === 0,\n    isLoading: submitting,\n    colorScheme: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2040\n    },\n    __self: this\n  }, \"Flush\"), React.createElement(Button, {\n    colorScheme: \"green\",\n    disabled: !downloadable,\n    onClick: downloadTxtFile,\n    leftIcon: React.createElement(BiDownload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2052\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2048\n    },\n    __self: this\n  }, \"Download File\")), React.createElement(Flex, {\n    width: \"70%\",\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2057\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: onNextStep,\n    disabled: board.length,\n    isLoading: submitting,\n    colorScheme: \"yellow\",\n    variant: \"outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 2058\n    },\n    __self: this\n  }, \"Next\")))))))))));\n};\n\nconst CustomCard = React.forwardRef(({\n  children,\n  ...rest\n}, ref) => React.createElement(Box, {\n  p: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2083\n  },\n  __self: this\n}, React.createElement(Tag, Object.assign({\n  ref: ref\n}, rest, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 2084\n  },\n  __self: this\n}), children)));\nexport default ProjectPageContent;","map":{"version":3,"sources":["/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/src/Components/Project/ProjectPageContent.jsx"],"names":["Box","Button","Divider","Flex","Grid","GridItem","Heading","Input","List","ListIcon","ListItem","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalOverlay","Select","Spinner","Stack","Tag","Text","Tooltip","useDisclosure","useToast","Tabs","TabList","TabPanels","Tab","TabPanel","FormControl","Textarea","VStack","Axios","React","useEffect","useState","AceEditor","FaExclamationCircle","FaFileAlt","BiDownload","CheckCircleIcon","useParams","useDrop","validation_server","backend","isJson","e","semantics","Behaviour","Link","errors","rules","valid_rule","grammarDataArray","flag","fl","tipcolors","number","object","boolean","string","array","jsonValidator","grammar","validating","keys","Object","keys22","grammarArray","filter","value","includes","extraEntries","map","en","app","i","length","root","proot","push","typeof","key","hasOwnProperty","a","c","repeat","obje","found","indexOf","req","alert","b","console","log","ProjectPageContent","stepslen","nextStep","prevStep","reset","activeStep","scene","action","asset","projectname","timeline","custom","toast","projectid","jwttoken","localStorage","getItem","val","setValue","files","setfiles","loading","setLoading","submitting","setSubmitting","data","setdata","grammarid","setGrammarid","validated","setValidated","grammarbundle","setGrammarbundle","displayErrors","setDisplayErrors","rule_list","setRuleList","names","setNames","arr","setArr","idx","setIdx","downloadable","setDownloadable","isOpen","onOpen","onClose","description","setDescription","perdata","setPerdata","seed","setSeed","rulename","setRulename","textPointer","setTextPointer","position","setPosition","savebutton","setSavebutton","rule","setRule","logic","setLogic","board","setBoard","reorder","setReorder","isOver","canDrop","drop","accept","item","obj","collect","monitor","handleReorder","dragIndex","hoverIndex","dragged","newBoard","splice","convertPointer","pointer","lines","pos","row","column","getFiles","requestOptions","headers","token","res","get","requestOption","res2","p","name","grammarName","error","title","status","duration","isClosable","getRules","res_rules","post","project_id","myobjs","JSON","parse","all_names","tarr","articles","_objectname","stringify","ObjAction","actresid","downloadTxtFile","fileName","json","blob","Blob","type","href","URL","createObjectURL","downlink","document","createElement","download","body","appendChild","click","removeChild","revokeObjectURL","handleInputChange","inputValue","target","asset_valid","asset_list","valid_obj","d","j","assetValidator","all_object_ids","ret1","sourceObj","ret2","targetObj","repeatactionfor","repeat_assets","curr_word","Array","from","char","word","ret","onValidate2","data_name","onValidate","tdata","myjson","mygrm","_sid","ret_asset","showValidateHandler","code","jsonData","types","order","prev","next","constructs","conditionStart","conditionEnd","scopeStart","scopeEnd","pre","parent","conditionSeparator","specialSymbols","fetch","method","then","response","catch","err","valid","handleValidateButton","saveButton","btoa","flushWrite","onNextStep","url","patch","message","handel_name","handel_description","onFinish","saveCustom","str","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","newvalue","event","temp","id","splitarr","match","Val","m","color","bg","elements","newdata_part1","slice","newdata_part2","editorDisplay","displayName","newplace","cursor","$lines","doc","Math","random","atob","index","dataTransfer","setData","preventDefault","parseInt","getData","CustomCard","forwardRef","children","rest","ref"],"mappings":";AAAA,SACEA,GADF,EAEEC,MAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,OAPF,EAQEC,KARF,EASEC,IATF,EAUEC,QAVF,EAWEC,QAXF,EAYEC,KAZF,EAaEC,SAbF,EAcEC,gBAdF,EAeEC,YAfF,EAgBEC,WAhBF,EAiBEC,YAjBF,EAkBEC,MAlBF,EAmBEC,OAnBF,EAoBEC,KApBF,EAqBEC,GArBF,EAsBEC,IAtBF,EAuBEC,OAvBF,EAwBEC,aAxBF,EAyBEC,QAzBF,EA0BEC,IA1BF,EA2BEC,OA3BF,EA4BEC,SA5BF,EA6BEC,GA7BF,EA8BEC,QA9BF,EA+BEC,WA/BF,EAgCEC,QAhCF,EAiCEC,MAjCF,QAkCO,kBAlCP;AAmCA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,mBAAT,EAA8BC,SAA9B,QAA+C,gBAA/C;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,iBAAT,EAA4BC,OAA5B,QAA2C,mBAA3C;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,CAAP,MAAc,MAAd;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,EAAE,GAAG,KAAT;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,QADQ;AAEhBC,EAAAA,MAAM,EAAE,OAFQ;AAGhBC,EAAAA,OAAO,EAAE,KAHO;AAIhBC,EAAAA,MAAM,EAAE,QAJQ;AAKhBC,EAAAA,KAAK,EAAE;AALS,CAAlB;;AAQA,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyB;AAC7C,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,OAAZ,CAAb;AACA,QAAMI,MAAM,GAAGD,MAAM,CAACD,IAAP,CAAYD,UAAZ,CAAf;AAEA,QAAMI,YAAY,GAAGF,MAAM,CAACD,IAAP,CAAYF,OAAZ,EAAqBM,MAArB,CAClBC,KAAD,IAAW,CAACJ,MAAM,CAACD,IAAP,CAAYD,UAAZ,EAAwBO,QAAxB,CAAiCD,KAAjC,CADO,CAArB;AAIA,QAAME,YAAY,GAAGN,MAAM,CAACD,IAAP,CAAYD,UAAZ,EAAwBK,MAAxB,CAClBC,KAAD,IAAW,CAACJ,MAAM,CAACD,IAAP,CAAYF,OAAZ,EAAqBQ,QAArB,CAA8BD,KAA9B,CADO,CAArB;AAIAE,EAAAA,YAAY,CAACC,GAAb,CAAkBC,EAAD,IAAQ;AACvB,QAAIC,GAAG,GAAG,CAAV;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIX,IAAI,CAACW,CAAD,CAAJ,KAAYF,EAAZ,IAAkBX,OAAO,CAACE,IAAI,CAACW,CAAD,CAAL,CAAP,CAAiBE,IAAjB,KAA0BJ,EAA5C,IAAkDX,OAAO,CAACE,IAAI,CAACW,CAAD,CAAL,CAAP,CAAiBG,KAAjB,KAA2BL,EAAjF,EACEC,GAAG,GAAG,CAAN;AACH;;AACD,QAAIA,GAAJ,EAAS;AACPzB,MAAAA,MAAM,CAAC8B,IAAP,CAAa,IAAGN,EAAG,8BAAnB;AACD;AACF,GAVD;AAYAN,EAAAA,YAAY,CAACK,GAAb,CAAkBC,EAAD,IAAQ;AACvB,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAAM,CAACU,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIF,EAAE,KAAKP,MAAM,CAACS,CAAD,CAAb,IAAoBb,OAAO,CAACW,EAAD,CAAP,CAAYI,IAAZ,KAAqBX,MAAM,CAACS,CAAD,CAA/C,IAAsDb,OAAO,CAACW,EAAD,CAAP,CAAYK,KAAZ,KAAsBZ,MAAM,CAACS,CAAD,CAAtF,EAA2F;AACzFD,QAAAA,GAAG,GAAG,CAAN;AACD;AACF;;AACD,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACbzB,MAAAA,MAAM,CAAC8B,IAAP,CACG,IAAGN,EAAG,qDAAoDX,OAAO,CAACW,EAAD,CAAP,CAAYO,MAAO,OADhF;AAGD;AACF,GAZD;;AAcA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,IAAI,CAACY,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIM,GAAG,GAAGjB,IAAI,CAACW,CAAD,CAAd;;AACA,QAAIb,OAAO,CAACmB,GAAD,CAAP,CAAaC,cAAb,CAA4B,OAA5B,CAAJ,EAA0C;AACxC,UAAIC,CAAC,GAAGpB,UAAU,CAACD,OAAO,CAACmB,GAAD,CAAP,CAAaH,KAAd,CAAlB;;AACA,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACP,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,YAAIS,CAAC,GAAGD,CAAC,CAACR,CAAD,CAAT;;AACA,YAAIS,CAAC,CAACF,cAAF,CAAiBpB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAA9B,CAAJ,EAAyC;AACvC,cAAI,OAAOO,CAAC,CAACtB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAAd,CAAD,CAAqBI,GAArB,CAAP,KAAqCnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAtD,EAA8D,CAC7D,CADD,MAEK;AACH,gBAAI,OAAOI,CAAC,CAACtB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAAd,CAAD,CAAqBI,GAArB,CAAP,KAAqC,WAAzC,EAAsD;AACpDhC,cAAAA,MAAM,CAAC8B,IAAP,CACG,IAAGE,GAAI,qDAAoDnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,OADlF;AAGD,aAJD,MAKK;AACH/B,cAAAA,MAAM,CAAC8B,IAAP,CACG,KAAIE,GAAI,6BAA4B,OAAOG,CAAC,CAACtB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAAd,CAAD,CAAqBI,GAArB,CAA0B,uBAAsBnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,EADlH;AAGD;AACF;AACF;AACF;AACF,KArBD,MAsBK,IAAIlB,OAAO,CAACmB,GAAD,CAAP,CAAaC,cAAb,CAA4B,QAA5B,KAAyCpB,OAAO,CAACmB,GAAD,CAAP,CAAaI,MAAb,KAAwB,OAArE,EAA8E;AACjF,UAAIF,CAAC,GAAGrB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAArB;AACA,UAAIS,IAAI,GAAGrB,MAAM,CAACD,IAAP,CAAYD,UAAZ,CAAX;AACA,UAAIwB,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAaL,CAAb,CAAZ;;AAEA,UAAI,OAAOpB,UAAU,CAACoB,CAAD,CAAjB,KAAyB,QAA7B,EAAuC;AACrC,aAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,UAAU,CAACoB,CAAD,CAAV,CAAcP,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,cAAI,OAAOZ,UAAU,CAACoB,CAAD,CAAV,CAAcR,CAAd,EAAiBM,GAAjB,CAAP,KAAiCnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAA9C,IAAyD,OAAOjB,UAAU,CAACoB,CAAD,CAAV,CAAcR,CAAd,EAAiBM,GAAjB,CAAP,KAAiC,QAAjC,IAA6CnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAb,KAAwB,OAAlI,EAA4I,CAC3I,CADD,MAEK;AACH,gBAAI,OAAOjB,UAAU,CAACoB,CAAD,CAAV,CAAcR,CAAd,EAAiBM,GAAjB,CAAP,KAAiC,WAArC,EAAkD;AAChDhC,cAAAA,MAAM,CAAC8B,IAAP,CACG,IAAGE,GAAI,qDAAoDnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,OADlF;AAGD,aAJD,MAKK;AACH/B,cAAAA,MAAM,CAAC8B,IAAP,CACG,KAAIE,GAAI,6BAA4B,OAAOlB,UAAU,CAACoB,CAAD,CAAV,CAAcR,CAAd,EAC5CM,GAD4C,CAE1C,uBAAsBnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,EAH9C;AAKD;AACF;AACF;AACF;AACF,KAzBI,MA0BA;AACH,UAAIlB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAAb,KAAsB,MAAtB,IAAgCf,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAAb,KAAsB,WAAtD,IAAsE,CAACf,OAAO,CAACmB,GAAD,CAAP,CAAaC,cAAb,CAA4B,MAA5B,CAA3E,EAAiH;AAC/G,YAAI,OAAOnB,UAAU,CAACkB,GAAD,CAAjB,KAA2B,WAA/B,EAA4C;AAC1C;AACD,SAH8G,CAK/G;;;AACA,YACE,OAAOlB,UAAU,CAACkB,GAAD,CAAjB,KAA2B,QAA3B,IACAnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAb,KAAwB,QAF1B,EAGE;AACA;AACD;;AAED,YAAI,OAAOjB,UAAU,CAACkB,GAAD,CAAjB,KAA2BnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAA5C,EAAoD;AAClD/B,UAAAA,MAAM,CAAC8B,IAAP,CACG,KAAIE,GAAI,6BAA4B,OAAOlB,UAAU,CACtDkB,GADsD,CAEpD,uBAAsBnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,EAH9C;AAKD,SAND,MAOK,CACH;AACD;;AAED,YACE,OAAOjB,UAAU,CAACkB,GAAD,CAAjB,KAA2B,QAA3B,IACA,OAAOlB,UAAU,CAACkB,GAAD,CAAjB,KAA2BnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MADxC,IAEAlB,OAAO,CAACmB,GAAD,CAAP,CAAaQ,GAAb,KAAqB,WAFrB,IAGA1B,UAAU,CAACkB,GAAD,CAAV,CAAgBL,MAAhB,KAA2B,CAJ7B,EAKE;AACA3B,UAAAA,MAAM,CAAC8B,IAAP,CAAa,IAAGE,GAAI,6CAApB;AACD;AACF,OAhCD,MAiCK;AACH,YAAIE,CAAC,GAAGrB,OAAO,CAACmB,GAAD,CAAP,CAAaJ,IAArB;;AACA,YAAI,KAAJ,EAAW;AACT,eAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,UAAU,CAACoB,CAAD,CAAV,CAAcP,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,gBAAI,OAAOZ,UAAU,CAACoB,CAAD,CAAV,CAAcR,CAAd,EAAiBM,GAAxB,KAAgCnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAjD,EAAyD;AACvDU,cAAAA,KAAK,CAAC,QAAD,CAAL;AACD,aAFD,MAGK;AACH;AACA;AACAzC,cAAAA,MAAM,CAAC8B,IAAP,CAAa,IAAGE,GAAI,iCAAgCnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,GAAxE;AACD;AACF;AACF,SAXD,MAYK;AACH,cAAIW,CAAC,GAAG5B,UAAU,CAACoB,CAAD,CAAlB,CADG,CAEH;;AACA,cAAIC,CAAC,GAAGnB,MAAM,CAACD,IAAP,CAAY2B,CAAZ,CAAR;AACA,cAAIJ,KAAK,GAAGH,CAAC,CAACI,OAAF,CAAUP,GAAV,CAAZ;;AACA,cAAI,OAAOlB,UAAU,CAACoB,CAAD,CAAV,CAAcC,CAAC,CAACG,KAAD,CAAf,CAAP,KAAmCzB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAhD,IAA2D,OAAOjB,UAAU,CAACoB,CAAD,CAAV,CAAcC,CAAC,CAACG,KAAD,CAAf,CAAP,KAAmC,QAAnC,IAA+CzB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAb,KAAwB,OAAtI,EAAgJ,CAC9I;AACD,WAFD,MAGK;AACH,gBAAI,OAAOjB,UAAU,CAACoB,CAAD,CAAV,CAAcC,CAAC,CAACG,KAAD,CAAf,CAAP,KAAmC,WAAvC,EAAoD;AAClDtC,cAAAA,MAAM,CAAC8B,IAAP,CACG,IAAGE,GAAI,qDAAoDnB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,OADlF;AAID,aALD,MAMK;AACH/B,cAAAA,MAAM,CAAC8B,IAAP,CACG,KAAIE,GAAI,6BAA4B,OAAOlB,UAAU,CAACoB,CAAD,CAAV,CAAcC,CAAC,CAACG,KAAD,CAAf,CAC3C,uBAAsBzB,OAAO,CAACmB,GAAD,CAAP,CAAaD,MAAO,EAF7C;AAID;AACF;AACF;AACF;AACF;AACF;;AAED,MAAI/B,MAAM,CAAC2B,MAAP,GAAgB,CAApB,EAAuB;AACrBgB,IAAAA,OAAO,CAACC,GAAR,CAAY5C,MAAZ;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAxKD;;AA0KA,MAAM6C,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,QAD0B;AAE1BC,EAAAA,QAF0B;AAG1BC,EAAAA,QAH0B;AAI1BC,EAAAA,KAJ0B;AAK1BC,EAAAA,UAL0B;AAM1BC,EAAAA,KAN0B;AAO1BC,EAAAA,MAP0B;AAQ1BC,EAAAA,KAR0B;AAS1BC,EAAAA,WAT0B;AAU1BC,EAAAA,QAV0B;AAW1BC,EAAAA;AAX0B,CAAD,KAYrB;AACJ,QAAMC,KAAK,GAAGpF,QAAQ,EAAtB;AACA,QAAM;AAAEqF,IAAAA;AAAF,MAAgBnE,SAAS,EAA/B;AACA,QAAMoE,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AAEA,MAAI,CAACC,GAAD,EAAMC,QAAN,IAAkBhF,KAAK,CAACE,QAAN,CAAe,EAAf,CAAtB;AACA,QAAM,CAAC+E,KAAD,EAAQC,QAAR,IAAoBhF,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiF,OAAD,EAAUC,UAAV,IAAwBlF,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmF,UAAD,EAAaC,aAAb,IAA8BpF,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACqF,IAAD,EAAOC,OAAP,IAAkBtF,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuF,SAAD,EAAYC,YAAZ,IAA4BxF,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACyF,SAAD,EAAYC,YAAZ,IAA4B1F,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC2F,aAAD,EAAgBC,gBAAhB,IAAoC5F,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC6F,aAAD,EAAgBC,gBAAhB,IAAoC9F,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC+F,SAAD,EAAYC,WAAZ,IAA2BhG,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACiG,KAAD,EAAQC,QAAR,IAAoBlG,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmG,GAAD,EAAMC,MAAN,IAAgBpG,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACqG,GAAD,EAAMC,MAAN,IAAgBtG,QAAQ,CAAC,CAAD,CAA9B;AAEA,QAAM,CAACuG,YAAD,EAAeC,eAAf,IAAkCxG,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAEyG,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA;AAAlB,MAA8BxH,aAAa,EAAjD;AACA,QAAM,CAACyH,WAAD,EAAcC,cAAd,IAAgC7G,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC8G,OAAD,EAAUC,UAAV,IAAwB/G,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgH,IAAD,EAAOC,OAAP,IAAkBjH,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACkH,QAAD,EAAWC,WAAX,IAA0BnH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoH,WAAD,EAAcC,cAAd,IAAgCrH,QAAQ,CAAC;AAAC,WAAO,CAAR;AAAW,cAAU;AAArB,GAAD,CAA9C;AAEA,QAAM,CAACsH,QAAD,EAAWC,WAAX,IAA0BvH,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACwH,UAAD,EAAaC,aAAb,IAA8BzH,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC0H,IAAD,EAAOC,OAAP,IAAkB3H,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC4H,KAAD,EAAQC,QAAR,IAAoB7H,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8H,KAAD,EAAQC,QAAR,IAAoB/H,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgI,OAAD,EAAUC,UAAV,IAAwBjI,QAAQ,CAAC,KAAD,CAAtC;AAED,QAAM,CAAC;AAAEkI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAAsBC,IAAtB,IAA8B7H,OAAO,CAAC,OAAO;AAClD8H,IAAAA,MAAM,EAAE,WAD0C;AAElDD,IAAAA,IAAI,EAAGE,IAAD,IAAUP,QAAQ,CAAED,KAAD,IAAW,CAACA,KAAK,CAAC1F,QAAN,CAAekG,IAAI,CAACC,GAApB,CAAD,GAA4B,CAAC,GAAGT,KAAJ,EAAWQ,IAAI,CAACC,GAAhB,CAA5B,GAAmDT,KAA/D,CAF0B;AAGlDU,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACtBP,MAAAA,MAAM,EAAEO,OAAO,CAACP,MAAR,EADc;AAEtBC,MAAAA,OAAO,EAAEM,OAAO,CAACN,OAAR;AAFa,KAAd;AAHyC,GAAP,CAAD,CAA3C;;AASA,QAAMO,aAAa,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AAChD,UAAMC,OAAO,GAAGf,KAAK,CAACa,SAAD,CAArB;AACA,UAAMG,QAAQ,GAAG,CAAC,GAAGhB,KAAJ,CAAjB;AACAgB,IAAAA,QAAQ,CAACC,MAAT,CAAgBJ,SAAhB,EAA2B,CAA3B;AACAG,IAAAA,QAAQ,CAACC,MAAT,CAAgBH,UAAhB,EAA4B,CAA5B,EAA+BC,OAA/B;AACAd,IAAAA,QAAQ,CAACe,QAAD,CAAR;AACA,GAND;;AAQC,QAAME,cAAc,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzC,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAI,IAAI1G,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEwG,OAAO,CAACG,GAAR,GAAc,CAA9B,EAAiC3G,CAAC,EAAlC,EAAsC;AACpC0G,MAAAA,GAAG,IAAID,KAAK,CAACzG,CAAD,CAAL,CAASC,MAAhB;AACA,UAAGwG,KAAK,CAACzG,CAAD,CAAL,CAASC,MAAT,KAAoB,CAAvB,EACEyG,GAAG,IAAE,CAAL;AACH;;AACDA,IAAAA,GAAG,IAAIF,OAAO,CAACI,MAAf;AACA,QAAGJ,OAAO,CAACI,MAAR,KAAmB,CAAtB,EACEF,GAAG,IAAE,CAAL;AACF5B,IAAAA,WAAW,CAAC4B,GAAD,CAAX;AACD,GAXD;;AAaA,QAAMG,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,cAAc,GAAG;AACrBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsCC,UAAAA,KAAK,EAAE/E;AAA7C;AADY,OAAvB;AAGA,YAAMgF,GAAG,GAAG,MAAM7J,KAAK,CAAC8J,GAAN,EAChB;AACAlJ,MAAAA,OAAO,GAAG,oBAFM,EAGhB8I,cAHgB,CAAlB;AAMA,YAAMK,aAAa,GAAG;AACpBJ,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsCC,UAAAA,KAAK,EAAE/E;AAA7C;AADW,OAAtB;AAGA,YAAMmF,IAAI,GAAG,MAAMhK,KAAK,CAAC8J,GAAN,EACjB;AACAlJ,MAAAA,OAAO,GAAI,gBAAegE,SAAU,cAFnB,EAGjBmF,aAHiB,CAAnB;AAKA5E,MAAAA,QAAQ,CAAC0E,GAAG,CAACrE,IAAL,CAAR;AAEAqE,MAAAA,GAAG,CAACrE,IAAJ,CAAS/C,GAAT,CAAcwH,CAAD,IAAO;AAClB,YAAIA,CAAC,CAACC,IAAF,IAAUF,IAAI,CAACxE,IAAL,CAAU2E,WAAxB,EAAqC;AACnC,cAAI9I,gBAAgB,CAACwB,MAAjB,IAA2B,CAA/B,EAAkC;AAChCxB,YAAAA,gBAAgB,CAAC2B,IAAjB,CAAsBiH,CAAC,CAAC5F,KAAxB;AACAhD,YAAAA,gBAAgB,CAAC2B,IAAjB,CAAsBiH,CAAC,CAAC1F,KAAxB;AACAlD,YAAAA,gBAAgB,CAAC2B,IAAjB,CAAsBiH,CAAC,CAAC3F,MAAxB;AACAjD,YAAAA,gBAAgB,CAAC2B,IAAjB,CAAsBiH,CAAC,CAACvF,MAAxB;AACArD,YAAAA,gBAAgB,CAAC2B,IAAjB,CAAsBiH,CAAC,CAACxF,QAAxB;AACD;AACF;AACF,OAVD;AAWD,KA/BD,CA+BE,OAAO2F,KAAP,EAAc;AACdzF,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,sBADH;AAC4B;AAChCC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOA5D,MAAAA,OAAO,CAACC,GAAR,CAAYsG,KAAZ;AACD;AACF,GA1CD;;AA4CA,QAAMK,QAAQ,GAAG,YAAY;AAC3B,UAAMC,SAAS,GAAG,MAAM1K,KAAK,CAAC2K,IAAN,EACtB;AACA/J,IAAAA,OAAO,GAAG,8BAFY,EAGtB;AACE+I,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,KAAK,EAAE/E;AAFA,OADX;AAKEW,MAAAA,IAAI,EAAE;AACJoF,QAAAA,UAAU,EAAEhG;AADR;AALR,KAHsB,CAAxB;AAaAuB,IAAAA,WAAW,CAACuE,SAAS,CAAClF,IAAX,CAAX;AACD,GAfD;;AAiBAtF,EAAAA,SAAS,CAAC,MAAM;AACdmF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAoE,IAAAA,QAAQ;AACRgB,IAAAA,QAAQ;;AACR,QAAIrG,UAAU,IAAI,CAAlB,EAAqB;AACnBqB,MAAAA,OAAO,CAACpB,KAAD,CAAP;AACAoF,MAAAA,QAAQ;AACRlI,MAAAA,EAAE,GAAG,KAAL;;AACA,UAAIV,MAAM,CAACwD,KAAD,CAAV,EAAmB;AACjBsC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AACD,QAAIvC,UAAU,IAAI,CAAlB,EAAqB;AACnB,YAAMyG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWxG,KAAX,CAAf;AACA,UAAIyG,SAAS,GAAG,EAAhB;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACK,QAAlB;AACAL,MAAAA,MAAM,CAACK,QAAP,CAAgBzI,GAAhB,CAAoB,CAACY,CAAD,EAAGT,CAAH,KAAO;AACzBoI,QAAAA,SAAS,CAAChI,IAAV,CAAeK,CAAC,CAAC8H,WAAjB;AACD,OAFD;AAGA9E,MAAAA,QAAQ,CAAC2E,SAAD,CAAR;AACAzE,MAAAA,MAAM,CAAC0E,IAAD,CAAN;AACAxF,MAAAA,OAAO,CAACqF,IAAI,CAACM,SAAL,CAAeH,IAAI,CAACzE,GAAD,CAAnB,EAA0B,IAA1B,EAAgC,IAAhC,CAAD,CAAP,CATmB,CAUnB;;AACAjF,MAAAA,EAAE,GAAG,KAAL;;AACA,UAAIV,MAAM,CAAC0D,KAAD,CAAV,EAAmB;AACjBoC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AACD,QAAIvC,UAAU,IAAI,CAAlB,EAAqB;AACnB,UAAIyG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWzG,MAAX,CAAb;AACA,UAAI0G,SAAS,GAAG,EAAhB;AACA,UAAIC,IAAI,GAAGJ,MAAM,CAACQ,SAAlB;AACAR,MAAAA,MAAM,CAACQ,SAAP,CAAiB5I,GAAjB,CAAqB,CAACY,CAAD,EAAGT,CAAH,KAAO;AAC1BoI,QAAAA,SAAS,CAAChI,IAAV,CAAeK,CAAC,CAACiI,QAAjB;AACD,OAFD;AAGAjF,MAAAA,QAAQ,CAAC2E,SAAD,CAAR;AACAzE,MAAAA,MAAM,CAAC0E,IAAD,CAAN;AACAxF,MAAAA,OAAO,CAACqF,IAAI,CAACM,SAAL,CAAeH,IAAI,CAACzE,GAAD,CAAnB,EAA0B,IAA1B,EAAgC,IAAhC,CAAD,CAAP,CATmB,CAUnB;;AACAjF,MAAAA,EAAE,GAAG,KAAL;;AACA,UAAIV,MAAM,CAACyD,MAAD,CAAV,EAAoB;AAClBqC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AACD,QAAIvC,UAAU,IAAI,CAAlB,EAAqB;AACnB;AACA7C,MAAAA,EAAE,GAAG,KAAL;;AACA,UAAIV,MAAM,CAAC6D,MAAD,CAAV,EAAoB;AAClBiC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AACD,QAAIvC,UAAU,IAAI,CAAlB,EAAqB;AACnBqB,MAAAA,OAAO,CAAChB,QAAD,CAAP;AACAlD,MAAAA,EAAE,GAAG,KAAL;;AACA,UAAIV,MAAM,CAAC4D,QAAD,CAAV,EAAsB;AACpBkC,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF;;AACDtB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GA3DQ,EA2DN,EA3DM,CAAT;;AA6DA,QAAMkG,eAAe,GAAG,MAAM;AAC5B,QAAI/F,IAAI,KAAK,EAAT,IAAe,CAAC3E,MAAM,CAAC2E,IAAD,CAA1B,EAAkC;AAChCb,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,4BADH;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOAd,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD;;AACD,QAAI6E,QAAQ,GAAG,EAAf;AACA,QAAIpH,UAAU,KAAK,CAAnB,EAAsBoH,QAAQ,GAAG,OAAX;AACtB,QAAIpH,UAAU,KAAK,CAAnB,EAAsBoH,QAAQ,GAAG,OAAX;AACtB,QAAIpH,UAAU,KAAK,CAAnB,EAAsBoH,QAAQ,GAAG,QAAX;AACtB,QAAIpH,UAAU,KAAK,CAAnB,EAAsBoH,QAAQ,GAAG,QAAX;AACtB,QAAIpH,UAAU,KAAK,CAAnB,EAAsBoH,QAAQ,GAAG,UAAX;AACtB,UAAMC,IAAI,GAAGjG,IAAb;AACA,UAAMkG,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,IAAD,CAAT,EAAiB;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAjB,CAAb;AACA,UAAMC,IAAI,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAb;AAEA,UAAMM,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAjB;AACAF,IAAAA,QAAQ,CAACH,IAAT,GAAgBA,IAAhB;AACAG,IAAAA,QAAQ,CAACG,QAAT,GAAoB3H,WAAW,GAAG,GAAd,GAAoBgH,QAApB,GAA+B,OAAnD;AACAS,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,QAA1B;AACAA,IAAAA,QAAQ,CAACM,KAAT,GA1B4B,CA4B5B;;AACAL,IAAAA,QAAQ,CAACG,IAAT,CAAcG,WAAd,CAA0BP,QAA1B;AACAF,IAAAA,GAAG,CAACU,eAAJ,CAAoBX,IAApB;AACD,GA/BD;;AAiCA,MAAIY,iBAAiB,GAAI3L,CAAD,IAAO;AAC7B,QAAI4L,UAAU,GAAG5L,CAAC,CAAC6L,MAAF,CAASrK,KAA1B;AACA2C,IAAAA,QAAQ,CAACyH,UAAD,CAAR;AACD,GAHD;;AAKA,MAAIE,WAAW,GAAG,CAACrI,KAAD,EAAQsI,UAAR,EAAoBvL,IAApB,KAA6B;AAC7C;AACA,QAAIwL,SAAS,GAAG,KAAhB;AAEAD,IAAAA,UAAU,CAACpK,GAAX,CAAgB,CAACsK,CAAD,EAAGC,CAAH,KAAO;AACrB,UAAGzI,KAAK,KAAKwI,CAAb,EACED,SAAS,GAAG,IAAZ,CAFmB,CAGrB;AACA;AACD,KALD;;AAOA,QAAGA,SAAS,KAAK,KAAjB,EAAwB;AACtBjH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAc,MAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,UAAIrF,IAAJ,EAAU;AACRqD,QAAAA,KAAK,CAAC;AACJ0F,UAAAA,KAAK,EACH,YAAW9F,KAAX,GAAkB,4EAAlB,GAA+FA,KAA/F,GAAqG,IAArG,GAA0GsI,UAFxG;AAGJvC,UAAAA,MAAM,EAAE,SAHJ;AAIJC,UAAAA,QAAQ,EAAE,IAJN;AAKJC,UAAAA,UAAU,EAAE,IALR;AAMJ/C,UAAAA,QAAQ,EAAE;AANN,SAAD,CAAL;AAQD;;AACD,aAAO,CAAC,CAAR;AACD;;AACD,WAAO,CAAP;AACD,GA3BD;;AA6BA,MAAIwF,cAAc,GAAG,CAAC7J,CAAD,EAAI8J,cAAJ,KAAuB;AAC1C9J,IAAAA,CAAC,CAACX,GAAF,CAAM,CAACY,CAAD,EAAGT,CAAH,KAAO;AACX,UAAIuK,IAAI,GAAGP,WAAW,CAACvJ,CAAC,CAAC+J,SAAH,EAAcF,cAAd,EAA8B,CAA9B,CAAtB;AACA,UAAIG,IAAJ;;AACA,UAAIhK,CAAC,CAACiK,SAAF,CAAYjK,CAAC,CAACiK,SAAF,CAAYzK,MAAZ,GAAqB,CAAjC,MAAwC,GAA5C,EAAiD;AAC/CwK,QAAAA,IAAI,GAAG,CAAP;AACD,OAFD,MAGEA,IAAI,GAAGT,WAAW,CAACvJ,CAAC,CAACiK,SAAH,EAAcJ,cAAd,EAA8B,CAA9B,CAAlB;;AAEF,UAAGC,IAAI,KAAK,CAAC,CAAb,EAAgB;AACd,eAAO,KAAP;AACD;;AAED,UAAI9J,CAAC,CAACkK,eAAF,KAAsB,IAAtB,IAA8BlK,CAAC,CAACkK,eAAF,CAAkB1K,MAAlB,KAA6B,CAA3D,IAAgEQ,CAAC,CAACkK,eAAF,CAAkB,CAAlB,MAAyB,GAA7F,EAAkG;AAChG,YAAIC,aAAa,GAAG,EAApB;AACA,YAAIC,SAAS,GAAG,EAAhB;AACAC,QAAAA,KAAK,CAACC,IAAN,CAAWtK,CAAC,CAACkK,eAAb,EAA8B9K,GAA9B,CAAkC,CAACmL,IAAD,EAAO1K,GAAP,KAAa;AAC7C,cAAI0K,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,GAA7B,EAAkC;AAChC,gBAAGH,SAAS,KAAK,EAAd,IAAoBA,SAAS,KAAK,GAAlC,IAAyCA,SAAS,CAAC5K,MAAV,KAAqB,CAAjE,EAAoE;AAClE2K,cAAAA,aAAa,CAACxK,IAAd,CAAmByK,SAAnB;AACAA,cAAAA,SAAS,GAAG,EAAZ;AACD;AACF,WALD,MAMEA,SAAS,GAAGA,SAAS,GAAGG,IAAxB;AACH,SARD;AASA,YAAGH,SAAS,IAAI,EAAb,IAAmBA,SAAS,IAAI,GAAhC,IAAuCA,SAAS,CAAC5K,MAAV,IAAoB,CAA9D,EACE2K,aAAa,CAACxK,IAAd,CAAmByK,SAAnB;AAEFD,QAAAA,aAAa,CAAC/K,GAAd,CAAkB,CAACoL,IAAD,EAAO3K,GAAP,KAAa;AAC7B,cAAI4K,GAAG,GAAGlB,WAAW,CAACiB,IAAD,EAAOX,cAAP,EAAuB,CAAvB,CAArB;;AACA,cAAKY,GAAG,KAAK,CAAC,CAAd,EAAiB;AACf,mBAAO,KAAP;AACD;AACF,SALD;;AAOA,YAAIT,IAAI,KAAK,CAAC,CAAV,IAAehK,CAAC,CAACiK,SAAF,CAAYjK,CAAC,CAACiK,SAAF,CAAYzK,MAAZ,GAAqB,CAAjC,MAAwC,GAA3D,EAAgE;AAC9D8B,UAAAA,KAAK,CAAC;AACJ0F,YAAAA,KAAK,EACH,mFAFE;AAGJC,YAAAA,MAAM,EAAE,SAHJ;AAIJC,YAAAA,QAAQ,EAAE,IAJN;AAKJC,YAAAA,UAAU,EAAE,IALR;AAMJ/C,YAAAA,QAAQ,EAAE;AANN,WAAD,CAAL;AAQA,iBAAO,KAAP;AACD,SAVD,MAUO;AACL,cAAGmF,WAAW,CAACvJ,CAAC,CAACiK,SAAH,EAAcE,aAAd,EAA6B,CAA7B,CAAX,KAA+C,CAAlD,EAAqD;AACnD7I,YAAAA,KAAK,CAAC;AACJ0F,cAAAA,KAAK,EACH,wDAFE;AAGJC,cAAAA,MAAM,EAAE,SAHJ;AAIJC,cAAAA,QAAQ,EAAE,IAJN;AAKJC,cAAAA,UAAU,EAAE,IALR;AAMJ/C,cAAAA,QAAQ,EAAE;AANN,aAAD,CAAL;AAQA,mBAAO,KAAP;AACD;AACF;AACF;AACF,KA1DD;AA2DA,WAAO,IAAP;AACD,GA7DD;;AA+DA,MAAIsG,WAAW,GAAG,YAAY;AAC5BpJ,IAAAA,KAAK,CAAC;AACJ0F,MAAAA,KAAK,EAAE,uBADH;AAEJC,MAAAA,MAAM,EAAE,SAFJ;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,UAAU,EAAE,IAJR;AAKJ/C,MAAAA,QAAQ,EAAE;AALN,KAAD,CAAL;AAQArG,IAAAA,UAAU,CAAC4B,IAAX,CAAgB;AACdqE,MAAAA,QAAQ,EAAEA,QADI;AAEd2G,MAAAA,SAAS,EAAExI,IAFG;AAGduB,MAAAA,WAAW,EAAEA;AAHC,KAAhB;AAMAJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAiB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAjBD;;AAmBA,QAAMqG,UAAU,GAAG,YAAY;AAC7B,QAAIC,KAAK,GAAG1I,IAAZ;AACA,QAAIpB,UAAU,IAAI,CAAlB,EACE8J,KAAK,GAAGpD,IAAI,CAACM,SAAL,CAAe;AAACF,MAAAA,QAAQ,EAAE5E;AAAX,KAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAAR,CADF,KAEK,IAAIlC,UAAU,IAAI,CAAlB,EACH8J,KAAK,GAAGpD,IAAI,CAACM,SAAL,CAAe;AAACC,MAAAA,SAAS,EAAE/E;AAAZ,KAAf,EAAiC,IAAjC,EAAuC,CAAvC,CAAR;;AAEF,QAAI,CAACzF,MAAM,CAACqN,KAAD,CAAX,EAAoB;AAClBrI,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAc,MAAAA,eAAe,CAAC,KAAD,CAAf;AACAhC,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,4BADH;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOA;AACD;;AACDxB,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA/E,IAAAA,MAAM,GAAG,EAAT;AACA,QAAIiN,MAAM,GAAGrD,IAAI,CAACC,KAAL,CAAWmD,KAAX,CAAb;;AAEA,QAAI;AACF,UAAIE,KAAK,GAAG,EAAZ;AACA,UAAIhK,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACK,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACA,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACA,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACA,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CANxB,CAOF;AAED,KATD,CASE,OAAOP,CAAP,EAAU;AACV+C,MAAAA,OAAO,CAACC,GAAR,CAAYhD,CAAZ;AACD;;AAED,QAAI;AACF,UAAIsD,UAAU,IAAI,CAAlB,EAAqB;AACnB,YAAI;AACF;AACE,gBAAI8I,cAAc,GAAG,EAArB;AACA,kBAAMrC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWxG,KAAX,CAAf;AAEAsG,YAAAA,MAAM,CAACK,QAAP,CAAgBzI,GAAhB,CAAoB,CAACY,CAAD,EAAGT,CAAH,KAAO;AACzBsK,cAAAA,cAAc,CAAClK,IAAf,CAAoBK,CAAC,CAACgL,IAAtB;AACD,aAFD;AAIA,gBAAIjL,CAAC,GAAG+K,MAAM,CAAC9C,SAAf;;AACA,iBAAK,IAAIzI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACP,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,kBAAIS,CAAC,GAAGD,CAAC,CAACR,CAAD,CAAD,CAAK0I,QAAb;AACAhK,cAAAA,IAAI,GAAG,IAAP;;AACA,kBAAI+B,CAAJ,EAAO;AACLlC,gBAAAA,KAAK,CAAC6B,IAAN,CAAWK,CAAX;AACD;AACF;AACF;AACF,SAlBD,CAkBE,OAAOvC,CAAP,EAAU;AACV+C,UAAAA,OAAO,CAACC,GAAR,CAAYhD,CAAZ;AACA+E,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAc,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAhC,UAAAA,KAAK,CAAC;AACJ0F,YAAAA,KAAK,EACH,wEAFE;AAGJC,YAAAA,MAAM,EAAE,SAHJ;AAIJC,YAAAA,QAAQ,EAAE,IAJN;AAKJC,YAAAA,UAAU,EAAE,IALR;AAMJ/C,YAAAA,QAAQ,EAAE;AANN,WAAD,CAAL;AAQA;AACD;AACF,OAjCD,MAiCO,IAAIrD,UAAU,IAAI,CAAlB,EAAqB;AAC1B,YAAI;AACF;AACE,gBAAIhB,CAAC,GAAG+K,MAAM,CAACjD,QAAf;;AACA,iBAAK,IAAItI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACP,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,kBAAIS,CAAC,GAAGD,CAAC,CAACR,CAAD,CAAD,CAAKuI,WAAb;AACA7J,cAAAA,IAAI,GAAG,IAAP;;AACA,kBAAI+B,CAAJ,EAAO;AACLlC,gBAAAA,KAAK,CAAC6B,IAAN,CAAWK,CAAX;AACD;AACF;AACF;AACF,SAXD,CAWE,OAAOvC,CAAP,EAAU;AACV+C,UAAAA,OAAO,CAACC,GAAR,CAAYhD,CAAZ;AACA+E,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAc,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAhC,UAAAA,KAAK,CAAC;AACJ0F,YAAAA,KAAK,EACH,wEAFE;AAGJC,YAAAA,MAAM,EAAE,SAHJ;AAIJC,YAAAA,QAAQ,EAAE,IAJN;AAKJC,YAAAA,UAAU,EAAE,IALR;AAMJ/C,YAAAA,QAAQ,EAAE;AANN,WAAD,CAAL;AAQA;AACD;AACF;AACF,KA7DD,CA6DE,MAAM;AACN5D,MAAAA,OAAO,CAACC,GAAR,CAAYhD,CAAZ;AACD;;AACD,QAAIO,gBAAgB,CAACwB,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,YAAM4G,QAAQ,EAAd;AACD;;AAGD,QAAI;AACF,UAAI2E,KAAK,GAAG,EAAZ;AACA,UAAIhK,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACK,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACA,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACA,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR,CAArB,KACA,IAAI+C,UAAU,IAAI,CAAlB,EAAqBgK,KAAK,GAAGtD,IAAI,CAACC,KAAL,CAAW1J,gBAAgB,CAAC,CAAD,CAA3B,CAAR;;AAG1B,UAAI,CAACS,aAAa,CAACsM,KAAD,EAAQD,MAAR,CAAlB,EAAmC;AACjC,YAAG/J,UAAU,KAAK,CAAlB,EACA;AACE,cAAI8I,cAAc,GAAG,EAArB;AACA,gBAAMrC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWxG,KAAX,CAAf;AAEAsG,UAAAA,MAAM,CAACK,QAAP,CAAgBzI,GAAhB,CAAoB,CAACY,CAAD,EAAGT,CAAH,KAAO;AACzBsK,YAAAA,cAAc,CAAClK,IAAf,CAAoBK,CAAC,CAACgL,IAAtB;AACD,WAFD;AAIA,gBAAMC,SAAS,GAAGrB,cAAc,CAACkB,MAAM,CAAC9C,SAAR,EAAmB6B,cAAnB,CAAhC;;AACA,cAAG,CAACoB,SAAJ,EACA;AACEzK,YAAAA,OAAO,CAACC,GAAR,CAAY5C,MAAZ;AACAyD,YAAAA,KAAK,CAAC;AACJ0F,cAAAA,KAAK,EAAE,wEADH;AAEJC,cAAAA,MAAM,EAAE,SAFJ;AAGJC,cAAAA,QAAQ,EAAE,IAHN;AAIJC,cAAAA,UAAU,EAAE,IAJR;AAKJ/C,cAAAA,QAAQ,EAAE;AALN,aAAD,CAAL;AAOA;AACD,WAXD,MAYI;AACF5B,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACAc,YAAAA,eAAe,CAAC,IAAD,CAAf;AACAhC,YAAAA,KAAK,CAAC;AACJ0F,cAAAA,KAAK,EAAE,uBADH;AAEJC,cAAAA,MAAM,EAAE,SAFJ;AAGJC,cAAAA,QAAQ,EAAE,IAHN;AAIJC,cAAAA,UAAU,EAAE,IAJR;AAKJ/C,cAAAA,QAAQ,EAAE;AALN,aAAD,CAAL;AAOD;AACF,SAjCD,MAkCI;AACF5B,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAc,UAAAA,eAAe,CAAC,IAAD,CAAf;AACAhC,UAAAA,KAAK,CAAC;AACJ0F,YAAAA,KAAK,EAAE,uBADH;AAEJC,YAAAA,MAAM,EAAE,SAFJ;AAGJC,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,UAAU,EAAE,IAJR;AAKJ/C,YAAAA,QAAQ,EAAE;AALN,WAAD,CAAL;AAOD;AACF,OA9CD,MA8CO;AACL5D,QAAAA,OAAO,CAACC,GAAR,CAAY5C,MAAZ;AACAyD,QAAAA,KAAK,CAAC;AACJ0F,UAAAA,KAAK,EAAE,wEADH;AAEJC,UAAAA,MAAM,EAAE,SAFJ;AAGJC,UAAAA,QAAQ,EAAE,IAHN;AAIJC,UAAAA,UAAU,EAAE,IAJR;AAKJ/C,UAAAA,QAAQ,EAAE;AALN,SAAD,CAAL;AAOD;;AACDxB,MAAAA,gBAAgB,CAAC/E,MAAD,CAAhB;AACD,KAlED,CAmEA,OAAOJ,CAAP,EAAU;AACR+C,MAAAA,OAAO,CAACC,GAAR,CAAYhD,CAAZ;AACA6D,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,wEADH;AAEJC,QAAAA,MAAM,EAAE,SAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOD;AACF,GAtLD;;AAwLA,QAAM8G,mBAAmB,GAAG,YAAY;AACtC,QAAIC,IAAI,GAAGhJ,IAAX;AACA,QAAIiJ,QAAQ,GAAG3D,IAAI,CAACM,SAAL,CAAe;AAC5BsD,MAAAA,KAAK,EAAE,CACL;AACE9C,QAAAA,IAAI,EAAE,IADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,CAAhB;AAFT,OADK,EAML;AACE/C,QAAAA,IAAI,EAAE,MADR;AAEEgD,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,SAAP,CAFR;AAGED,QAAAA,KAAK,EAAE,CAAC,CAAC,OAAD,CAAD;AAHT,OANK,EAYL;AACE/C,QAAAA,IAAI,EAAE,SADR;AAEEgD,QAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,SAAP,CAFR;AAGED,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,CAAhB;AAHT,OAZK,EAkBL;AACE/C,QAAAA,IAAI,EAAE,QADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,EAAU,CAAC,MAAD,CAAV,EAAoB,CAAC,SAAD,CAApB,CAAhB;AAFT,OAlBK,EAuBL;AACE/C,QAAAA,IAAI,EAAE,aADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,CAAhB;AAFT,OAvBK,EA4BL;AACE/C,QAAAA,IAAI,EAAE,qBADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,OAAD,CAAD;AAFT,OA5BK,EAiCL;AACE/C,QAAAA,IAAI,EAAE,KADR;AAEE+C,QAAAA,KAAK,EAAE,CACL,CAAC,WAAD,EAAc,CAAC,oBAAD,EAAuB,oBAAvB,CAAd,CADK,EAEL,CAAC,OAAD,CAFK;AAFT,OAjCK,EAyCL;AACE/C,QAAAA,IAAI,EAAE,OADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,OAAD,CAAhB;AAFT,OAzCK,EA8CL;AACE/C,QAAAA,IAAI,EAAE,IADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,OAAD,CAAD,CAFT;AAGEE,QAAAA,IAAI,EAAE,CAAC,UAAD;AAHR,OA9CK,EAoDL;AACEjD,QAAAA,IAAI,EAAE,UADR;AAEE+C,QAAAA,KAAK,EAAE,CAAC,CAAC,WAAD,CAAD,CAFT;AAGEC,QAAAA,IAAI,EAAE,CAAC,IAAD;AAHR,OApDK,CADqB;AA2D5BE,MAAAA,UAAU,EAAE,CACV;AACE5E,QAAAA,IAAI,EAAE,IADR;AAEE0B,QAAAA,IAAI,EAAE,IAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKEC,QAAAA,UAAU,EAAE,GALd;AAMEC,QAAAA,QAAQ,EAAE;AANZ,OADU,EAUV;AACEhF,QAAAA,IAAI,EAAE,SADR;AAEE0B,QAAAA,IAAI,EAAE,SAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKEC,QAAAA,UAAU,EAAE,GALd;AAMEC,QAAAA,QAAQ,EAAE,GANZ;AAOEC,QAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,SAAP;AAPP,OAVU,EAoBV;AACEjF,QAAAA,IAAI,EAAE,MADR;AAEE0B,QAAAA,IAAI,EAAE,MAFR;AAGEqD,QAAAA,UAAU,EAAE,GAHd;AAIEC,QAAAA,QAAQ,EAAE,GAJZ;AAKEC,QAAAA,GAAG,EAAE,CAAC,IAAD,EAAO,SAAP;AALP,OApBU,EA4BV;AACEjF,QAAAA,IAAI,EAAE,QADR;AAEE0B,QAAAA,IAAI,EAAE,QAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKE5C,QAAAA,IAAI,EAAE,MALR;AAME6C,QAAAA,UAAU,EAAE,GANd;AAOEC,QAAAA,QAAQ,EAAE,GAPZ;AAQE,oBAAY;AARd,OA5BU,EAuCV;AACEhF,QAAAA,IAAI,EAAE,MADR;AAEE0B,QAAAA,IAAI,EAAE,aAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKEC,QAAAA,UAAU,EAAE,GALd;AAMEC,QAAAA,QAAQ,EAAE,GANZ;AAOEE,QAAAA,MAAM,EAAE;AAPV,OAvCU,EAiDV;AACElF,QAAAA,IAAI,EAAE,SADR;AAEE0B,QAAAA,IAAI,EAAE,qBAFR;AAGEqD,QAAAA,UAAU,EAAE,GAHd;AAIEC,QAAAA,QAAQ,EAAE,GAJZ;AAKEE,QAAAA,MAAM,EAAE;AALV,OAjDU,EAyDV;AACElF,QAAAA,IAAI,EAAE,KADR;AAEE0B,QAAAA,IAAI,EAAE,KAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKEK,QAAAA,kBAAkB,EAAE,GALtB;AAMEJ,QAAAA,UAAU,EAAE,GANd;AAOEC,QAAAA,QAAQ,EAAE;AAPZ,OAzDU,EAmEV;AACEhF,QAAAA,IAAI,EAAE,OADR;AAEE0B,QAAAA,IAAI,EAAE,OAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE,GAJhB;AAKEC,QAAAA,UAAU,EAAE,GALd;AAMEC,QAAAA,QAAQ,EAAE;AANZ,OAnEU,EA4EV;AACEhF,QAAAA,IAAI,EAAE,IADR;AAEE0B,QAAAA,IAAI,EAAE,IAFR;AAGEqD,QAAAA,UAAU,EAAE,GAHd;AAIEC,QAAAA,QAAQ,EAAE,GAJZ;AAKEL,QAAAA,IAAI,EAAE;AALR,OA5EU,EAoFV;AACE3E,QAAAA,IAAI,EAAE,UADR;AAEE0B,QAAAA,IAAI,EAAE,UAFR;AAGEmD,QAAAA,cAAc,EAAE,GAHlB;AAIEC,QAAAA,YAAY,EAAE;AAJhB,OApFU,CA3DgB;AAsJ5BM,MAAAA,cAAc,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B;AAtJY,KAAf,CAAf,CAFsC,CA2JtC;;AACAC,IAAAA,KAAK,CAAC5O,iBAAiB,GAAG,aAArB,EAAoC;AACvCgJ,MAAAA,OAAO,EAAE;AACP,kBAAU,mCADH;AAEP,wBAAgB;AAFT,OAD8B;AAKvC6F,MAAAA,MAAM,EAAE,MAL+B;AAMvCpD,MAAAA,IAAI,EAAEtB,IAAI,CAACM,SAAL,CAAe;AAACqD,QAAAA;AAAD,OAAf;AANiC,KAApC,CAAL,CAOGgB,IAPH,CAOSC,QAAD,IAAc;AACpBA,MAAAA,QAAQ,CAACjE,IAAT,GAAgBgE,IAAhB,CAAsBzK,GAAD,IAAS;AAC5BnB,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,OAHD,EAIC2K,KAJD,CAIQC,GAAD,IAAO;AACZ/L,QAAAA,OAAO,CAACC,GAAR,CAAY8L,GAAZ;AACD,OAND;AAOD,KAfD,EAgBCD,KAhBD,CAgBQC,GAAD,IAAO;AACZ/L,MAAAA,OAAO,CAACC,GAAR,CAAY8L,GAAZ;AACD,KAlBD,EA5JsC,CAgLtC;;AACAL,IAAAA,KAAK,CAAC5O,iBAAiB,GAAG,cAArB,EAAqC;AACxCgJ,MAAAA,OAAO,EAAE;AACP,kBAAU,mCADH;AAEP,wBAAgB;AAFT,OAD+B;AAKxC6F,MAAAA,MAAM,EAAE,MALgC;AAMxCpD,MAAAA,IAAI,EAAEtB,IAAI,CAACM,SAAL,CAAe;AAACoD,QAAAA;AAAD,OAAf;AANkC,KAArC,CAAL,CAOGiB,IAPH,CAOSC,QAAD,IAAc;AACpBA,MAAAA,QAAQ,CAACjE,IAAT,GAAgBgE,IAAhB,CAAsBzK,GAAD,IAAS;AAC5B,YAAIA,GAAG,CAAC6K,KAAR,EAAe;AACb9B,UAAAA,WAAW;AACZ,SAFD,MAEO;AACLlI,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAc,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAhC,UAAAA,KAAK,CAAC;AACJ0F,YAAAA,KAAK,EAAE,0CADH;AAEJC,YAAAA,MAAM,EAAE,OAFJ;AAGJC,YAAAA,QAAQ,EAAE,IAHN;AAIJC,YAAAA,UAAU,EAAE,IAJR;AAKJ/C,YAAAA,QAAQ,EAAE;AALN,WAAD,CAAL;AAOA;AACD;AACF,OAfD,EAgBCkI,KAhBD,CAgBQC,GAAD,IAAO;AACZ/L,QAAAA,OAAO,CAACC,GAAR,CAAY8L,GAAZ;AACD,OAlBD;AAmBD,KA3BD,EA4BCD,KA5BD,CA4BQC,GAAD,IAAO;AACZ/L,MAAAA,OAAO,CAACC,GAAR,CAAY8L,GAAZ;AACD,KA9BD;AA+BD,GAhND;;AAkNA,QAAME,oBAAoB,GAAG,MAAM;AACjCvB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACA1I,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;;AAKA,QAAMkK,UAAU,GAAG,YAAY;AAC7B,QAAG;AACD,YAAMlG,GAAG,GAAG,MAAM7J,KAAK,CAAC2K,IAAN,EAChB;AACA/J,MAAAA,OAAO,GAAG,gCAFM,EAE4B;AAC1C+I,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,KAAK,EAAE/E;AAFA,SADiC;AAK1CW,QAAAA,IAAI,EAAE;AACJoF,UAAAA,UAAU,EAAEhG,SADR;AAEJyC,UAAAA,QAAQ,EAAEA,QAFN;AAGJ2G,UAAAA,SAAS,EAAEgC,IAAI,CAACxK,IAAD,CAHX;AAIJuB,UAAAA,WAAW,EAAEA;AAJT;AALoC,OAF5B,CAAlB;AAeApC,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,iBADH;AAEJC,QAAAA,MAAM,EAAE,SAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAQAtB,MAAAA,WAAW,CAAC,CAAC,GAAGD,SAAJ,EAAe;AACzB0E,QAAAA,UAAU,EAAEhG,SADa;AAEzByC,QAAAA,QAAQ,EAAEA,QAFe;AAGzB2G,QAAAA,SAAS,EAAEgC,IAAI,CAACxK,IAAD,CAHU;AAIzBuB,QAAAA,WAAW,EAAEA;AAJY,OAAf,CAAD,CAAX;AAOAtB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACA6B,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAnB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAnCD,CAmCE,OAAM+J,GAAN,EAAU;AACV/L,MAAAA,OAAO,CAACC,GAAR,CAAY8L,GAAZ;AACD;AACF,GAvCD;;AAyCA,QAAMK,UAAU,GAAG,MAAM;AACvBpM,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA+B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAJ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA6B,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAN,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAND;;AAQA,QAAMkJ,UAAU,GAAG,YAAY;AAC7B,QAAIhC,KAAK,GAAG1I,IAAZ;AACA,QAAIpB,UAAU,IAAI,CAAlB,EACE8J,KAAK,GAAGpD,IAAI,CAACM,SAAL,CAAe;AAACF,MAAAA,QAAQ,EAAE5E;AAAX,KAAf,EAAgC,IAAhC,EAAsC,CAAtC,CAAR,CADF,KAEK,IAAIlC,UAAU,IAAI,CAAlB,EACH8J,KAAK,GAAGpD,IAAI,CAACM,SAAL,CAAe;AAACC,MAAAA,SAAS,EAAE/E;AAAZ,KAAf,EAAiC,IAAjC,EAAuC,CAAvC,CAAR;;AAEF,QAAI,CAACzF,MAAM,CAAC2E,IAAD,CAAP,IAAiBpB,UAAU,KAAK,CAApC,EAAuC;AACrCyB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAlB,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,4BADH;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOA;AACD;;AACDlC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAI4K,GAAG,GAAGvP,OAAV;AACA,QAAIwD,UAAU,KAAK,CAAnB,EACE+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,QAAtC,CADF,KAEK,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,QAAtC,CADG,KAEA,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,SAAtC,CADG,KAEA,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,SAAtC,CADG,KAEA,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,WAAtC;;AACF,QAAI;AACF,YAAM8E,cAAc,GAAG;AACrBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsCC,UAAAA,KAAK,EAAE/E;AAA7C;AADY,OAAvB;AAGA,YAAMgF,GAAG,GAAG,MAAM7J,KAAK,CAACoQ,KAAN,CAAYD,GAAZ,EAAiB;AAAE3K,QAAAA,IAAI,EAAC0I;AAAP,OAAjB,EAAiCxE,cAAjC,CAAlB;AAEA/E,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAER,GAAG,CAACrE,IAAJ,CAAS6K,OADZ;AAEJ/F,QAAAA,MAAM,EAAE,SAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOD,KAbD,CAaE,OAAO2C,KAAP,EAAc;AACdzF,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,uBADH;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOA5D,MAAAA,OAAO,CAACC,GAAR,CAAYsG,KAAZ;AACD;;AACD7E,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAtB,IAAAA,QAAQ;AACT,GAvDD;;AAyDA,QAAMqM,WAAW,GAAIxP,CAAD,IAAO;AACzBwG,IAAAA,WAAW,CAACxG,CAAC,CAAC6L,MAAF,CAASrK,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMiO,kBAAkB,GAAIzP,CAAD,IAAO;AAChCkG,IAAAA,cAAc,CAAClG,CAAC,CAAC6L,MAAF,CAASrK,KAAV,CAAd;AACD,GAFD;;AAIA,QAAMkO,QAAQ,GAAG,YAAY;AAC3B,QAAI,CAAC3P,MAAM,CAAC2E,IAAD,CAAX,EAAmB;AACjBK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAlB,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,4BADH;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOA;AACD;;AACDlC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACA,QAAI4K,GAAG,GAAGvP,OAAV;AACA,QAAIwD,UAAU,KAAK,CAAnB,EACE+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,QAAtC,CADF,KAEK,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,QAAtC,CADG,KAEA,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,SAAtC,CADG,KAEA,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,SAAtC,CADG,KAEA,IAAIR,UAAU,KAAK,CAAnB,EACH+L,GAAG,GAAGA,GAAG,GAAI,gBAAevL,SAAU,WAAtC;;AACF,QAAI;AACF,YAAM8E,cAAc,GAAG;AACrBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsCC,UAAAA,KAAK,EAAE/E;AAA7C;AADY,OAAvB;AAGA,YAAMgF,GAAG,GAAG,MAAM7J,KAAK,CAACoQ,KAAN,CAAYD,GAAZ,EAAiB;AAAE3K,QAAAA;AAAF,OAAjB,EAA2BkE,cAA3B,CAAlB;AAEA/E,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAER,GAAG,CAACrE,IAAJ,CAAS6K,OADZ;AAEJ/F,QAAAA,MAAM,EAAE,SAFJ;AAGJC,QAAAA,QAAQ,EAAE,IAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOD,KAbD,CAaE,OAAO2C,KAAP,EAAc;AACdzF,MAAAA,KAAK,CAAC;AACJ0F,QAAAA,KAAK,EAAE,sBADH;AAEJC,QAAAA,MAAM,EAAE,OAFJ;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,UAAU,EAAE,IAJR;AAKJ/C,QAAAA,QAAQ,EAAE;AALN,OAAD,CAAL;AAOA5D,MAAAA,OAAO,CAACC,GAAR,CAAYsG,KAAZ;AACD;;AACD7E,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAsB,IAAAA,MAAM;AACP,GAjDD;;AAmDA,QAAM4J,UAAU,GAAG,MAAM;AACvB,QAAIC,GAAG,GAAG,EAAV;AACAzI,IAAAA,KAAK,CAACxF,GAAN,CAAWwH,CAAD,IAAO;AACf,UAAIyG,GAAG,CAAC7N,MAAJ,GAAa,CAAjB,EAAoB;AAClB6N,QAAAA,GAAG,IACF,iBAAgBzG,CAAC,CAAC5C,QAClB,qBAAoB4C,CAAC,CAAClD,WACtB,eAAciJ,IAAI,CACjB/F,CAAC,CAAC+D,SADe,CAEjB,MALF;AAMD,OAPD,MAOO;AACL0C,QAAAA,GAAG,IACF,gBAAezG,CAAC,CAAC5C,QACjB,qBAAoB4C,CAAC,CAAClD,WACtB,eAAciJ,IAAI,CACjB/F,CAAC,CAAC+D,SADe,CAEjB,MALF;AAMD;AACF,KAhBD;;AAkBA,QAAI,CAACzM,EAAL,EAAS;AACP,WAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,KAAK,CAAC0B,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCzB,QAAAA,KAAK,CAACyB,CAAD,CAAL,GAAY,GAAD,GAAMzB,KAAK,CAACyB,CAAD,CAAX,GAAkB,GAA7B;AACD;;AACDrB,MAAAA,EAAE,GAAG,IAAL;AACD;;AACDkE,IAAAA,OAAO,CACJ,oBAAmBtE,KAAM,cAAauP,GAAI,IADtC,CAAP;AAGA/L,IAAAA,KAAK,CAAC;AACJ0F,MAAAA,KAAK,EACH,uCAFE;AAGJC,MAAAA,MAAM,EAAE,SAHJ;AAIJC,MAAAA,QAAQ,EAAE,IAJN;AAKJC,MAAAA,UAAU,EAAE,IALR;AAMJ/C,MAAAA,QAAQ,EAAE;AANN,KAAD,CAAL;AAQAW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAzB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAuB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACArE,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmB3C,KAAM,cAAauP,GAAI,IAAvD;AACD,GAzCD;;AA2CA,SAAOtL,OAAO,GACZ,0CACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,MADT;AAEE,IAAA,MAAM,EAAE,MAFV;AAGE,IAAA,cAAc,EAAC,QAHjB;AAIE,IAAA,UAAU,EAAE,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,UAAU,EAAC,UAHb;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,IAAI,EAAC,IALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADY,GAkBZ,0CACGhB,UAAU,KAAK,CAAf,GACC,oBAAC,IAAD;AAAM,IAAA,eAAe,EAAC,gBAAtB;AAAuC,IAAA,GAAG,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,OAAO,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,QAAf;AAAyB,IAAA,EAAE,EAAE,EAA7B;AAAiC,IAAA,EAAE,EAAE,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,OAAO,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,UAAU,EAAE,QAAzB;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,EAAjB;AAAqB,IAAA,YAAY,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,EADZ;AAEE,IAAA,eAAe,EAAE,IAFnB;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,mBAAmB,EAAE,IAJvB;AAKE,IAAA,UAAU,EAAE;AACVuM,MAAAA,yBAAyB,EAAE,IADjB;AAEVC,MAAAA,wBAAwB,EAAE,IAFhB;AAGVC,MAAAA,cAAc,EAAE,KAHN;AAIVC,MAAAA,eAAe,EAAE,IAJP;AAKVC,MAAAA,OAAO,EAAE;AALC,KALd;AAYE,IAAA,IAAI,EAAC,MAZP;AAaE,IAAA,KAAK,EAAC,UAbR;AAcE,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7BxL,MAAAA,OAAO,CAACuL,QAAD,CAAP;AACArK,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA,UAAIuK,IAAI,GAAG5K,GAAX;AACA4K,MAAAA,IAAI,CAAC1K,GAAD,CAAJ,GAAYsE,IAAI,CAACC,KAAL,CAAWiG,QAAX,CAAZ;AACAzK,MAAAA,MAAM,CAAC2K,IAAD,CAAN;AACD,KApBH;AAqBE,IAAA,KAAK,EAAE1L,IArBT;AAsBE,IAAA,IAAI,EAAC,gBAtBP;AAuBE,IAAA,WAAW,MAvBb;AAwBE,IAAA,MAAM,EAAC,MAxBT;AAyBE,IAAA,KAAK,EAAE,MAzBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EA4BE,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAE,EAAnB;AAAuB,IAAA,EAAE,EAAE,CAA3B;AAA8B,IAAA,SAAS,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,KAAK,CAAC3D,GAAN,CAAU,CAACyH,IAAD,EAAOiH,EAAP,KACT,0CACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,OAAO,EAAG,MAAM1L,OAAO,CAACqF,IAAI,CAACM,SAAL,CAAe9E,GAAG,CAAC6K,EAAD,CAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEjH,IAHF,CADF,CADD,CADH,CA5BF,CADF,EAwCE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAc,IAAA,SAAS,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,QAAQ,EAAE,CAAC1E,IAFb;AAGE,IAAA,OAAO,EAAEyI,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,QAAQ,EAAE,CAACvH,YAFb;AAGE,IAAA,OAAO,EAAE6E,eAHX;AAIE,IAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,CAxCF,EAmEGnH,UAAU,KAAKJ,QAAf,GACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAoB,IAAA,KAAK,EAAC,MAA1B;AAAiC,IAAA,aAAa,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,IAAI,EAAC,IAA9B;AAAmC,IAAA,OAAO,EAAEG,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADD,GAUC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,OAAO,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEC,UAAU,KAAK,CAD7B;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,OAAO,EAAEF,QAHX;AAIE,IAAA,IAAI,EAAC,IAJP;AAKE,IAAA,OAAO,EAAE,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGE,UAAU,KAAKJ,QAAQ,GAAG,CAA1B,GACC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAEwM,QAFX;AAGE,IAAA,QAAQ,EAAE,CAAC5K,SAHb;AAIE,IAAA,SAAS,EAAEN,UAJb;AAKE,IAAA,WAAW,EAAC,OALd;AAME,IAAA,OAAO,EAAE,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAYC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAE4K,UAFX;AAGE,IAAA,QAAQ,EAAE,CAACtK,SAHb;AAIE,IAAA,SAAS,EAAEN,UAJb;AAKE,IAAA,WAAW,EAAC,QALd;AAME,IAAA,OAAO,EAAE,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,CA7EJ,CADF,CALF,EAyHE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,OAAO,EAAE,CAA/B;AAAkC,IAAA,EAAE,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,QAAf;AAAyB,IAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,aAAa,CAACnD,MAAd,GAAuB,CAAvB,GACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmD,aAAa,CAACvD,GAAd,CAAkB,CAAC3B,CAAD,EAAI8B,CAAJ,KAAU;AAC3B,QAAI8N,GAAG,GAAG,EAAV;AACA,UAAMU,QAAQ,GAAGtQ,CAAC,CAACuQ,KAAF,CAAQ,uBAAR,CAAjB;AACA,QAAIC,GAAJ;;AACA,QAAIF,QAAQ,CAACvO,MAAT,KAAoB,EAAxB,EAA4B;AAC1BuO,MAAAA,QAAQ,CAAC3O,GAAT,CACE,CAAC8O,CAAD,EAAI3O,CAAJ,KAAUA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,KAAwB8N,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYa,CAA1C,CADZ;;AAGAD,MAAAA,GAAG,GAAG,MACJ,0CACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAE9P,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,QAAQ,CAAC,CAAD,CALX,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAjB,CARF,EASE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAElP,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,MAAMA,QAAQ,CAAC,EAAD,CALjB,CATF,CADF,CADF;AAqBD;;AACD,QAAIA,QAAQ,CAACvO,MAAT,KAAoB,CAApB,IAAyBuO,QAAQ,CAACvO,MAAT,KAAoB,CAAjD,EAAoD;AAClDuO,MAAAA,QAAQ,CAAC3O,GAAT,CAAa,CAAC8O,CAAD,EAAI3O,CAAJ,KAAUA,CAAC,KAAK,CAAN,KAAY8N,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYa,CAA9B,CAAvB;;AACAD,MAAAA,GAAG,GAAG,MACJ,0CACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAE,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGF,QAAQ,CAAC,CAAD,CALX,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAjB,CARF,CADF,CADF;AAcD;;AACD,QAAIU,QAAQ,CAACvO,MAAT,KAAoB,EAAxB,EAA4B;AAC1BuO,MAAAA,QAAQ,CAAC3O,GAAT,CACE,CAAC8O,CAAD,EAAI3O,CAAJ,KAAUA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,KAAwB8N,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYa,CAA1C,CADZ;;AAGAD,MAAAA,GAAG,GAAG,MACJ,0CACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAE9P,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,QAAQ,CAAC,CAAD,CALX,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAjB,CARF,EASE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAElP,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,MAAMA,QAAQ,CAAC,EAAD,CALjB,CATF,CADF,CADF;AAqBD;;AACD,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAExO,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEvC,mBAAd;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CADF;AAMD,GA/EA,CADH,CADD,GAoFC,yCArFJ,CADF,CAzHF,EAmNE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEyG,OAAhB;AAAyB,IAAA,MAAM,EAAEF,MAAjC;AAAyC,IAAA,UAAU,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,EAAE,EAAE,EAA5B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAE,MAA1B;AAAkC,IAAA,KAAK,EAAE,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAiB,IAAA,IAAI,EAAC,IAAtB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAkC,IAAA,EAAE,EAAE,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGALF,CADF,CAFF,EAcE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE3F,IAAV;AAAgB,IAAA,EAAE,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CAdF,CAFF,CAnNF,CADD,GA6OC,0CACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,OAAO,EAAC,UAAvB;AAAkC,IAAA,SAAS,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE;AAAEuQ,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,EAGE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAE;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,EAAE,EAAE;AAAtB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,eAAe,EAAC,gBAAtB;AAAuC,IAAA,GAAG,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,QAAQ,EAAE,CAAhC;AAAmC,IAAA,MAAM,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,UAAU,EAAE,QAAzB;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,KAAd;AAAoB,IAAA,SAAS,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,YAAY,EAAE,EADhB;AAEE,IAAA,WAAW,EAAE,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEpK,QADT;AAEE,IAAA,QAAQ,EAAEiJ,WAFZ;AAGE,IAAA,WAAW,EAAC,MAHd;AAIE,IAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAFF,EAeE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfF,EAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,WAAW,EAAE,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAEvJ,WADT;AAEE,IAAA,QAAQ,EAAEwJ,kBAFZ;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CAhBF,CAFF,EA+BE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,KAAd;AAAoB,IAAA,UAAU,EAAE,EAAhC;AAAoC,IAAA,WAAW,EAAE,EAAjD;AAAqD,IAAA,UAAU,EAAE,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,KAAK,EAAE;AACLkB,MAAAA,EAAE,EAAE;AADC,KAHT;AAME,IAAA,CAAC,EAAC,MANJ;AAOE,IAAA,CAAC,EAAC,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,CAAC,EAAC,OAHJ;AAIE,IAAA,SAAS,EAAC,QAJZ;AAKE,IAAA,SAAS,EAAC,MALZ;AAME,IAAA,CAAC,EAAC,OANJ;AAOE,IAAA,WAAW,EAAC,QAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,KAAK,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,EAAE,EAAC,GAFL;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,UAAU,EAAC,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CATF,EAmBE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,KAFL;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,kBAAW,iBALb;AAME,IAAA,MAAM,EAAE,CANV;AAOE,IAAA,SAAS,EAAE,CAPb;AAQE,IAAA,UAAU,EAAE,CARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI1Q,SAAS,CAAC2Q,QAAV,CAAmBjP,GAAnB,CAAwBwH,CAAD,IACrB;AACE,IAAA,OAAO,EAAE,MAAM;AACbpG,MAAAA,OAAO,CAACC,GAAR,CAAY2D,QAAZ;AACA,UAAIkK,aAAa,GAAGnM,IAAI,CAACoM,KAAL,CAAW,CAAX,EAAanK,QAAb,CAApB;AACA,UAAIoK,aAAa,GAAGrM,IAAI,CAACoM,KAAL,CAAWnK,QAAX,CAApB;AACAhC,MAAAA,OAAO,CAACkM,aAAa,GAAG1H,CAAC,CAAC6H,aAAlB,GAAkCD,aAAnC,CAAP;AACD,KANH;AAOE,IAAA,KAAK,EAAC,OAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO5H,CAAC,CAAC8H,WAAT,CATF,CADF,CAVJ,CAnBF,CATF,CADF,EAwDE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,EAAlB;AAAsB,IAAA,WAAW,EAAE,EAAnC;AAAuC,IAAA,YAAY,EAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,EADZ;AAEE,IAAA,eAAe,EAAE,IAFnB;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,mBAAmB,EAAE,IAJvB;AAKE,IAAA,UAAU,EAAE;AACVpB,MAAAA,yBAAyB,EAAE,IADjB;AAEVC,MAAAA,wBAAwB,EAAE,IAFhB;AAGVC,MAAAA,cAAc,EAAE,KAHN;AAIVC,MAAAA,eAAe,EAAE,IAJP;AAKVC,MAAAA,OAAO,EAAE;AALC,KALd;AAYE,IAAA,IAAI,EAAC,MAZP;AAaE,IAAA,KAAK,EAAC,UAbR;AAcE,IAAA,QAAQ,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B1P,MAAAA,EAAE,GAAG,KAAL;AACAkE,MAAAA,OAAO,CAACuL,QAAD,CAAP;AACArK,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAlBH;AAmBE,IAAA,cAAc,EAAGqL,QAAD,IAAY;AAC1B7I,MAAAA,cAAc,CAAC;AAAC,eAAM6I,QAAQ,CAACC,MAAT,CAAgB1I,GAAvB;AAA4B,kBAAUyI,QAAQ,CAACC,MAAT,CAAgBzI;AAAtD,OAAD,EAAgEwI,QAAQ,CAACC,MAAT,CAAgBhG,QAAhB,CAAyBiG,MAAzF,CAAd;AACD,KArBH;AAsBE,IAAA,iBAAiB,EAAGpR,CAAD,IAAK;AACtBqI,MAAAA,cAAc,CAAC;AAAC,eAAOrI,CAAC,CAACmR,MAAF,CAAS1I,GAAjB;AAAsB,kBAAUzI,CAAC,CAACmR,MAAF,CAASzI;AAAzC,OAAD,EAAmD1I,CAAC,CAACqR,GAAF,CAAMD,MAAzD,CAAd;AACD,KAxBH;AAyBE,IAAA,KAAK,EAAE1M,IAzBT;AA0BE,IAAA,IAAI,EAAC,gBA1BP;AA2BE,IAAA,WAAW,MA3Bb;AA4BE,IAAA,MAAM,EAAE,MA5BV;AA6BE,IAAA,KAAK,EAAE,MA7BT;AA8BE,IAAA,EAAE,EAAC,QA9BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxDF,EA0FE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,KAAK,EAAE;AACLiM,MAAAA,EAAE,EAAE;AADC,KAHT;AAME,IAAA,CAAC,EAAC,MANJ;AAOE,IAAA,CAAC,EAAC,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,GAAD,CAAK;AAAL;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,CAAC,EAAC,OAHJ;AAIE,IAAA,EAAE,EAAC,IAJL;AAKE,IAAA,SAAS,EAAC,QALZ;AAME,IAAA,SAAS,EAAC,MANZ;AAOE,IAAA,EAAE,EAAC,MAPL;AAQE,IAAA,CAAC,EAAC,OARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,KAAK,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,EAAE,EAAC,GAFL;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,UAAU,EAAC,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAVF,EAoBE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,KAFL;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,kBAAW,iBALb;AAME,IAAA,MAAM,EAAE,CANV;AAOE,IAAA,SAAS,EAAE,CAPb;AAQE,IAAA,UAAU,EAAE,CARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGnQ,IAAI,GACHH,KAAK,CAACsB,GAAN,CAAWwH,CAAD,IACR;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAI0H,aAAa,GAAGnM,IAAI,CAACoM,KAAL,CAAW,CAAX,EAAanK,QAAb,CAApB;AACA,UAAIoK,aAAa,GAAGrM,IAAI,CAACoM,KAAL,CAAWnK,QAAX,CAApB;AACAhC,MAAAA,OAAO,CAACkM,aAAa,GAAG1H,CAAhB,GAAoB4H,aAArB,CAAP;AACD,KALH;AAME,IAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG5H,CARH,CADF,CADG,GAcH,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAxBJ,CApBF,CATF,CA1FF,CA/BF,EAsLE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAc,IAAA,SAAS,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,QAAQ,EAAE,EAAEzE,IAAI,IAAI6B,QAAR,IAAoBN,WAAtB,CAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACb+I,MAAAA,oBAAoB;AACpB1I,MAAAA,OAAO,CAACgL,IAAI,CAACC,MAAL,EAAD,CAAP;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAWE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,QAAQ,EAAE,CAACzM,SAFb;AAGE,IAAA,OAAO,EAAE,MAAM;AACbmK,MAAAA,UAAU;AACX,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAoBE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,KADd;AAEE,IAAA,QAAQ,EAAE,EAAEvK,IAAI,IAAI6B,QAAR,IAAoBN,WAAtB,CAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACbkJ,MAAAA,UAAU;AACX,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aApBF,CAtLF,EAoNG7L,UAAU,KAAKJ,QAAf,GACC,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,aAAa,EAAC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCANF,EASE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAyB,IAAA,IAAI,EAAC,IAA9B;AAAmC,IAAA,OAAO,EAAEG,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CADD,GAeC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,OAAO,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAEC,UAAU,KAAK,CAD7B;AAEE,IAAA,EAAE,EAAE,CAFN;AAGE,IAAA,OAAO,EAAEF,QAHX;AAIE,IAAA,IAAI,EAAC,IAJP;AAKE,IAAA,OAAO,EAAE,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAnOJ,CADF,CADF,EAoPE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,OAAO,EAAE,CAA/B;AAAkC,IAAA,EAAE,EAAE,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,QAAf;AAAyB,IAAA,EAAE,EAAE,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG8B,aAAa,CAACnD,MAAd,GAAuB,CAAvB,GACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGmD,aAAa,CAACvD,GAAd,CAAkB,CAAC3B,CAAD,EAAI8B,CAAJ,KAAU;AAC3B,QAAI8N,GAAG,GAAG,EAAV;AACA,UAAMU,QAAQ,GAAGtQ,CAAC,CAACuQ,KAAF,CAAQ,uBAAR,CAAjB;AACA,QAAIC,GAAJ;;AACA,QAAIF,QAAQ,CAACvO,MAAT,KAAoB,EAAxB,EAA4B;AAC1BuO,MAAAA,QAAQ,CAAC3O,GAAT,CACE,CAAC8O,CAAD,EAAI3O,CAAJ,KACEA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,KAAwB8N,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYa,CAA1C,CAFJ;;AAIAD,MAAAA,GAAG,GAAG,MACJ,0CACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAE9P,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,QAAQ,CAAC,CAAD,CALX,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAjB,CARF,EASE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAElP,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,MAAMA,QAAQ,CAAC,EAAD,CALjB,CATF,CADF,CADF;AAqBD;;AAED,QACEA,QAAQ,CAACvO,MAAT,KAAoB,CAApB,IACAuO,QAAQ,CAACvO,MAAT,KAAoB,CAFtB,EAGE;AACAuO,MAAAA,QAAQ,CAAC3O,GAAT,CACE,CAAC8O,CAAD,EAAI3O,CAAJ,KAAUA,CAAC,KAAK,CAAN,KAAY8N,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYa,CAA9B,CADZ;;AAGAD,MAAAA,GAAG,GAAG,MACJ,0CACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAE,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGF,QAAQ,CAAC,CAAD,CALX,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAjB,CARF,CADF,CADF;AAcD;;AAED,QAAIU,QAAQ,CAACvO,MAAT,KAAoB,EAAxB,EAA4B;AAC1BuO,MAAAA,QAAQ,CAAC3O,GAAT,CACE,CAAC8O,CAAD,EAAI3O,CAAJ,KACEA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,KAAwB8N,GAAG,GAAGA,GAAG,GAAG,GAAN,GAAYa,CAA1C,CAFJ;;AAIAD,MAAAA,GAAG,GAAG,MACJ,0CACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAE9P,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,QAAQ,CAAC,CAAD,CALX,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBV,GAAjB,CARF,EASE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,MADL;AAEE,QAAA,UAAU,EAAE,MAFd;AAGE,QAAA,KAAK,EAAElP,SAAS,CAAC4P,QAAQ,CAAC,EAAD,CAAT,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,MAAMA,QAAQ,CAAC,EAAD,CALjB,CATF,CADF,CADF;AAqBD;;AAED,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAExO,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,EAAE,EAAEvC,mBADN;AAEE,MAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALH,CADF;AASD,GA5FA,CADH,CADD,GAiGC,yCAlGJ,CADF,CApPF,CADF,CADF,CADF,EAiWE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,eAAe,EAAC,gBAAtB;AAAuC,IAAA,GAAG,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,QAAQ,EAAE,CAAhC;AAAmC,IAAA,MAAM,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,UAAU,EAAE,QAAzB;AAAmC,IAAA,OAAO,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,EAEE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,KAAd;AAAoB,IAAA,UAAU,EAAE,EAAhC;AAAoC,IAAA,WAAW,EAAE,EAAjD;AAAqD,IAAA,UAAU,EAAE,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,WAAW,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAqCwH,IAAI,CAACR,QAA1C,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA4CQ,IAAI,CAACd,WAAjD,CADF,CAJF,EAOE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAPF,EAUE,oBAAC,IAAD;AAAM,IAAA,WAAW,EAAE,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,EADZ;AAEE,IAAA,eAAe,EAAE,IAFnB;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,mBAAmB,EAAE,IAJvB;AAKE,IAAA,UAAU,EAAE;AACV4J,MAAAA,yBAAyB,EAAE,IADjB;AAEVC,MAAAA,wBAAwB,EAAE,IAFhB;AAGVC,MAAAA,cAAc,EAAE,KAHN;AAIVC,MAAAA,eAAe,EAAE,IAJP;AAKVC,MAAAA,OAAO,EAAE;AALC,KALd;AAYE,IAAA,IAAI,EAAC,MAZP;AAaE,IAAA,KAAK,EAAC,UAbR;AAcE,IAAA,KAAK,EAAGlJ,IAAI,CAACmG,SAAL,IAAkB,IAAlB,GAAyBsE,IAAI,CAACzK,IAAI,CAACmG,SAAN,CAA7B,GAAgDnG,IAAI,CAACmG,SAd/D,CAeE;AAfF;AAgBE,IAAA,IAAI,EAAC,gBAhBP;AAiBE,IAAA,WAAW,MAjBb;AAkBE,IAAA,MAAM,EAAE,MAlBV;AAmBE,IAAA,KAAK,EAAE,MAnBT;AAoBE,IAAA,QAAQ,EAAE,IApBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF,EAoCE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,EAAE,EAAC,MAFL;AAGE,IAAA,KAAK,EAAE;AACLyD,MAAAA,EAAE,EAAE;AADC,KAHT;AAME,IAAA,CAAC,EAAC,MANJ;AAOE,IAAA,CAAC,EAAC,MAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,GAAD,CAAK;AAAL;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,CAAC,EAAC,OAHJ;AAIE,IAAA,EAAE,EAAC,IAJL;AAKE,IAAA,SAAS,EAAC,QALZ;AAME,IAAA,SAAS,EAAC,MANZ;AAOE,IAAA,EAAE,EAAC,MAPL;AAQE,IAAA,CAAC,EAAC,OARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAoB,IAAA,EAAE,EAAC,GAAvB;AAA2B,IAAA,KAAK,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAC,KADX;AAEE,IAAA,EAAE,EAAC,GAFL;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,UAAU,EAAC,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAVF,EAoBE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,KAFL;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,kBAAW,iBALb;AAME,IAAA,MAAM,EAAE,CANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGvL,SAAS,CAACrD,MAAV,GAAmB,CAAnB,GACCqD,SAAS,CAACzD,GAAV,CAAewH,CAAD,IACZ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAM;AACbnC,MAAAA,OAAO,CAACmC,CAAD,CAAP;AACAjC,MAAAA,QAAQ,CAACiC,CAAC,CAAC+D,SAAH,CAAR;AACD,KAJH;AAKE,IAAA,KAAK,EAAC,OALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG/D,CAAC,CAAC5C,QAPL,CADF,CADF,CADD,GAeC,0CACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAvBJ,CApBF,CATF,CApCF,CAFF,EAkGE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,KADd;AAEE,IAAA,QAAQ,EAAE,CAACQ,IAAI,CAACR,QAFlB;AAGE,IAAA,OAAO,EAAE,MAAM;AACbS,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAlGF,CADF,CADF,CADF,CADF,CAjWF,EAwdE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,eAAe,EAAC,gBAAtB;AAAuC,IAAA,GAAG,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAsB,IAAA,QAAQ,EAAE,CAAhC;AAAmC,IAAA,MAAM,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAa,IAAA,UAAU,EAAE,QAAzB;AAAmC,IAAA,OAAO,EAAE,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAFF,EAKE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,KAAd;AAAoB,IAAA,UAAU,EAAE,EAAhC;AAAoC,IAAA,WAAW,EAAE,EAAjD;AAAqD,IAAA,UAAU,EAAE,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAE,EAAlB;AAAsB,IAAA,WAAW,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGC,KAAK,CAACpF,MAAN,GAAe,CAAf,GACC,oBAAC,GAAD;AACE,IAAA,GAAG,EAAE0F,IADP;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,MAAM,EAAC,WAJT;AAKE,IAAA,QAAQ,EAAC,UALX;AAME,IAAA,SAAS,EAAE,GANb;AAOE,IAAA,SAAS,EAAC,MAPZ;AAQE,IAAA,cAAc,EAAC,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,WAAW,EAAE,CAHf;AAIE,IAAA,YAAY,EAAE,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,KAAK,CAACxF,GAAN,CAAU,CAACwH,CAAD,EAAIsI,KAAJ,KACT,oBAAC,MAAD;AACE,IAAA,eAAe,EAAC,UADlB;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,WAAW,EAAGzR,CAAD,IAAO;AAClB,UAAIqH,OAAJ,EAAa;AACZrH,QAAAA,CAAC,CAAC0R,YAAF,CAAeC,OAAf,CAAuB,YAAvB,EAAqCF,KAArC;AACA;AACF,KATH;AAUE,IAAA,UAAU,EAAGzR,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAAC4R,cAAF;AACA,KAZH;AAaE,IAAA,MAAM,EAAG5R,CAAD,IAAO;AACb,UAAIqH,OAAJ,EAAa;AACX,cAAMW,SAAS,GAAG6J,QAAQ,CAAC7R,CAAC,CAAC0R,YAAF,CAAeI,OAAf,CAAuB,YAAvB,CAAD,EAAuC,EAAvC,CAA1B;AACA/O,QAAAA,OAAO,CAACC,GAAR,CAAYgF,SAAZ;AACA,cAAMC,UAAU,GAAGwJ,KAAnB;;AACA,YAAIzJ,SAAS,IAAIC,UAAjB,EAA6B;AAC3BF,UAAAA,aAAa,CAACC,SAAD,EAAYC,UAAZ,CAAb;AACD;AACF;AACF,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBkB,CAAC,CAAC5C,QAAvB,CAxBF,CADD,CANH,CAVF,CADD,GAgDC,oBAAC,GAAD;AACE,IAAA,GAAG,EAAEkB,IADP;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,MAAM,EAAC,WAJT;AAKE,IAAA,QAAQ,EAAC,UALX;AAME,IAAA,cAAc,EAAC,QANjB;AAOE,IAAA,UAAU,EAAC,QAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,CAlDJ,CAFF,EAoEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,SAAS,EAAE,GAHb;AAIE,IAAA,SAAS,EAAC,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CANF,EASGrC,SAAS,CAACrD,MAAV,GAAmB,CAAnB,GACCqD,SAAS,CAACzD,GAAV,CAAewH,CAAD,IAAO;AACnB,WAAO,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,CAAhB;AAAmB,MAAA,OAAO,EAAE9B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,CADD,GAKC,0CACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAdJ,CApEF,CALF,EA6FE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAc,IAAA,SAAS,EAAC,KAAxB;AAA8B,IAAA,SAAS,EAAE,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,QADd;AAEE,IAAA,OAAO,EAAE,MAAM;AAACC,MAAAA,UAAU,CAAC,IAAD,CAAV;AAAiB,KAFnC;AAGE,IAAA,QAAQ,EAAEH,KAAK,CAACpF,MAAN,KAAiB,CAH7B;AAIE,IAAA,SAAS,EAAEyC,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EASE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEmL,UADX;AAEE,IAAA,QAAQ,EAAE,CAACtI,OAFb;AAGE,IAAA,SAAS,EAAE7C,UAHb;AAIE,IAAA,WAAW,EAAC,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,EAiBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AAAC4C,MAAAA,QAAQ,CAAC,EAAD,CAAR;AAAcE,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB,KADlD;AAEE,IAAA,QAAQ,EAAEH,KAAK,CAACpF,MAAN,KAAiB,CAF7B;AAGE,IAAA,SAAS,EAAEyC,UAHb;AAIE,IAAA,WAAW,EAAC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBF,EAyBE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,QAAQ,EAAE,CAACoB,YAFb;AAGE,IAAA,OAAO,EAAE6E,eAHX;AAIE,IAAA,QAAQ,EAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAzBF,CA7FF,EA+HE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,KAAZ;AAAkB,IAAA,OAAO,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,OAAO,EAAE2E,UAFX;AAGE,IAAA,QAAQ,EAAEjI,KAAK,CAACpF,MAHlB;AAIE,IAAA,SAAS,EAAEyC,UAJb;AAKE,IAAA,WAAW,EAAC,QALd;AAME,IAAA,OAAO,EAAE,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA/HF,CADF,CADF,CADF,CADF,CAxdF,CANF,CADF,CA9OJ,CAlBF;AAy3BD,CAnzDD;;AAqzDA,MAAMuN,UAAU,GAAG5S,KAAK,CAAC6S,UAAN,CAAiB,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,EAAwBC,GAAxB,KAClC,oBAAC,GAAD;AAAK,EAAA,CAAC,EAAC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAK,EAAA,GAAG,EAAEA;AAAV,GAAmBD,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACGD,QADH,CADF,CADiB,CAAnB;AAQA,eAAehP,kBAAf","sourcesContent":["import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Input,\n  List,\n  ListIcon,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalOverlay,\n  Select,\n  Spinner,\n  Stack,\n  Tag,\n  Text,\n  Tooltip,\n  useDisclosure,\n  useToast,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  FormControl,\n  Textarea,\n  VStack\n} from \"@chakra-ui/react\";\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { FaExclamationCircle, FaFileAlt } from \"react-icons/fa\";\nimport { BiDownload } from \"react-icons/bi\";\nimport { CheckCircleIcon } from \"@chakra-ui/icons\";\nimport { useParams } from \"react-router-dom\";\nimport { useDrop } from 'react-dnd';\nimport { validation_server, backend } from \"../../server_urls\";\n\nimport isJson from \"../../utils/checkjson\";\nimport e from \"cors\";\nimport semantics from \"../../utils/syntax.json\";\nimport Behaviour from \"./Behaviour\";\nimport { Link } from \"react-router-dom\";\n\nlet errors = [];\nlet rules = [];\nlet valid_rule = [];\nlet grammarDataArray = [];\nlet flag = false;\nlet fl = false;\n\nconst tipcolors = {\n  number: \"orange\",\n  object: \"green\",\n  boolean: \"red\",\n  string: \"yellow\",\n  array: \"blue\",\n};\n\nconst jsonValidator = (grammar, validating) => {\n  const keys = Object.keys(grammar);\n  const keys22 = Object.keys(validating);\n\n  const grammarArray = Object.keys(grammar).filter(\n    (value) => !Object.keys(validating).includes(value)\n  );\n\n  const extraEntries = Object.keys(validating).filter(\n    (value) => !Object.keys(grammar).includes(value)\n  );\n\n  extraEntries.map((en) => {\n    let app = 1;\n\n    for (let i = 0; i < keys.length; i++) {\n      if (keys[i] === en || grammar[keys[i]].root === en || grammar[keys[i]].proot === en) \n        app = 0;\n    }\n    if (app) {\n      errors.push(`\"${en}\" is invalid key in the JSON`);\n    }\n  });\n\n  grammarArray.map((en) => {\n    let app = 1;\n    for (let i = 0; i < keys22.length; i++) {\n      if (en === keys22[i] || grammar[en].root === keys22[i] || grammar[en].proot === keys22[i]) {\n        app = 0;\n      }\n    }\n    if (app === 1) {\n      errors.push(\n        `\"${en}\" is a mandatory field! Please add the field with ${grammar[en].typeof} type`\n      );\n    }\n  })\n\n  for (let i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (grammar[key].hasOwnProperty('proot')) {\n      let a = validating[grammar[key].proot];\n      for (let i = 0; i < a.length; i++) {\n        let c = a[i];\n        if (c.hasOwnProperty(grammar[key].root)) {\n          if (typeof c[grammar[key].root][key] === grammar[key].typeof) {\n          }\n          else {\n            if (typeof c[grammar[key].root][key] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof c[grammar[key].root][key]}'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n    else if (grammar[key].hasOwnProperty('repeat') && grammar[key].repeat === \"allow\") {\n      let a = grammar[key].root;\n      var obje = Object.keys(validating);\n      let found = obje.indexOf(a);\n\n      if (typeof validating[a] === \"object\") {\n        for (let i = 0; i < validating[a].length; i++) {\n          if (typeof validating[a][i][key] === grammar[key].typeof || (typeof validating[a][i][key] === \"object\" && grammar[key].typeof === \"array\")) {\n          }\n          else {\n            if (typeof validating[a][i][key] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof validating[a][i][\n                key\n                ]}'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n    else {\n      if (grammar[key].root === 'null' || grammar[key].root === 'undefined' || (!grammar[key].hasOwnProperty('root'))) {\n        if (typeof validating[key] === \"undefined\") {\n          continue;\n        }\n\n        // Handling nested objects recursively\n        if (\n          typeof validating[key] === \"object\" &&\n          grammar[key].typeof === \"object\"\n        ) {\n          continue;\n        }\n\n        if (typeof validating[key] !== grammar[key].typeof) {\n          errors.push(\n            ` \"${key}\" has an invalid type of '${typeof validating[\n            key\n            ]}'. Expected type of ${grammar[key].typeof}`\n          );\n        }\n        else {\n          // alert(\"sucess\");\n        }\n\n        if (\n          typeof validating[key] === \"string\" &&\n          typeof validating[key] === grammar[key].typeof &&\n          grammar[key].req === \"mandatory\" &&\n          validating[key].length === 0\n        ) {\n          errors.push(`\"${key}\" is mandatory, empty string is not allowed`);\n        }\n      }\n      else {\n        let a = grammar[key].root;\n        if (false) {\n          for (let i = 0; i < validating[a].length; i++) {\n            if (typeof validating[a][i].key === grammar[key].typeof) {\n              alert(\"Sucess\");\n            }\n            else {\n              //alert(\"Failure\");\n              //errors.push(\"kindly see the json syntax\");\n              errors.push(`\"${key}\" has invalid type, expected \"${grammar[key].typeof}\"`);\n            }\n          }\n        }\n        else {\n          var b = validating[a];\n          //alert(a);\n          let c = Object.keys(b);\n          let found = c.indexOf(key)\n          if (typeof validating[a][c[found]] === grammar[key].typeof || (typeof validating[a][c[found]] === \"object\" && grammar[key].typeof === \"array\")) {\n            //alert(\"Sucess!!!!!!\");\n          }\n          else {\n            if (typeof validating[a][c[found]] === \"undefined\") {\n              errors.push(\n                `\"${key}\" is a mandatory field! Please add the field with ${grammar[key].typeof} type`\n              );\n\n            }\n            else {\n              errors.push(\n                ` \"${key}\" has an invalid type of '${typeof validating[a][c[found]]\n                }'. Expected type of ${grammar[key].typeof}`\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (errors.length > 0) {\n    console.log(errors);\n    return true;\n  }\n  return false;\n};\n\nconst ProjectPageContent = ({\n  stepslen,\n  nextStep,\n  prevStep,\n  reset,\n  activeStep,\n  scene,\n  action,\n  asset,\n  projectname,\n  timeline,\n  custom,\n}) => {\n  const toast = useToast();\n  const { projectid } = useParams();\n  const jwttoken = localStorage.getItem(\"jwtToken\");\n\n  let [val, setValue] = React.useState(\"\");\n  const [files, setfiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [data, setdata] = useState(\"\");\n  const [grammarid, setGrammarid] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n  const [grammarbundle, setGrammarbundle] = useState({});\n  const [displayErrors, setDisplayErrors] = useState([]);\n  const [rule_list, setRuleList] = useState([]);\n  const [names, setNames] = useState([]);\n  const [arr, setArr] = useState([]);\n  const [idx, setIdx] = useState(0);\n\n  const [downloadable, setDownloadable] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [description, setDescription] = useState(\"\");\n  const [perdata, setPerdata] = useState(\"\");\n  const [seed, setSeed] = useState(0);\n  const [rulename, setRulename] = useState(\"\");\n  const [textPointer, setTextPointer] = useState({\"row\": 0, \"column\": 0});\n\n  const [position, setPosition] = useState(0);\n  const [savebutton, setSavebutton] = useState(false);\n  const [rule, setRule] = useState({});\n  const [logic, setLogic] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [reorder, setReorder] = useState(false);\n\n\tconst [{ isOver, canDrop }, drop] = useDrop(() => ({\n\t\taccept: \"behaviour\",\n\t\tdrop: (item) => setBoard((board) => !board.includes(item.obj) ? [...board, item.obj] : board),\n\t\tcollect: (monitor) => ({\n\t\t\tisOver: monitor.isOver(),\n\t\t\tcanDrop: monitor.canDrop(),\n\t\t})\n\t}));\n\n\tconst handleReorder = (dragIndex, hoverIndex) => {\n\t\tconst dragged = board[dragIndex];\n\t\tconst newBoard = [...board];\n\t\tnewBoard.splice(dragIndex, 1);\n\t\tnewBoard.splice(hoverIndex, 0, dragged);\n\t\tsetBoard(newBoard);\n\t}\n\n  const convertPointer = (pointer, lines) => {\n    let pos = 0;\n    for(let i=0; i<=pointer.row - 1; i++) {\n      pos += lines[i].length;\n      if(lines[i].length === 0)\n        pos+=1;\n    }\n    pos += pointer.column;\n    if(pointer.column === 0)\n      pos+=1;\n    setPosition(pos);\n  }\n\n  const getFiles = async () => {\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.get(\n        // `http://localhost:5002/api/json/timeline`,\n        backend + \"/api/json/timeline\",\n        requestOptions\n      );\n\n      const requestOption = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res2 = await Axios.get(\n        // `http://localhost:5002/api/project/${projectid}/grammarName`,\n        backend + `/api/project/${projectid}/grammarName`,\n        requestOption\n      );\n      setfiles(res.data);\n\n      res.data.map((p) => {\n        if (p.name == res2.data.grammarName) {\n          if (grammarDataArray.length != 5) {\n            grammarDataArray.push(p.scene);\n            grammarDataArray.push(p.asset);\n            grammarDataArray.push(p.action);\n            grammarDataArray.push(p.custom);\n            grammarDataArray.push(p.timeline);\n          }\n        }\n      })\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",  //Goes wrong\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n  };\n\n  const getRules = async () => {\n    const res_rules = await Axios.post(\n      // \"http://localhost:5002/api/custom/get-custom-rules\",\n      backend + \"/api/custom/get-custom-rules\",\n      {\n        headers: {\n          \"Content-Type\": \"application/json\", \n          token: jwttoken \n        },\n        data: {\n          project_id: projectid\n        }\n      }\n    );\n    setRuleList(res_rules.data);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getFiles();\n    getRules();\n    if (activeStep == 0) {\n      setdata(scene);\n      getFiles();\n      fl = false;\n      if (isJson(scene)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 1) {\n      const myobjs = JSON.parse(asset);\n      let all_names = []\n      let tarr = myobjs.articles\n      myobjs.articles.map((c,i)=>{\n        all_names.push(c._objectname);\n      })\n      setNames(all_names);\n      setArr(tarr);\n      setdata(JSON.stringify(tarr[idx], null, '\\t'));\n      // setdata(asset);\n      fl = false;\n      if (isJson(asset)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 2) {\n      let myobjs = JSON.parse(action);\n      let all_names = []\n      let tarr = myobjs.ObjAction\n      myobjs.ObjAction.map((c,i)=>{\n        all_names.push(c.actresid);\n      })\n      setNames(all_names);\n      setArr(tarr);\n      setdata(JSON.stringify(tarr[idx], null, '\\t'));\n      // setdata(action)\n      fl = false;\n      if (isJson(action)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 3) {\n      // setdata(custom);\n      fl = false\n      if (isJson(custom)) {\n        setDownloadable(true);\n      }\n    }\n    if (activeStep == 4) {\n      setdata(timeline);\n      fl = false;\n      if (isJson(timeline)) {\n        setDownloadable(true);\n      }\n    }\n    setLoading(false);\n  }, []);\n  \n  const downloadTxtFile = () => {\n    if (data === \"\" || !isJson(data)) {\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      setDownloadable(false);\n      return;\n    }\n    let fileName = \"\";\n    if (activeStep === 0) fileName = \"scene\";\n    if (activeStep === 1) fileName = \"asset\";\n    if (activeStep === 2) fileName = \"action\";\n    if (activeStep === 3) fileName = \"custom\";\n    if (activeStep === 4) fileName = \"timeline\";\n    const json = data;\n    const blob = new Blob([json], { type: \"application/json\" });\n    const href = URL.createObjectURL(blob);\n\n    const downlink = document.createElement(\"a\");\n    downlink.href = href;\n    downlink.download = projectname + \"-\" + fileName + \".json\";\n    document.body.appendChild(downlink);\n    downlink.click();\n\n    // clean up \"a\" element & remove ObjectURL\n    document.body.removeChild(downlink);\n    URL.revokeObjectURL(href);\n  };\n\n  let handleInputChange = (e) => {\n    let inputValue = e.target.value;\n    setValue(inputValue);\n  };\n\n  let asset_valid = (asset, asset_list, flag) => {\n    // if flag is zero, dont print any errors\n    let valid_obj = false;\n\n    asset_list.map(((d,j)=>{\n      if(asset === d)\n        valid_obj = true;\n      // if(c.targetObj == d)\n      //   valid_target = true;\n    }))\n\n    if(valid_obj === false) {\n      setValidated(false);\n      setDownloadable(false);\n      if (flag) {\n        toast({\n          title:\n            \"Object \"+ asset +\" is not listed in Asset JSON. Only assets present in Asset JSON are valid.\"+asset+\"  \"+asset_list,\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\",\n        });\n      }\n      return -1;\n    }\n    return 1;\n  }\n\n  let assetValidator = (a, all_object_ids) => {\n    a.map((c,i)=>{\n      let ret1 = asset_valid(c.sourceObj, all_object_ids, 1);\n      let ret2;\n      if (c.targetObj[c.targetObj.length - 1] === '*') {\n        ret2 = 1;\n      } else\n        ret2 = asset_valid(c.targetObj, all_object_ids, 1);\n\n      if(ret1 === -1) {\n        return false;\n      }\n\n      if (c.repeatactionfor !== null && c.repeatactionfor.length !== 0 && c.repeatactionfor[0] !== \" \") {\n        let repeat_assets = [];\n        let curr_word = \"\";\n        Array.from(c.repeatactionfor).map((char, key)=>{\n          if (char === ',' || char === ' ') {\n            if(curr_word !== \"\" && curr_word !== \" \" && curr_word.length !== 0) {\n              repeat_assets.push(curr_word);\n              curr_word = \"\";\n            }\n          } else\n            curr_word = curr_word + char;\n        })\n        if(curr_word != \"\" || curr_word != \" \" || curr_word.length != 0)\n          repeat_assets.push(curr_word);\n        \n        repeat_assets.map((word, key)=>{\n          let ret = asset_valid(word, all_object_ids, 1);\n          if ( ret === -1) {\n            return false;\n          }\n        })\n\n        if (ret2 === -1 && c.targetObj[c.targetObj.length - 1] !== \"*\") {\n          toast({\n            title:\n              \"Please update the Target Object according to the reccomendations in the document.\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return false;\n        } else {\n          if(asset_valid(c.targetObj, repeat_assets, 0) === 1) {\n            toast({\n              title:\n                \"Target object should not be a part of repeatactionfor.\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n            return false;\n          }\n        }\n      }\n    })\n    return true;\n  }\n\n  let onValidate2 = async () => {\n    toast({\n      title: \"Validation successful\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\",\n    });\n\n    valid_rule.push({\n      rulename: rulename,\n      data_name: data,\n      description: description\n    });\n\n    setDownloadable(true);\n    setSavebutton(true);\n  };\n\n  const onValidate = async () => {\n    let tdata = data;\n    if (activeStep == 1)\n      tdata = JSON.stringify({articles: arr}, null, 4)\n    else if (activeStep == 2)\n      tdata = JSON.stringify({ObjAction: arr}, null, 4)\n\n    if (!isJson(tdata)) {\n      setValidated(false);\n      setDownloadable(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n      return;\n    }\n    setDisplayErrors([]);\n    errors = [];\n    var myjson = JSON.parse(tdata);\n    \n    try {\n      var mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);\n      else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);\n      else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);\n      else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);\n      else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n      // console.log(typeof errors);\n\n    } catch (e) {\n      console.log(e);\n    }\n\n    try {\n      if (activeStep == 2) {\n        try {\n          {\n            let all_object_ids = [];\n            const myobjs = JSON.parse(asset);\n\n            myobjs.articles.map((c,i)=>{\n              all_object_ids.push(c._sid);\n            })\n\n            var a = myjson.ObjAction;\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i].actresid;\n              flag = true;\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title:\n              \"There are errors in the specification. Please review the error message\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      } else if (activeStep == 1) {\n        try {\n          {\n            var a = myjson.articles;\n            for (let i = 0; i < a.length; i++) {\n              var c = a[i]._objectname;\n              flag = true;\n              if (c) {\n                rules.push(c);\n              }\n            }\n          }\n        } catch (e) {\n          console.log(e);\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title:\n              \"There are errors in the specification. Please review the error message\",\n            status: \"warning\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      } \n    } catch {\n      console.log(e);\n    }\n    if (grammarDataArray.length === 0) {\n      await getFiles();\n    }\n\n\n    try {\n      let mygrm = \"\";\n      if (activeStep == 0) mygrm = JSON.parse(grammarDataArray[0]);\n      else if (activeStep == 1) mygrm = JSON.parse(grammarDataArray[1]);\n      else if (activeStep == 2) mygrm = JSON.parse(grammarDataArray[2]);\n      else if (activeStep == 3) mygrm = JSON.parse(grammarDataArray[3]);\n      else if (activeStep == 4) mygrm = JSON.parse(grammarDataArray[4]);\n\n\n      if (!jsonValidator(mygrm, myjson)) {\n        if(activeStep === 2)\n        {\n          let all_object_ids = [];\n          const myobjs = JSON.parse(asset);\n\n          myobjs.articles.map((c,i)=>{\n            all_object_ids.push(c._sid);\n          })\n\n          const ret_asset = assetValidator(myjson.ObjAction, all_object_ids);\n          if(!ret_asset)\n          {\n            console.log(errors);\n            toast({\n              title: \"There are errors in the specification. Please review the error message\",\n              status: \"warning\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n            return;\n          }\n          else{\n            setValidated(true);\n            setDownloadable(true);\n            toast({\n              title: \"Validation Successful\",\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n              position: \"top-right\",\n            });\n          }\n        }\n        else{\n          setValidated(true);\n          setDownloadable(true);\n          toast({\n            title: \"Validation Successful\",\n            status: \"success\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n        }\n      } else {\n        console.log(errors);\n        toast({\n          title: \"There are errors in the specification. Please review the error message\",\n          status: \"warning\",\n          duration: 5000,\n          isClosable: true,\n          position: \"top-right\",\n        });\n      }\n      setDisplayErrors(errors);\n    }\n    catch (e) {\n      console.log(e);\n      toast({\n        title: \"There are errors in the specification. Please review the error message\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    }\n  };\n\n  const showValidateHandler = async () => {\n    let code = data;\n    let jsonData = JSON.stringify({\n      types: [\n        {\n          type: \"if\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"else\",\n          prev: [\"if\", \"else-if\"],\n          order: [[\"scope\"]],\n        },\n\n        {\n          type: \"else-if\",\n          prev: [\"if\", \"else-if\"],\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"switch\",\n          order: [[\"condition\"], [\"scope\", [\"Case\"], [\"Default\"]]],\n        },\n\n        {\n          type: \"switch-case\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"switch-case-default\",\n          order: [[\"scope\"]],\n        },\n\n        {\n          type: \"for\",\n          order: [\n            [\"condition\", [\"conditionSeparator\", \"conditionSeparator\"]],\n            [\"scope\"],\n          ],\n        },\n\n        {\n          type: \"while\",\n          order: [[\"condition\"], [\"scope\"]],\n        },\n\n        {\n          type: \"do\",\n          order: [[\"scope\"]],\n          next: [\"do-while\"],\n        },\n\n        {\n          type: \"do-while\",\n          order: [[\"condition\"]],\n          prev: [\"do\"],\n        },\n      ],\n      constructs: [\n        {\n          name: \"if\",\n          type: \"if\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"else-if\",\n          type: \"else-if\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          pre: [\"if\", \"else-if\"],\n        },\n\n        {\n          name: \"else\",\n          type: \"else\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          pre: [\"if\", \"else-if\"],\n        },\n\n        {\n          name: \"switch\",\n          type: \"switch\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          body: \"Case\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          \"end-body\": \"default\",\n        },\n\n        {\n          name: \"Case\",\n          type: \"switch-case\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          parent: \"switch\",\n        },\n\n        {\n          name: \"Default\",\n          type: \"switch-case-default\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          parent: \"switch\",\n        },\n\n        {\n          name: \"for\",\n          type: \"for\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          conditionSeparator: \"/\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"while\",\n          type: \"while\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n        },\n\n        {\n          name: \"do\",\n          type: \"do\",\n          scopeStart: \"(\",\n          scopeEnd: \")\",\n          next: \"do-while\",\n        },\n\n        {\n          name: \"do-while\",\n          type: \"do-while\",\n          conditionStart: \"(\",\n          conditionEnd: \")\",\n        },\n      ],\n      specialSymbols: [\"#\", \":\", \"!\", \"/\", \"(\", \")\"],\n    });\n\n    // fetch(`http://localhost:5001/api/upload`, {\n    fetch(validation_server + '/api/upload', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({jsonData}),\n    }).then((response) => {\n      response.json().then((val) => {\n        console.log(\"Uploaded\");\n        console.log(val);\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n\n    // fetch(`http://localhost:5001/api/process`, {\n    fetch(validation_server + '/api/process', {\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      method: \"POST\",\n      body: JSON.stringify({code}),\n    }).then((response) => {\n      response.json().then((val) => {\n        if (val.valid) {\n          onValidate2();\n        } else {\n          setValidated(false);\n          setDownloadable(false);\n          toast({\n            title: \"Error! Please follow conditional syntax.\",\n            status: \"error\",\n            duration: 5000,\n            isClosable: true,\n            position: \"top-right\",\n          });\n          return;\n        }\n      })\n      .catch((err)=>{\n        console.log(err);\n      });\n    })\n    .catch((err)=>{\n      console.log(err);\n    });\n  };\n\n  const handleValidateButton = () => {\n    showValidateHandler(true);\n    setValidated(true);\n  };\n\n  const saveButton = async () => {\n    try{\n      const res = await Axios.post(\n        // \"http://localhost:5002/api/custom/upload-custom-rule\", {\n        backend + \"/api/custom/upload-custom-rule\", {\n          headers: {\n            \"Content-Type\": \"application/json\", \n            token: jwttoken \n          },\n          data: {\n            project_id: projectid,\n            rulename: rulename,\n            data_name: btoa(data),\n            description: description\n          }\n        }\n      );\n      toast({\n        title: \"Behaviour Added\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n\n      setRuleList([...rule_list, {\n        project_id: projectid,\n        rulename: rulename,\n        data_name: btoa(data),\n        description: description\n      }]);\n\n      setdata('');\n      setRulename('');\n      setDescription('');\n      setValidated(false);\n    } catch(err){\n      console.log(err);\n    }\n  }\n\n  const flushWrite = () => {\n    console.log('flushed everything!');\n    setValidated(false);\n    setdata('');\n    setRulename('');\n    setDescription('');\n  }\n\n  const onNextStep = async () => {\n    let tdata = data;\n    if (activeStep == 1)\n      tdata = JSON.stringify({articles: arr}, null, 4)\n    else if (activeStep == 2)\n      tdata = JSON.stringify({ObjAction: arr}, null, 4)\n\n    if (!isJson(data) && activeStep !== 3) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0)\n      url = url + `/api/project/${projectid}/scene`;\n    else if (activeStep === 1)\n      url = url + `/api/project/${projectid}/asset`;\n    else if (activeStep === 2)\n      url = url + `/api/project/${projectid}/action`;\n    else if (activeStep === 3)\n      url = url + `/api/project/${projectid}/custom`;\n    else if (activeStep === 4)\n      url = url + `/api/project/${projectid}/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.patch(url, { data:tdata }, requestOptions);\n\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Something wents wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n    setSubmitting(false);\n    nextStep();\n  };\n\n  const handel_name = (e) => {\n    setRulename(e.target.value);\n  };\n\n  const handel_description = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const onFinish = async () => {\n    if (!isJson(data)) {\n      setValidated(false);\n      toast({\n        title: \"JSON Syntax is not correct\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n    setSubmitting(true);\n    let url = backend;\n    if (activeStep === 0)\n      url = url + `/api/project/${projectid}/scene`;\n    else if (activeStep === 1)\n      url = url + `/api/project/${projectid}/asset`;\n    else if (activeStep === 2)\n      url = url + `/api/project/${projectid}/action`;\n    else if (activeStep === 3)\n      url = url + `/api/project/${projectid}/custom`;\n    else if (activeStep === 4)\n      url = url + `/api/project/${projectid}/timeline`;\n    try {\n      const requestOptions = {\n        headers: { \"Content-Type\": \"application/json\", token: jwttoken },\n      };\n      const res = await Axios.patch(url, { data }, requestOptions);\n\n      toast({\n        title: res.data.message,\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-right\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Something went wrong\",\n        status: \"error\",\n        duration: 10000,\n        isClosable: true,\n        position: \"top\",\n      });\n      console.log(error);\n    }\n    setSubmitting(false);\n    onOpen();\n  };\n\n  const saveCustom = () => {\n    let str = '';\n    board.map((p) => {\n      if (str.length > 0) {\n        str +=\n        `,{\"rulename\":\"${p.rulename\n        }\", \"description\":\"${p.description\n        }\",\"logic\": \"${btoa(\n          p.data_name\n        )}\"}\\n`\n      } else {\n        str +=\n        `{\"rulename\":\"${p.rulename\n        }\", \"description\":\"${p.description\n        }\",\"logic\": \"${btoa(\n          p.data_name\n        )}\"}\\n`\n      }\n    });\n\n    if (!fl) {\n      for (let i = 0; i < rules.length; i++) {\n        rules[i] = `\"` + rules[i] + `\"`;\n      }\n      fl = true;\n    }\n    setdata(\n      `{\"objects_used\":[${rules}],\"rules\":[${str}]}`\n    );\n    toast({\n      title:\n        \"JSON is saved, click Next to continue\",\n      status: \"success\",\n      duration: 5000,\n      isClosable: true,\n      position: \"top-right\",\n    });\n    setReorder(false);\n    setDownloadable(true);\n    setBoard([]);\n    console.log(`{\"objects_used\":[${rules}],\"rules\":[${str}]}`);\n  }\n\n  return loading ? (\n    <>\n      <Flex\n        width={\"80vw\"}\n        height={\"90vh\"}\n        justifyContent=\"center\"\n        alignItems={\"center\"}\n      >\n        <Spinner\n          thickness=\"4px\"\n          speed=\"0.65s\"\n          emptyColor=\"gray.200\"\n          color=\"blue.500\"\n          size=\"xl\"\n        />\n      </Flex>\n    </>\n  ) : (\n    <>\n      {activeStep !== 3 ? (\n        <Grid templateColumns=\"repeat(6, 1fr)\" gap={4}>\n          <GridItem rowSpan={3} colSpan={1}>\n            <Flex flexDir={\"column\"} pr={20} pt={120}>\n            </Flex>\n          </GridItem>\n          <GridItem rowSpan={3} colSpan={3}>\n            <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n              <Flex marginTop={20} marginBottom={10}>\n                <AceEditor\n                  fontSize={16}\n                  showPrintMargin={true}\n                  showGutter={true}\n                  highlightActiveLine={true}\n                  setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: false,\n                    showLineNumbers: true,\n                    tabSize: 2,\n                  }}\n                  mode=\"json\"\n                  theme=\"terminal\"\n                  onChange={(newvalue, event) => {\n                    setdata(newvalue);\n                    setDownloadable(false);\n                    let temp = arr;\n                    temp[idx] = JSON.parse(newvalue);\n                    setArr(temp);\n                  }}\n                  value={data}\n                  name=\"grammar-editor\"\n                  wrapEnabled\n                  height=\"40em\"\n                  width={\"40em\"}\n                />\n                <Stack marginLeft={10} py={4} direction=\"column\">\n                  {names.map((name, id) => (\n                    <>\n                      <Button\n                        colorScheme=\"blue\"\n                        onClick={ () => setdata(JSON.stringify(arr[id], null, '\\t')) }\n                      >{name}</Button>\n                    </>\n                  ))}\n                </Stack>\n              </Flex>\n              <Stack py={4} direction=\"row\">\n                <Button\n                  colorScheme=\"yellow\"\n                  disabled={!data}\n                  onClick={onValidate}\n                >\n                  Validate\n                </Button>\n                <Button\n                  colorScheme=\"green\"\n                  disabled={!downloadable}\n                  onClick={downloadTxtFile}\n                  leftIcon={<BiDownload />}\n                >\n                  Download File\n                </Button>\n                {/* {activeStep === 1 | activeStep === 2 ? (\n                  <Button\n                    colorScheme=\"yellow\"\n                    disabled={!data}\n                    // onClick={AddNewObj}\n                  >\n                    New\n                  </Button>\n                ): (<></>)} */}\n              </Stack>\n\n              {activeStep === stepslen ? (\n                <Flex px={4} py={4} width=\"100%\" flexDirection=\"column\">\n                  <Heading fontSize=\"xl\" textAlign=\"center\">\n                    Woohoo! All steps completed!\n                  </Heading>\n                  <Button mx=\"auto\" mt={6} size=\"sm\" onClick={reset}>\n                    Reset\n                  </Button>\n                </Flex>\n              ) : (\n                <Flex width=\"100%\" justify=\"flex-end\">\n                  <Button\n                    isDisabled={activeStep === 0}\n                    mr={4}\n                    onClick={prevStep}\n                    size=\"sm\"\n                    variant={\"outline\"}\n                  >\n                    Prev\n                  </Button>\n                  {activeStep === stepslen - 1 ? (\n                    <Button\n                      size=\"sm\"\n                      onClick={onFinish}\n                      disabled={!validated}\n                      isLoading={submitting}\n                      colorScheme=\"green\"\n                      variant={\"outline\"}\n                    >\n                      Finish\n                    </Button>\n                  ) : (\n                    <Button\n                      size=\"sm\"\n                      onClick={onNextStep}\n                      disabled={!validated}\n                      isLoading={submitting}\n                      colorScheme=\"yellow\"\n                      variant={\"outline\"}\n                    >\n                      Next\n                    </Button>\n                  )}\n                </Flex>\n              )}\n            </Flex>\n          </GridItem>\n          {/* for errors */}\n          <GridItem rowSpan={3} colSpan={2} pt={120}>\n            <Flex flexDir={\"column\"} pl={20}>\n              {displayErrors.length > 0 ? (\n                <List spacing={2}>\n                  {displayErrors.map((e, i) => {\n                    let str = \"\";\n                    const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n                    let Val;\n                    if (splitarr.length === 12) {\n                      splitarr.map(\n                        (m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m)\n                      );\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {\" \" + splitarr[10]}\n                            </Text>\n                          </Text>\n                        </>\n                      );\n                    }\n                    if (splitarr.length === 7 || splitarr.length === 8) {\n                      splitarr.map((m, i) => i !== 0 && (str = str + \" \" + m));\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={\"teal.400\"}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                          </Text>\n                        </>\n                      );\n                    }\n                    if (splitarr.length === 11) {\n                      splitarr.map(\n                        (m, i) => i !== 0 && i !== 10 && (str = str + \" \" + m)\n                      );\n                      Val = () => (\n                        <>\n                          <Text as=\"span\">\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {splitarr[0]}\n                            </Text>\n                            <Text as=\"span\">{str}</Text>\n                            <Text\n                              as=\"span\"\n                              fontWeight={\"bold\"}\n                              color={tipcolors[splitarr[10]]}\n                            >\n                              {\" \" + splitarr[10]}\n                            </Text>\n                          </Text>\n                        </>\n                      );\n                    }\n                    return (\n                      <ListItem key={i}>\n                        <ListIcon as={FaExclamationCircle} color=\"red.500\" />\n                        {<Val />}\n                      </ListItem>\n                    );\n                  })}\n                </List>\n              ) : (\n                <></>\n              )}\n            </Flex>\n          </GridItem>\n          <Modal onClose={onClose} isOpen={isOpen} isCentered>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalCloseButton />\n              <ModalBody>\n                <Box textAlign=\"center\" py={10} px={6}>\n                  <CheckCircleIcon boxSize={\"50px\"} color={\"green.500\"} />\n                  <Heading as=\"h2\" size=\"xl\" mt={6} mb={2}>\n                    Your specification are successful saved!\n                  </Heading>\n                  <Text color={\"gray.500\"}>\n                    We have made sure that your data is free from any data-types\n                    or syntax errors. Happy Development!\n                  </Text>\n                </Box>\n              </ModalBody>\n              <ModalFooter>\n                <Button>\n                  <Flex as={Link} to=\"/projects\">Close</Flex>\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        </Grid>\n      ) : (\n        <>\n          <Tabs isFitted variant=\"unstyled\" marginTop={10}>\n            <TabList mb=\"1em\">\n              <Tab _selected={{ color: 'white', bg: 'blue.300' }}>Author Custom Behaviour</Tab>\n              <Tab _selected={{ color: 'white', bg: 'blue.300' }}>View Authored Custom Behaviours</Tab>\n              <Tab _selected={{ color: 'white', bg: 'blue.300' }}>Publish</Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <div>\n                  <Grid templateColumns=\"repeat(8, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n                        <Text fontSize='xl'>Author your custom behaviours below.</Text>\n                        <Flex flexDir=\"row\" marginTop={10}>\n                          <Text fontSize='lg'>Behaviour Name:</Text>\n                          <Flex>\n                            <FormControl\n                              paddingRight={10}\n                              paddingLeft={2}\n                            >\n                              <Input\n                                value={rulename}\n                                onChange={handel_name}\n                                placeholder=\"Name\"\n                                size=\"sm\"\n                              ></Input>\n                            </FormControl>\n                          </Flex>\n                          <Text fontSize='lg'>Behaviour Description:</Text>\n                          <Flex>\n                            <FormControl\n                              paddingLeft={2}\n                            >\n                              <Input\n                                value={description}\n                                onChange={handel_description}\n                                placeholder=\"Description\"\n                                size=\"sm\"\n                              ></Input>\n                            </FormControl>\n                          </Flex>\n                        </Flex>\n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={35} marginLeft={20}>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"32em\"\n                            w=\"12em\"\n                          >\n                            <Box \n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              w=\"400px\"\n                              colorScheme=\"yellow\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Code Constructs\n                                  </Text>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"lg\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                                marginTop={2}\n                                marginLeft={7}\n                              >\n                                { semantics.elements.map((p) => (\n                                    <a\n                                      onClick={() => {\n                                        console.log(position);\n                                        var newdata_part1 = data.slice(0,position);\n                                        var newdata_part2 = data.slice(position);\n                                        setdata(newdata_part1 + p.editorDisplay + newdata_part2);\n                                      }}\n                                      color=\"white\"\n                                    >\n                                      <span>{p.displayName}</span>\n                                    </a>\n                                  ))\n                                }\n                              </Flex>\n                            </Box>\n                          </Box>\n                          <Flex marginLeft={10} marginRight={10} marginBottom={10}>\n                            <AceEditor\n                              fontSize={16}\n                              showPrintMargin={true}\n                              showGutter={true}\n                              highlightActiveLine={true}\n                              setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: false,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                              }}\n                              mode=\"json\"\n                              theme=\"terminal\"\n                              onChange={(newvalue, event) => {\n                                fl = false;\n                                setdata(newvalue);\n                                setDownloadable(false);\n                              }}\n                              onCursorChange={(newplace)=>{\n                                convertPointer({\"row\":newplace.cursor.row, \"column\": newplace.cursor.column}, newplace.cursor.document.$lines);\n                              }}\n                              onSelectionChange={(e)=>{\n                                convertPointer({\"row\": e.cursor.row, \"column\": e.cursor.column}, e.doc.$lines);\n                              }}\n                              value={data}\n                              name=\"grammar-editor\"\n                              wrapEnabled\n                              height={\"40em\"}\n                              width={\"40em\"}\n                              id=\"editor\"\n                            />\n                          </Flex>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"32em\"\n                            w=\"18em\"\n                          >\n                            <Box // navbar\n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              pb=\"10\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              bg=\"grey\"\n                              w=\"400px\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                  <Text\n                                    fontSize=\"2xl\"\n                                    ml=\"2\"\n                                    color=\"white\"\n                                    fontWeight=\"semibold\"\n                                  >\n                                    Action-Responses\n                                  </Text>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"lg\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                                marginTop={2}\n                                marginLeft={7}\n                              >\n                                {flag ? (\n                                  rules.map((p) => (\n                                    <a\n                                      onClick={() => {\n                                        var newdata_part1 = data.slice(0,position);\n                                        var newdata_part2 = data.slice(position);\n                                        setdata(newdata_part1 + p + newdata_part2);\n                                      }}\n                                      color=\"white\"\n                                    >\n                                      {p}\n                                    </a>\n                                  ))\n                                ) : (\n                                  <>\n                                    <Text>No recent files...</Text>\n                                  </>\n                                )}\n                              </Flex>\n                            </Box>\n                          </Box>\n                        </Flex>\n                        <Stack py={4} direction=\"row\">\n                          <Button\n                            colorScheme=\"yellow\"\n                            disabled={!(data && rulename && description)}\n                            onClick={() => {\n                              handleValidateButton();\n                              setSeed(Math.random());\n                            }}\n                          >\n                            Validate\n                          </Button>\n                          <Button\n                            colorScheme=\"green\"\n                            disabled={!validated}\n                            onClick={() => {\n                              saveButton();\n                            }}\n                          >\n                            Save\n                          </Button>\n                          <Button\n                            colorScheme=\"red\"\n                            disabled={!(data || rulename || description)}\n                            onClick={() => {\n                              flushWrite();\n                            }}\n                          >\n                            Flush\n                          </Button>\n                        </Stack>\n                        {activeStep === stepslen ? (\n                          <Flex\n                            px={4}\n                            py={4}\n                            width=\"100%\"\n                            flexDirection=\"column\"\n                          >\n                            <Heading fontSize=\"xl\" textAlign=\"center\">\n                              Woohoo! All steps completed!\n                            </Heading>\n                            <Button mx=\"auto\" mt={6} size=\"sm\" onClick={reset}>\n                              Reset\n                            </Button>\n                          </Flex>\n                        ) : (\n                          <Flex width=\"100%\" justify=\"flex-end\">\n                            <Button\n                              isDisabled={activeStep === 0}\n                              mr={4}\n                              onClick={prevStep}\n                              size=\"sm\"\n                              variant={\"outline\"}\n                            >\n                              Prev\n                            </Button>\n                          </Flex>\n                        )}\n                      </Flex>\n                    </GridItem>\n                    {/* for errors */}\n                    <GridItem rowSpan={3} colSpan={2} pt={120}>\n                      <Flex flexDir={\"column\"} pl={20}>\n                        {displayErrors.length > 0 ? (\n                          <List spacing={2}>\n                            {displayErrors.map((e, i) => {\n                              let str = \"\";\n                              const splitarr = e.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g);\n                              let Val;\n                              if (splitarr.length === 12) {\n                                splitarr.map(\n                                  (m, i) =>\n                                    i !== 0 && i !== 10 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {\" \" + splitarr[10]}\n                                      </Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              if (\n                                splitarr.length === 7 ||\n                                splitarr.length === 8\n                              ) {\n                                splitarr.map(\n                                  (m, i) => i !== 0 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={\"teal.400\"}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              if (splitarr.length === 11) {\n                                splitarr.map(\n                                  (m, i) =>\n                                    i !== 0 && i !== 10 && (str = str + \" \" + m)\n                                );\n                                Val = () => (\n                                  <>\n                                    <Text as=\"span\">\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {splitarr[0]}\n                                      </Text>\n                                      <Text as=\"span\">{str}</Text>\n                                      <Text\n                                        as=\"span\"\n                                        fontWeight={\"bold\"}\n                                        color={tipcolors[splitarr[10]]}\n                                      >\n                                        {\" \" + splitarr[10]}\n                                      </Text>\n                                    </Text>\n                                  </>\n                                );\n                              }\n\n                              return (\n                                <ListItem key={i}>\n                                  <ListIcon\n                                    as={FaExclamationCircle}\n                                    color=\"red.500\"\n                                  />\n                                  {<Val />}\n                                </ListItem>\n                              );\n                            })}\n                          </List>\n                        ) : (\n                          <></>\n                        )}\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n              <TabPanel> \n                <div>\n                  <Grid templateColumns=\"repeat(6, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir=\"column\">\n                        <Text fontSize='xl'>Choose a custom behaviour to view the behaviour logic.</Text>\n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={35} marginLeft={20}>\n                          <Stack direction=\"column\" marginRight={10}>\n                            <Flex>\n                              <Text fontSize='lg'>Behaviour Name: {rule.rulename}</Text>\n                            </Flex>\n                            <Flex paddingTop={2}>\n                              <Text fontSize='lg'>Behaviour Description: {rule.description}</Text>\n                            </Flex>\n                            <Flex paddingTop={2}>\n                              <Text fontSize='lg'>Behaviour Logic:</Text>\n                            </Flex>\n                            <Flex paddingLeft={12}>\n                              <AceEditor\n                                fontSize={20}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                setOptions={{\n                                  enableBasicAutocompletion: true,\n                                  enableLiveAutocompletion: true,\n                                  enableSnippets: false,\n                                  showLineNumbers: true,\n                                  tabSize: 2,\n                                }}\n                                mode=\"json\"\n                                theme=\"terminal\"\n                                value={(rule.data_name != null ? atob(rule.data_name) : rule.data_name)}\n                                // value={logic}\n                                name=\"grammar-editor\"\n                                wrapEnabled\n                                height={\"28em\"}\n                                width={\"32em\"}\n                                readOnly={true}\n                              />\n                            </Flex>\n                          </Stack>\n                          <Box\n                            as=\"pane\"\n                            bg=\"grey\"\n                            _dark={{\n                              bg: \"gray.800\",\n                            }}\n                            h=\"36em\"\n                            w=\"18em\"\n                          >\n                            <Box // navbar\n                              as=\"pane\"\n                              zIndex=\"fixed\"\n                              h=\"300px\"\n                              pb=\"10\"\n                              overflowX=\"hidden\"\n                              overflowY=\"auto\"\n                              bg=\"grey\"\n                              w=\"400px\"\n                            >\n                              <Flex px=\"4\" pb=\"3\" pt=\"5\" align=\"center\">\n                                <Text\n                                  fontSize=\"2xl\"\n                                  ml=\"2\"\n                                  color=\"white\"\n                                  fontWeight=\"semibold\"\n                                >\n                                  Custom Behaviours\n                                </Text>\n                              </Flex>\n                              <Flex\n                                direction=\"column\"\n                                as=\"nav\"\n                                fontSize=\"md\"\n                                color=\"white\"\n                                aria-label=\"Main Navigation\"\n                                margin={5}\n                              >\n                                {rule_list.length > 0 ? (\n                                  rule_list.map((p) => (\n                                    <Text fontSize='xl'>\n                                      <a\n                                        onClick={() => {\n                                          setRule(p);\n                                          setLogic(p.data_name);\n                                        }}\n                                        color=\"white\"\n                                      >\n                                        {p.rulename}\n                                      </a>\n                                    </Text>\n                                  ))\n                                ) : (\n                                  <>\n                                    <Text>No recent files!</Text>\n                                  </>\n                                )}\n                              </Flex>\n                            </Box>\n                          </Box>\n                        </Flex>\n                        <Flex marginTop={10}>\n                          <Button\n                            colorScheme=\"red\"\n                            disabled={!rule.rulename}\n                            onClick={() => {\n                              setRule({});\n                              setLogic(\"\");\n                            }}\n                          >\n                            Flush\n                          </Button>\n                        </Flex>\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n              <TabPanel>\n                <div>\n                  <Grid templateColumns=\"repeat(6, 1fr)\" gap={2}>\n                    <GridItem rowSpan={8} colStart={1} colEnd={8}>\n                      <Flex py={4} alignItems={\"center\"} flexDir={\"column\"}>\n                        <Text fontSize='xl'>Select and Publish final custom behaviours.</Text>\n                        <Text>Drag and drop custom behaviours from the behaviour section. Organise them\n                          in an order. On saving, the underlying specification will be published.\n                        </Text>\n                        <Flex flexDir=\"row\" paddingTop={10} paddingLeft={35} marginLeft={20}>\n                          {/* 1. space to hold items: pending */}\n                          <Flex paddingTop={10} marginRight={20}>\n                            {/* <DropArea /> */}\n                            {board.length > 0 ? (\n                              <Box\n                                ref={drop}\n                                width={600}\n                                height={700}\n                                border='1px solid'\n                                position='relative'\n                                maxHeight={700}\n                                overflowY='auto'\n                                justifyContent='center'\n                              >\n                                <Stack\n                                  py={4}\n                                  direction=\"column\"\n                                  paddingLeft={5}\n                                  paddingRight={5}\n                                >\n                                  {board.map((p, index) => (\n                                    <Button\n                                      backgroundColor='blue.200'\n                                      height={10}\n                                      width='auto'\n                                      draggable\n                                      onDragStart={(e) => {\n                                        if (reorder) {\n                                      \t  e.dataTransfer.setData('text/plain', index);\n                                        }\n                                      }}\n                                      onDragOver={(e) => {\n                                      \te.preventDefault();\n                                      }}\n                                      onDrop={(e) => {\n                                        if (reorder) {\n                                          const dragIndex = parseInt(e.dataTransfer.getData('text/plain'), 10);\n                                          console.log(dragIndex);\n                                          const hoverIndex = index;\n                                          if (dragIndex != hoverIndex) {\n                                            handleReorder(dragIndex, hoverIndex);\n                                          }\n                                        }\n                                      }}\n                                    >\n                                      <Text fontSize='xl'>{p.rulename}</Text>\n                                    </Button>\n                                  ))}\n                                </Stack>\n                              </Box>\n                            ) : (\n                              <Box\n                                ref={drop}\n                                width={600}\n                                height={700}\n                                border='1px solid'\n                                position='relative'\n                                justifyContent='center'\n                                alignItems='center'\n                              >\n                                <Text\n                                  textAlign=\"center\"\n                                >Drop Here</Text>\n                              </Box>\n                            )}\n                          </Flex>\n                          {/* 2. behaviours to select: done */}\n                          <Stack\n                            py={4}\n                            direction=\"column\"\n                            maxHeight={800}\n                            overflowY='auto'\n                          >\n                            <Flex align=\"center\">\n                              <Text fontSize=\"2xl\">Custom Behaviours</Text>\n                            </Flex>\n                            {rule_list.length > 0 ? (\n                              rule_list.map((p) => {\n                                return <Behaviour obj={p} reorder={reorder}/>\n                              })\n                            ) : (\n                              <>\n                                <Text fontSize='xl'>No recent files!</Text>\n                              </>\n                            )}\n                          </Stack>\n                        </Flex>\n                        <Stack py={4} direction=\"row\" marginTop={10}>\n                          <Button\n                            colorScheme=\"yellow\"\n                            onClick={() => {setReorder(true)}}\n                            disabled={board.length === 0}\n                            isLoading={submitting}\n                          >\n                            Reorder\n                          </Button>\n                          <Button\n                            onClick={saveCustom}\n                            disabled={!reorder}\n                            isLoading={submitting}\n                            colorScheme=\"green\"\n                          >\n                            Save\n                          </Button>\n                          <Button\n                            onClick={() => {setBoard([]); setReorder(false)}}\n                            disabled={board.length === 0}\n                            isLoading={submitting}\n                            colorScheme=\"red\"\n                          >\n                            Flush\n                          </Button>\n                          <Button\n                            colorScheme=\"green\"\n                            disabled={!downloadable}\n                            onClick={downloadTxtFile}\n                            leftIcon={<BiDownload />}\n                          >\n                            Download File\n                          </Button>\n                        </Stack>\n                        <Flex width=\"70%\" justify=\"flex-end\">\n                          <Button\n                            size=\"sm\"\n                            onClick={onNextStep}\n                            disabled={board.length}\n                            isLoading={submitting}\n                            colorScheme=\"yellow\"\n                            variant={\"outline\"}\n                          >\n                            Next\n                          </Button>\n                        </Flex>\n                      </Flex>\n                    </GridItem>\n                  </Grid>\n                </div>\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </>\n      )}\n    </>\n  );\n};\n\nconst CustomCard = React.forwardRef(({ children, ...rest }, ref) => (\n  <Box p=\"1\">\n    <Tag ref={ref} {...rest}>\n      {children}\n    </Tag>\n  </Box>\n));\n\nexport default ProjectPageContent;\n"]},"metadata":{},"sourceType":"module"}