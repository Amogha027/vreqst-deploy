{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ValidatorsImpl = void 0;\n\nconst validator = require(\"validator\");\n\nconst context_items_1 = require(\"../context-items\");\n\nclass ValidatorsImpl {\n  constructor(builder, chain) {\n    this.builder = builder;\n    this.chain = chain;\n    this.negateNext = false;\n  }\n\n  addItem(item) {\n    this.builder.addItem(item);\n    this.lastValidator = item; // Reset this.negateNext so that next validation isn't negated too\n\n    this.negateNext = false;\n    return this.chain;\n  } // validation manipulation\n\n\n  not() {\n    this.negateNext = true;\n    return this.chain;\n  }\n\n  withMessage(message) {\n    this.lastValidator.message = message;\n    return this.chain;\n  } // custom validators\n\n\n  custom(validator) {\n    return this.addItem(new context_items_1.CustomValidation(validator, this.negateNext));\n  }\n\n  exists(options = {}) {\n    let validator;\n\n    if (options.checkFalsy) {\n      validator = value => !!value;\n    } else if (options.checkNull) {\n      validator = value => value != null;\n    } else {\n      validator = value => value !== undefined;\n    }\n\n    return this.custom(validator);\n  }\n\n  isArray(options = {}) {\n    return this.custom(value => Array.isArray(value) && (typeof options.min === 'undefined' || value.length >= options.min) && (typeof options.max === 'undefined' || value.length <= options.max));\n  }\n\n  isObject(options = {\n    strict: true\n  }) {\n    return this.custom(value => typeof value === 'object' && (options.strict ? value !== null && !Array.isArray(value) : true));\n  }\n\n  isString() {\n    return this.custom(value => typeof value === 'string');\n  }\n\n  notEmpty(options) {\n    this.not();\n    return this.isEmpty(options);\n  } // Standard validators\n\n\n  addStandardValidation(validator, ...options) {\n    return this.addItem(new context_items_1.StandardValidation(validator, this.negateNext, options));\n  }\n\n  contains(elem, options) {\n    return this.addStandardValidation(validator.contains, elem, options);\n  }\n\n  equals(comparison) {\n    return this.addStandardValidation(validator.equals, comparison);\n  }\n\n  isAfter(dateOrOptions) {\n    return this.addStandardValidation(validator.isAfter, dateOrOptions);\n  }\n\n  isAlpha(locale, options) {\n    // TODO(v7): remove string[] support\n    const ignore = Array.isArray(options === null || options === void 0 ? void 0 : options.ignore) ? options === null || options === void 0 ? void 0 : options.ignore.join('') : options === null || options === void 0 ? void 0 : options.ignore;\n    return this.addStandardValidation(validator.isAlpha, locale, Object.assign(Object.assign({}, options), {\n      ignore\n    }));\n  }\n\n  isAlphanumeric(locale, options) {\n    return this.addStandardValidation(validator.isAlphanumeric, locale, options);\n  }\n\n  isAscii() {\n    return this.addStandardValidation(validator.isAscii);\n  }\n\n  isBase32(options) {\n    return this.addStandardValidation(validator.isBase32, options);\n  }\n\n  isBase58() {\n    return this.addStandardValidation(validator.isBase58);\n  }\n\n  isBase64(options) {\n    return this.addStandardValidation(validator.isBase64, options);\n  }\n\n  isBefore(date) {\n    return this.addStandardValidation(validator.isBefore, date);\n  }\n\n  isBIC() {\n    return this.addStandardValidation(validator.isBIC);\n  }\n  /**\n   * There are basically three levels of strictness for this validator.\n   * Passing `{ strict: true }` as option only passes the validation if the value is a JS bool. (It also overrides the loose property of the options).\n   * Passing `{ loose: true|false }` along with no `strict` prop of with `strict` falsy follows the behaviour specified in validator.js docs.\n   */\n\n\n  isBoolean(options) {\n    if (options === null || options === void 0 ? void 0 : options.strict) {\n      return this.custom(value => {\n        return value === true || value === false;\n      });\n    }\n\n    return this.addStandardValidation(validator.isBoolean, options);\n  }\n\n  isBtcAddress() {\n    return this.addStandardValidation(validator.isBtcAddress);\n  }\n\n  isByteLength(options) {\n    return this.addStandardValidation(validator.isByteLength, options);\n  }\n\n  isCreditCard() {\n    return this.addStandardValidation(validator.isCreditCard);\n  }\n\n  isCurrency(options) {\n    return this.addStandardValidation(validator.isCurrency, options);\n  }\n\n  isDataURI() {\n    return this.addStandardValidation(validator.isDataURI);\n  }\n\n  isDate(options) {\n    return this.addStandardValidation(validator.isDate, options);\n  }\n\n  isDecimal(options) {\n    return this.addStandardValidation(validator.isDecimal, options);\n  }\n\n  isDivisibleBy(number) {\n    return this.addStandardValidation(validator.isDivisibleBy, number);\n  }\n\n  isEAN() {\n    return this.addStandardValidation(validator.isEAN);\n  }\n\n  isEmail(options) {\n    return this.addStandardValidation(validator.isEmail, options);\n  }\n\n  isEmpty(options) {\n    return this.addStandardValidation(validator.isEmpty, options);\n  }\n\n  isEthereumAddress() {\n    return this.addStandardValidation(validator.isEthereumAddress);\n  }\n\n  isFQDN(options) {\n    return this.addStandardValidation(validator.isFQDN, options);\n  }\n\n  isFloat(options) {\n    return this.addStandardValidation(validator.isFloat, options);\n  }\n\n  isFullWidth() {\n    return this.addStandardValidation(validator.isFullWidth);\n  }\n\n  isHalfWidth() {\n    return this.addStandardValidation(validator.isHalfWidth);\n  }\n\n  isHash(algorithm) {\n    return this.addStandardValidation(validator.isHash, algorithm);\n  }\n\n  isHexColor() {\n    return this.addStandardValidation(validator.isHexColor);\n  }\n\n  isHexadecimal() {\n    return this.addStandardValidation(validator.isHexadecimal);\n  }\n\n  isHSL() {\n    return this.addStandardValidation(validator.isHSL);\n  }\n\n  isIBAN() {\n    return this.addStandardValidation(validator.isIBAN);\n  }\n\n  isIdentityCard(locale) {\n    return this.addStandardValidation(validator.isIdentityCard, locale);\n  }\n\n  isIMEI(options) {\n    return this.addStandardValidation(validator.isIMEI, options);\n  }\n\n  isIP(version) {\n    return this.addStandardValidation(validator.isIP, version);\n  }\n\n  isIPRange(version) {\n    return this.addStandardValidation(validator.isIPRange, version);\n  }\n\n  isISBN(versionOrOptions) {\n    return this.addStandardValidation(validator.isISBN, versionOrOptions);\n  }\n\n  isISSN(options) {\n    return this.addStandardValidation(validator.isISSN, options);\n  }\n\n  isISIN() {\n    return this.addStandardValidation(validator.isISIN);\n  }\n\n  isISO6391() {\n    return this.addStandardValidation(validator.isISO6391);\n  }\n\n  isISO8601(options) {\n    return this.addStandardValidation(validator.isISO8601, options);\n  }\n\n  isISO31661Alpha2() {\n    return this.addStandardValidation(validator.isISO31661Alpha2);\n  }\n\n  isISO31661Alpha3() {\n    return this.addStandardValidation(validator.isISO31661Alpha3);\n  }\n\n  isISO4217() {\n    return this.addStandardValidation(validator.isISO4217);\n  }\n\n  isISRC() {\n    return this.addStandardValidation(validator.isISRC);\n  }\n\n  isIn(values) {\n    return this.addStandardValidation(validator.isIn, values);\n  }\n\n  isInt(options) {\n    return this.addStandardValidation(validator.isInt, options);\n  }\n\n  isJSON(options) {\n    return this.addStandardValidation(validator.isJSON, options);\n  }\n\n  isJWT() {\n    return this.addStandardValidation(validator.isJWT);\n  }\n\n  isLatLong(options) {\n    return this.addStandardValidation(validator.isLatLong, options);\n  }\n\n  isLength(options) {\n    return this.addStandardValidation(validator.isLength, options);\n  }\n\n  isLicensePlate(locale) {\n    return this.addStandardValidation(validator.isLicensePlate, locale);\n  }\n\n  isLocale() {\n    return this.addStandardValidation(validator.isLocale);\n  }\n\n  isLowercase() {\n    return this.addStandardValidation(validator.isLowercase);\n  }\n\n  isLuhnNumber() {\n    return this.addStandardValidation(validator.isLuhnNumber);\n  }\n\n  isMagnetURI() {\n    return this.addStandardValidation(validator.isMagnetURI);\n  }\n\n  isMACAddress(options) {\n    return this.addStandardValidation(validator.isMACAddress, options);\n  }\n\n  isMD5() {\n    return this.addStandardValidation(validator.isMD5);\n  }\n\n  isMimeType() {\n    return this.addStandardValidation(validator.isMimeType);\n  }\n\n  isMobilePhone(locale, options) {\n    return this.addStandardValidation(validator.isMobilePhone, locale, options);\n  }\n\n  isMongoId() {\n    return this.addStandardValidation(validator.isMongoId);\n  }\n\n  isMultibyte() {\n    return this.addStandardValidation(validator.isMultibyte);\n  }\n\n  isNumeric(options) {\n    return this.addStandardValidation(validator.isNumeric, options);\n  }\n\n  isOctal() {\n    return this.addStandardValidation(validator.isOctal);\n  }\n\n  isPassportNumber(countryCode) {\n    return this.addStandardValidation(validator.isPassportNumber, countryCode);\n  }\n\n  isPort() {\n    return this.addStandardValidation(validator.isPort);\n  }\n\n  isPostalCode(locale) {\n    return this.addStandardValidation(validator.isPostalCode, locale);\n  }\n\n  isRFC3339() {\n    return this.addStandardValidation(validator.isRFC3339);\n  }\n\n  isRgbColor(includePercentValues) {\n    return this.addStandardValidation(validator.isRgbColor, includePercentValues);\n  }\n\n  isSemVer() {\n    return this.addStandardValidation(validator.isSemVer);\n  }\n\n  isSlug() {\n    return this.addStandardValidation(validator.isSlug);\n  }\n\n  isStrongPassword(options) {\n    return this.addStandardValidation(validator.isStrongPassword, options);\n  }\n\n  isSurrogatePair() {\n    return this.addStandardValidation(validator.isSurrogatePair);\n  }\n\n  isTaxID(locale) {\n    return this.addStandardValidation(validator.isTaxID, locale);\n  }\n\n  isTime(options) {\n    return this.addStandardValidation(validator.isTime, options);\n  }\n\n  isURL(options) {\n    return this.addStandardValidation(validator.isURL, options);\n  }\n\n  isUUID(version) {\n    return this.addStandardValidation(validator.isUUID, version);\n  }\n\n  isUppercase() {\n    return this.addStandardValidation(validator.isUppercase);\n  }\n\n  isVariableWidth() {\n    return this.addStandardValidation(validator.isVariableWidth);\n  }\n\n  isVAT(countryCode) {\n    return this.addStandardValidation(validator.isVAT, countryCode);\n  }\n\n  isWhitelisted(chars) {\n    return this.addStandardValidation(validator.isWhitelisted, chars);\n  }\n\n  matches(pattern, modifiers) {\n    return this.addStandardValidation.apply(this, [validator.matches, ...(typeof pattern === 'string' ? [pattern, modifiers] : [pattern.source, [...new Set((modifiers || '') + pattern.flags)].join('')])]);\n  }\n\n}\n\nexports.ValidatorsImpl = ValidatorsImpl;","map":{"version":3,"sources":["/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/express-validator/src/chain/validators-impl.js"],"names":["Object","defineProperty","exports","value","ValidatorsImpl","validator","require","context_items_1","constructor","builder","chain","negateNext","addItem","item","lastValidator","not","withMessage","message","custom","CustomValidation","exists","options","checkFalsy","checkNull","undefined","isArray","Array","min","length","max","isObject","strict","isString","notEmpty","isEmpty","addStandardValidation","StandardValidation","contains","elem","equals","comparison","isAfter","dateOrOptions","isAlpha","locale","ignore","join","assign","isAlphanumeric","isAscii","isBase32","isBase58","isBase64","isBefore","date","isBIC","isBoolean","isBtcAddress","isByteLength","isCreditCard","isCurrency","isDataURI","isDate","isDecimal","isDivisibleBy","number","isEAN","isEmail","isEthereumAddress","isFQDN","isFloat","isFullWidth","isHalfWidth","isHash","algorithm","isHexColor","isHexadecimal","isHSL","isIBAN","isIdentityCard","isIMEI","isIP","version","isIPRange","isISBN","versionOrOptions","isISSN","isISIN","isISO6391","isISO8601","isISO31661Alpha2","isISO31661Alpha3","isISO4217","isISRC","isIn","values","isInt","isJSON","isJWT","isLatLong","isLength","isLicensePlate","isLocale","isLowercase","isLuhnNumber","isMagnetURI","isMACAddress","isMD5","isMimeType","isMobilePhone","isMongoId","isMultibyte","isNumeric","isOctal","isPassportNumber","countryCode","isPort","isPostalCode","isRFC3339","isRgbColor","includePercentValues","isSemVer","isSlug","isStrongPassword","isSurrogatePair","isTaxID","isTime","isURL","isUUID","isUppercase","isVariableWidth","isVAT","isWhitelisted","chars","matches","pattern","modifiers","apply","source","Set","flags"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidatorsImpl = void 0;\nconst validator = require(\"validator\");\nconst context_items_1 = require(\"../context-items\");\nclass ValidatorsImpl {\n    constructor(builder, chain) {\n        this.builder = builder;\n        this.chain = chain;\n        this.negateNext = false;\n    }\n    addItem(item) {\n        this.builder.addItem(item);\n        this.lastValidator = item;\n        // Reset this.negateNext so that next validation isn't negated too\n        this.negateNext = false;\n        return this.chain;\n    }\n    // validation manipulation\n    not() {\n        this.negateNext = true;\n        return this.chain;\n    }\n    withMessage(message) {\n        this.lastValidator.message = message;\n        return this.chain;\n    }\n    // custom validators\n    custom(validator) {\n        return this.addItem(new context_items_1.CustomValidation(validator, this.negateNext));\n    }\n    exists(options = {}) {\n        let validator;\n        if (options.checkFalsy) {\n            validator = value => !!value;\n        }\n        else if (options.checkNull) {\n            validator = value => value != null;\n        }\n        else {\n            validator = value => value !== undefined;\n        }\n        return this.custom(validator);\n    }\n    isArray(options = {}) {\n        return this.custom(value => Array.isArray(value) &&\n            (typeof options.min === 'undefined' || value.length >= options.min) &&\n            (typeof options.max === 'undefined' || value.length <= options.max));\n    }\n    isObject(options = { strict: true }) {\n        return this.custom(value => typeof value === 'object' &&\n            (options.strict ? value !== null && !Array.isArray(value) : true));\n    }\n    isString() {\n        return this.custom(value => typeof value === 'string');\n    }\n    notEmpty(options) {\n        this.not();\n        return this.isEmpty(options);\n    }\n    // Standard validators\n    addStandardValidation(validator, ...options) {\n        return this.addItem(new context_items_1.StandardValidation(validator, this.negateNext, options));\n    }\n    contains(elem, options) {\n        return this.addStandardValidation(validator.contains, elem, options);\n    }\n    equals(comparison) {\n        return this.addStandardValidation(validator.equals, comparison);\n    }\n    isAfter(dateOrOptions) {\n        return this.addStandardValidation(validator.isAfter, dateOrOptions);\n    }\n    isAlpha(locale, options) {\n        // TODO(v7): remove string[] support\n        const ignore = Array.isArray(options === null || options === void 0 ? void 0 : options.ignore) ? options === null || options === void 0 ? void 0 : options.ignore.join('') : options === null || options === void 0 ? void 0 : options.ignore;\n        return this.addStandardValidation(validator.isAlpha, locale, Object.assign(Object.assign({}, options), { ignore }));\n    }\n    isAlphanumeric(locale, options) {\n        return this.addStandardValidation(validator.isAlphanumeric, locale, options);\n    }\n    isAscii() {\n        return this.addStandardValidation(validator.isAscii);\n    }\n    isBase32(options) {\n        return this.addStandardValidation(validator.isBase32, options);\n    }\n    isBase58() {\n        return this.addStandardValidation(validator.isBase58);\n    }\n    isBase64(options) {\n        return this.addStandardValidation(validator.isBase64, options);\n    }\n    isBefore(date) {\n        return this.addStandardValidation(validator.isBefore, date);\n    }\n    isBIC() {\n        return this.addStandardValidation(validator.isBIC);\n    }\n    /**\n     * There are basically three levels of strictness for this validator.\n     * Passing `{ strict: true }` as option only passes the validation if the value is a JS bool. (It also overrides the loose property of the options).\n     * Passing `{ loose: true|false }` along with no `strict` prop of with `strict` falsy follows the behaviour specified in validator.js docs.\n     */\n    isBoolean(options) {\n        if (options === null || options === void 0 ? void 0 : options.strict) {\n            return this.custom(value => {\n                return value === true || value === false;\n            });\n        }\n        return this.addStandardValidation(validator.isBoolean, options);\n    }\n    isBtcAddress() {\n        return this.addStandardValidation(validator.isBtcAddress);\n    }\n    isByteLength(options) {\n        return this.addStandardValidation(validator.isByteLength, options);\n    }\n    isCreditCard() {\n        return this.addStandardValidation(validator.isCreditCard);\n    }\n    isCurrency(options) {\n        return this.addStandardValidation(validator.isCurrency, options);\n    }\n    isDataURI() {\n        return this.addStandardValidation(validator.isDataURI);\n    }\n    isDate(options) {\n        return this.addStandardValidation(validator.isDate, options);\n    }\n    isDecimal(options) {\n        return this.addStandardValidation(validator.isDecimal, options);\n    }\n    isDivisibleBy(number) {\n        return this.addStandardValidation(validator.isDivisibleBy, number);\n    }\n    isEAN() {\n        return this.addStandardValidation(validator.isEAN);\n    }\n    isEmail(options) {\n        return this.addStandardValidation(validator.isEmail, options);\n    }\n    isEmpty(options) {\n        return this.addStandardValidation(validator.isEmpty, options);\n    }\n    isEthereumAddress() {\n        return this.addStandardValidation(validator.isEthereumAddress);\n    }\n    isFQDN(options) {\n        return this.addStandardValidation(validator.isFQDN, options);\n    }\n    isFloat(options) {\n        return this.addStandardValidation(validator.isFloat, options);\n    }\n    isFullWidth() {\n        return this.addStandardValidation(validator.isFullWidth);\n    }\n    isHalfWidth() {\n        return this.addStandardValidation(validator.isHalfWidth);\n    }\n    isHash(algorithm) {\n        return this.addStandardValidation(validator.isHash, algorithm);\n    }\n    isHexColor() {\n        return this.addStandardValidation(validator.isHexColor);\n    }\n    isHexadecimal() {\n        return this.addStandardValidation(validator.isHexadecimal);\n    }\n    isHSL() {\n        return this.addStandardValidation(validator.isHSL);\n    }\n    isIBAN() {\n        return this.addStandardValidation(validator.isIBAN);\n    }\n    isIdentityCard(locale) {\n        return this.addStandardValidation(validator.isIdentityCard, locale);\n    }\n    isIMEI(options) {\n        return this.addStandardValidation(validator.isIMEI, options);\n    }\n    isIP(version) {\n        return this.addStandardValidation(validator.isIP, version);\n    }\n    isIPRange(version) {\n        return this.addStandardValidation(validator.isIPRange, version);\n    }\n    isISBN(versionOrOptions) {\n        return this.addStandardValidation(validator.isISBN, versionOrOptions);\n    }\n    isISSN(options) {\n        return this.addStandardValidation(validator.isISSN, options);\n    }\n    isISIN() {\n        return this.addStandardValidation(validator.isISIN);\n    }\n    isISO6391() {\n        return this.addStandardValidation(validator.isISO6391);\n    }\n    isISO8601(options) {\n        return this.addStandardValidation(validator.isISO8601, options);\n    }\n    isISO31661Alpha2() {\n        return this.addStandardValidation(validator.isISO31661Alpha2);\n    }\n    isISO31661Alpha3() {\n        return this.addStandardValidation(validator.isISO31661Alpha3);\n    }\n    isISO4217() {\n        return this.addStandardValidation(validator.isISO4217);\n    }\n    isISRC() {\n        return this.addStandardValidation(validator.isISRC);\n    }\n    isIn(values) {\n        return this.addStandardValidation(validator.isIn, values);\n    }\n    isInt(options) {\n        return this.addStandardValidation(validator.isInt, options);\n    }\n    isJSON(options) {\n        return this.addStandardValidation(validator.isJSON, options);\n    }\n    isJWT() {\n        return this.addStandardValidation(validator.isJWT);\n    }\n    isLatLong(options) {\n        return this.addStandardValidation(validator.isLatLong, options);\n    }\n    isLength(options) {\n        return this.addStandardValidation(validator.isLength, options);\n    }\n    isLicensePlate(locale) {\n        return this.addStandardValidation(validator.isLicensePlate, locale);\n    }\n    isLocale() {\n        return this.addStandardValidation(validator.isLocale);\n    }\n    isLowercase() {\n        return this.addStandardValidation(validator.isLowercase);\n    }\n    isLuhnNumber() {\n        return this.addStandardValidation(validator.isLuhnNumber);\n    }\n    isMagnetURI() {\n        return this.addStandardValidation(validator.isMagnetURI);\n    }\n    isMACAddress(options) {\n        return this.addStandardValidation(validator.isMACAddress, options);\n    }\n    isMD5() {\n        return this.addStandardValidation(validator.isMD5);\n    }\n    isMimeType() {\n        return this.addStandardValidation(validator.isMimeType);\n    }\n    isMobilePhone(locale, options) {\n        return this.addStandardValidation(validator.isMobilePhone, locale, options);\n    }\n    isMongoId() {\n        return this.addStandardValidation(validator.isMongoId);\n    }\n    isMultibyte() {\n        return this.addStandardValidation(validator.isMultibyte);\n    }\n    isNumeric(options) {\n        return this.addStandardValidation(validator.isNumeric, options);\n    }\n    isOctal() {\n        return this.addStandardValidation(validator.isOctal);\n    }\n    isPassportNumber(countryCode) {\n        return this.addStandardValidation(validator.isPassportNumber, countryCode);\n    }\n    isPort() {\n        return this.addStandardValidation(validator.isPort);\n    }\n    isPostalCode(locale) {\n        return this.addStandardValidation(validator.isPostalCode, locale);\n    }\n    isRFC3339() {\n        return this.addStandardValidation(validator.isRFC3339);\n    }\n    isRgbColor(includePercentValues) {\n        return this.addStandardValidation(validator.isRgbColor, includePercentValues);\n    }\n    isSemVer() {\n        return this.addStandardValidation(validator.isSemVer);\n    }\n    isSlug() {\n        return this.addStandardValidation(validator.isSlug);\n    }\n    isStrongPassword(options) {\n        return this.addStandardValidation(validator.isStrongPassword, options);\n    }\n    isSurrogatePair() {\n        return this.addStandardValidation(validator.isSurrogatePair);\n    }\n    isTaxID(locale) {\n        return this.addStandardValidation(validator.isTaxID, locale);\n    }\n    isTime(options) {\n        return this.addStandardValidation(validator.isTime, options);\n    }\n    isURL(options) {\n        return this.addStandardValidation(validator.isURL, options);\n    }\n    isUUID(version) {\n        return this.addStandardValidation(validator.isUUID, version);\n    }\n    isUppercase() {\n        return this.addStandardValidation(validator.isUppercase);\n    }\n    isVariableWidth() {\n        return this.addStandardValidation(validator.isVariableWidth);\n    }\n    isVAT(countryCode) {\n        return this.addStandardValidation(validator.isVAT, countryCode);\n    }\n    isWhitelisted(chars) {\n        return this.addStandardValidation(validator.isWhitelisted, chars);\n    }\n    matches(pattern, modifiers) {\n        return this.addStandardValidation.apply(this, [\n            validator.matches,\n            ...(typeof pattern === 'string'\n                ? [pattern, modifiers]\n                : [pattern.source, [...new Set((modifiers || '') + pattern.flags)].join('')]),\n        ]);\n    }\n}\nexports.ValidatorsImpl = ValidatorsImpl;\n"]},"metadata":{},"sourceType":"script"}