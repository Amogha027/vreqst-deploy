{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitize = void 0;\n\nvar chain_1 = require(\"../chain\");\n\nvar utils_1 = require(\"../utils\");\n\nvar context_builder_1 = require(\"../context-builder\");\n\nvar hasNotified = false;\n\nfunction sanitize() {\n  var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var locations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!hasNotified) {\n    hasNotified = true;\n    console.warn('express-validator: sanitize(), sanitizeBody() and other sanitization-only middlewares ' + 'have been deprecated.\\nPlease use check(), body() and others instead, which must offer ' + 'the same API, and more.');\n  }\n\n  var builder = new context_builder_1.ContextBuilder().setFields(Array.isArray(fields) ? fields : [fields]).setLocations(locations);\n  var runner = new chain_1.ContextRunnerImpl(builder);\n\n  var middleware =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(req, _res, next) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return runner.run(req);\n\n            case 3:\n              next();\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              next(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function middleware(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return Object.assign(middleware, utils_1.bindAll(runner), utils_1.bindAll(new chain_1.SanitizersImpl(builder, middleware)), {\n    builder: builder\n  });\n}\n\nexports.sanitize = sanitize;","map":{"version":3,"sources":["/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/express-validator/src/middlewares/sanitize.js"],"names":["Object","defineProperty","exports","value","sanitize","chain_1","require","utils_1","context_builder_1","hasNotified","fields","locations","console","warn","builder","ContextBuilder","setFields","Array","isArray","setLocations","runner","ContextRunnerImpl","middleware","req","_res","next","run","assign","bindAll","SanitizersImpl"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,IAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,oBAAD,CAAjC;;AACA,IAAIG,WAAW,GAAG,KAAlB;;AACA,SAASL,QAAT,GAA+C;AAAA,MAA7BM,MAA6B,uEAApB,EAAoB;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;;AAC3C,MAAI,CAACF,WAAL,EAAkB;AACdA,IAAAA,WAAW,GAAG,IAAd;AACAG,IAAAA,OAAO,CAACC,IAAR,CAAa,2FACT,yFADS,GAET,yBAFJ;AAGH;;AACD,MAAMC,OAAO,GAAG,IAAIN,iBAAiB,CAACO,cAAtB,GACXC,SADW,CACDC,KAAK,CAACC,OAAN,CAAcR,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CADhC,EAEXS,YAFW,CAEER,SAFF,CAAhB;AAGA,MAAMS,MAAM,GAAG,IAAIf,OAAO,CAACgB,iBAAZ,CAA8BP,OAA9B,CAAf;;AACA,MAAMQ,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,GAAP,EAAYC,IAAZ,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAELL,MAAM,CAACM,GAAP,CAAWH,GAAX,CAFK;;AAAA;AAGXE,cAAAA,IAAI;AAHO;AAAA;;AAAA;AAAA;AAAA;AAMXA,cAAAA,IAAI,aAAJ;;AANW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVH,UAAU;AAAA;AAAA;AAAA,KAAhB;;AASA,SAAOtB,MAAM,CAAC2B,MAAP,CAAcL,UAAd,EAA0Bf,OAAO,CAACqB,OAAR,CAAgBR,MAAhB,CAA1B,EAAmDb,OAAO,CAACqB,OAAR,CAAgB,IAAIvB,OAAO,CAACwB,cAAZ,CAA2Bf,OAA3B,EAAoCQ,UAApC,CAAhB,CAAnD,EAAqH;AAAER,IAAAA,OAAO,EAAPA;AAAF,GAArH,CAAP;AACH;;AACDZ,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sanitize = void 0;\nconst chain_1 = require(\"../chain\");\nconst utils_1 = require(\"../utils\");\nconst context_builder_1 = require(\"../context-builder\");\nlet hasNotified = false;\nfunction sanitize(fields = '', locations = []) {\n    if (!hasNotified) {\n        hasNotified = true;\n        console.warn('express-validator: sanitize(), sanitizeBody() and other sanitization-only middlewares ' +\n            'have been deprecated.\\nPlease use check(), body() and others instead, which must offer ' +\n            'the same API, and more.');\n    }\n    const builder = new context_builder_1.ContextBuilder()\n        .setFields(Array.isArray(fields) ? fields : [fields])\n        .setLocations(locations);\n    const runner = new chain_1.ContextRunnerImpl(builder);\n    const middleware = async (req, _res, next) => {\n        try {\n            await runner.run(req);\n            next();\n        }\n        catch (e) {\n            next(e);\n        }\n    };\n    return Object.assign(middleware, utils_1.bindAll(runner), utils_1.bindAll(new chain_1.SanitizersImpl(builder, middleware)), { builder });\n}\nexports.sanitize = sanitize;\n"]},"metadata":{},"sourceType":"script"}