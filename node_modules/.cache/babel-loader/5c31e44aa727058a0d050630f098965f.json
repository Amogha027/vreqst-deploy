{"ast":null,"code":"import _classCallCheck from \"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js';\nimport { createNativeDragSource, matchNativeItemType } from './NativeDragSources/index.js';\nimport * as NativeTypes from './NativeTypes.js';\nimport { getDragPreviewOffset, getEventClientOffset, getNodeClientOffset } from './OffsetUtils.js';\nimport { OptionsReader } from './OptionsReader.js';\nexport var HTML5BackendImpl =\n/*#__PURE__*/\nfunction () {\n  _createClass(HTML5BackendImpl, [{\n    key: \"profile\",\n\n    /**\n    * Generate profiling statistics for the HTML5Backend.\n    */\n    value: function profile() {\n      var ref, ref1;\n      return {\n        sourcePreviewNodes: this.sourcePreviewNodes.size,\n        sourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n        sourceNodeOptions: this.sourceNodeOptions.size,\n        sourceNodes: this.sourceNodes.size,\n        dragStartSourceIds: ((ref = this.dragStartSourceIds) === null || ref === void 0 ? void 0 : ref.length) || 0,\n        dropTargetIds: this.dropTargetIds.length,\n        dragEnterTargetIds: this.dragEnterTargetIds.length,\n        dragOverTargetIds: ((ref1 = this.dragOverTargetIds) === null || ref1 === void 0 ? void 0 : ref1.length) || 0\n      };\n    } // public for test\n\n  }, {\n    key: \"setup\",\n    value: function setup() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      if (root.__isReactDndBackendSetUp) {\n        throw new Error('Cannot have two HTML5 backends at the same time.');\n      }\n\n      root.__isReactDndBackendSetUp = true;\n      this.addEventListeners(root);\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      var root = this.rootElement;\n\n      if (root === undefined) {\n        return;\n      }\n\n      root.__isReactDndBackendSetUp = false;\n      this.removeEventListeners(this.rootElement);\n      this.clearCurrentDragSourceNode();\n\n      if (this.asyncEndDragFrameId) {\n        var ref;\n        (ref = this.window) === null || ref === void 0 ? void 0 : ref.cancelAnimationFrame(this.asyncEndDragFrameId);\n      }\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this = this;\n\n      this.sourcePreviewNodeOptions.set(sourceId, options);\n      this.sourcePreviewNodes.set(sourceId, node);\n      return function () {\n        _this.sourcePreviewNodes.delete(sourceId);\n\n        _this.sourcePreviewNodeOptions.delete(sourceId);\n      };\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node, options) {\n      var _this2 = this;\n\n      this.sourceNodes.set(sourceId, node);\n      this.sourceNodeOptions.set(sourceId, options);\n\n      var handleDragStart = function handleDragStart(e) {\n        return _this2.handleDragStart(e, sourceId);\n      };\n\n      var handleSelectStart = function handleSelectStart(e) {\n        return _this2.handleSelectStart(e);\n      };\n\n      node.setAttribute('draggable', 'true');\n      node.addEventListener('dragstart', handleDragStart);\n      node.addEventListener('selectstart', handleSelectStart);\n      return function () {\n        _this2.sourceNodes.delete(sourceId);\n\n        _this2.sourceNodeOptions.delete(sourceId);\n\n        node.removeEventListener('dragstart', handleDragStart);\n        node.removeEventListener('selectstart', handleSelectStart);\n        node.setAttribute('draggable', 'false');\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this3 = this;\n\n      var handleDragEnter = function handleDragEnter(e) {\n        return _this3.handleDragEnter(e, targetId);\n      };\n\n      var handleDragOver = function handleDragOver(e) {\n        return _this3.handleDragOver(e, targetId);\n      };\n\n      var handleDrop = function handleDrop(e) {\n        return _this3.handleDrop(e, targetId);\n      };\n\n      node.addEventListener('dragenter', handleDragEnter);\n      node.addEventListener('dragover', handleDragOver);\n      node.addEventListener('drop', handleDrop);\n      return function () {\n        node.removeEventListener('dragenter', handleDragEnter);\n        node.removeEventListener('dragover', handleDragOver);\n        node.removeEventListener('drop', handleDrop);\n      };\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.addEventListener) {\n        return;\n      }\n\n      target.addEventListener('dragstart', this.handleTopDragStart);\n      target.addEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.addEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.addEventListener('dragenter', this.handleTopDragEnter);\n      target.addEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.addEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.addEventListener('dragover', this.handleTopDragOver);\n      target.addEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.addEventListener('drop', this.handleTopDrop);\n      target.addEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(target) {\n      // SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n      if (!target.removeEventListener) {\n        return;\n      }\n\n      target.removeEventListener('dragstart', this.handleTopDragStart);\n      target.removeEventListener('dragstart', this.handleTopDragStartCapture, true);\n      target.removeEventListener('dragend', this.handleTopDragEndCapture, true);\n      target.removeEventListener('dragenter', this.handleTopDragEnter);\n      target.removeEventListener('dragenter', this.handleTopDragEnterCapture, true);\n      target.removeEventListener('dragleave', this.handleTopDragLeaveCapture, true);\n      target.removeEventListener('dragover', this.handleTopDragOver);\n      target.removeEventListener('dragover', this.handleTopDragOverCapture, true);\n      target.removeEventListener('drop', this.handleTopDrop);\n      target.removeEventListener('drop', this.handleTopDropCapture, true);\n    }\n  }, {\n    key: \"getCurrentSourceNodeOptions\",\n    value: function getCurrentSourceNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourceNodeOptions = this.sourceNodeOptions.get(sourceId);\n      return _objectSpread({\n        dropEffect: this.altKeyPressed ? 'copy' : 'move'\n      }, sourceNodeOptions || {});\n    }\n  }, {\n    key: \"getCurrentDropEffect\",\n    value: function getCurrentDropEffect() {\n      if (this.isDraggingNativeItem()) {\n        // It makes more sense to default to 'copy' for native resources\n        return 'copy';\n      }\n\n      return this.getCurrentSourceNodeOptions().dropEffect;\n    }\n  }, {\n    key: \"getCurrentSourcePreviewNodeOptions\",\n    value: function getCurrentSourcePreviewNodeOptions() {\n      var sourceId = this.monitor.getSourceId();\n      var sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId);\n      return _objectSpread({\n        anchorX: 0.5,\n        anchorY: 0.5,\n        captureDraggingState: false\n      }, sourcePreviewNodeOptions || {});\n    }\n  }, {\n    key: \"isDraggingNativeItem\",\n    value: function isDraggingNativeItem() {\n      var itemType = this.monitor.getItemType();\n      return Object.keys(NativeTypes).some(function (key) {\n        return NativeTypes[key] === itemType;\n      });\n    }\n  }, {\n    key: \"beginDragNativeItem\",\n    value: function beginDragNativeItem(type, dataTransfer) {\n      this.clearCurrentDragSourceNode();\n      this.currentNativeSource = createNativeDragSource(type, dataTransfer);\n      this.currentNativeHandle = this.registry.addSource(type, this.currentNativeSource);\n      this.actions.beginDrag([this.currentNativeHandle]);\n    }\n  }, {\n    key: \"setCurrentDragSourceNode\",\n    value: function setCurrentDragSourceNode(node) {\n      var _this4 = this;\n\n      this.clearCurrentDragSourceNode();\n      this.currentDragSourceNode = node; // A timeout of > 0 is necessary to resolve Firefox issue referenced\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n\n      var MOUSE_MOVE_TIMEOUT = 1000; // Receiving a mouse event in the middle of a dragging operation\n      // means it has ended and the drag source node disappeared from DOM,\n      // so the browser didn't dispatch the dragend event.\n      //\n      // We need to wait before we start listening for mousemove events.\n      // This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n      // immediately in some browsers.\n      //\n      // See:\n      //   * https://github.com/react-dnd/react-dnd/pull/928\n      //   * https://github.com/react-dnd/react-dnd/issues/869\n      //\n\n      this.mouseMoveTimeoutTimer = setTimeout(function () {\n        var ref;\n        return (ref = _this4.rootElement) === null || ref === void 0 ? void 0 : ref.addEventListener('mousemove', _this4.endDragIfSourceWasRemovedFromDOM, true);\n      }, MOUSE_MOVE_TIMEOUT);\n    }\n  }, {\n    key: \"clearCurrentDragSourceNode\",\n    value: function clearCurrentDragSourceNode() {\n      if (this.currentDragSourceNode) {\n        this.currentDragSourceNode = null;\n\n        if (this.rootElement) {\n          var ref;\n          (ref = this.window) === null || ref === void 0 ? void 0 : ref.clearTimeout(this.mouseMoveTimeoutTimer || undefined);\n          this.rootElement.removeEventListener('mousemove', this.endDragIfSourceWasRemovedFromDOM, true);\n        }\n\n        this.mouseMoveTimeoutTimer = null;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(e, sourceId) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      if (!this.dragStartSourceIds) {\n        this.dragStartSourceIds = [];\n      }\n\n      this.dragStartSourceIds.unshift(sourceId);\n    }\n  }, {\n    key: \"handleDragEnter\",\n    value: function handleDragEnter(_e, targetId) {\n      this.dragEnterTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDragOver\",\n    value: function handleDragOver(_e, targetId) {\n      if (this.dragOverTargetIds === null) {\n        this.dragOverTargetIds = [];\n      }\n\n      this.dragOverTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(_e, targetId) {\n      this.dropTargetIds.unshift(targetId);\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.options.document;\n    }\n    /**\n    * Get the root element to use for event subscriptions\n    */\n\n  }, {\n    key: \"rootElement\",\n    get: function get() {\n      return this.options.rootElement;\n    }\n  }]);\n\n  function HTML5BackendImpl(manager, globalContext, options) {\n    var _this5 = this;\n\n    _classCallCheck(this, HTML5BackendImpl);\n\n    this.sourcePreviewNodes = new Map();\n    this.sourcePreviewNodeOptions = new Map();\n    this.sourceNodes = new Map();\n    this.sourceNodeOptions = new Map();\n    this.dragStartSourceIds = null;\n    this.dropTargetIds = [];\n    this.dragEnterTargetIds = [];\n    this.currentNativeSource = null;\n    this.currentNativeHandle = null;\n    this.currentDragSourceNode = null;\n    this.altKeyPressed = false;\n    this.mouseMoveTimeoutTimer = null;\n    this.asyncEndDragFrameId = null;\n    this.dragOverTargetIds = null;\n    this.lastClientOffset = null;\n    this.hoverRafId = null;\n\n    this.getSourceClientOffset = function (sourceId) {\n      var source = _this5.sourceNodes.get(sourceId);\n\n      return source && getNodeClientOffset(source) || null;\n    };\n\n    this.endDragNativeItem = function () {\n      if (!_this5.isDraggingNativeItem()) {\n        return;\n      }\n\n      _this5.actions.endDrag();\n\n      if (_this5.currentNativeHandle) {\n        _this5.registry.removeSource(_this5.currentNativeHandle);\n      }\n\n      _this5.currentNativeHandle = null;\n      _this5.currentNativeSource = null;\n    };\n\n    this.isNodeInDocument = function (node) {\n      // Check the node either in the main document or in the current context\n      return Boolean(node && _this5.document && _this5.document.body && _this5.document.body.contains(node));\n    };\n\n    this.endDragIfSourceWasRemovedFromDOM = function () {\n      var node = _this5.currentDragSourceNode;\n\n      if (node == null || _this5.isNodeInDocument(node)) {\n        return;\n      }\n\n      if (_this5.clearCurrentDragSourceNode() && _this5.monitor.isDragging()) {\n        _this5.actions.endDrag();\n      }\n\n      _this5.cancelHover();\n    };\n\n    this.scheduleHover = function (dragOverTargetIds) {\n      if (_this5.hoverRafId === null && typeof requestAnimationFrame !== 'undefined') {\n        _this5.hoverRafId = requestAnimationFrame(function () {\n          if (_this5.monitor.isDragging()) {\n            _this5.actions.hover(dragOverTargetIds || [], {\n              clientOffset: _this5.lastClientOffset\n            });\n          }\n\n          _this5.hoverRafId = null;\n        });\n      }\n    };\n\n    this.cancelHover = function () {\n      if (_this5.hoverRafId !== null && typeof cancelAnimationFrame !== 'undefined') {\n        cancelAnimationFrame(_this5.hoverRafId);\n        _this5.hoverRafId = null;\n      }\n    };\n\n    this.handleTopDragStartCapture = function () {\n      _this5.clearCurrentDragSourceNode();\n\n      _this5.dragStartSourceIds = [];\n    };\n\n    this.handleTopDragStart = function (e) {\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      var dragStartSourceIds = _this5.dragStartSourceIds;\n      _this5.dragStartSourceIds = null;\n      var clientOffset = getEventClientOffset(e); // Avoid crashing if we missed a drop event or our previous drag died\n\n      if (_this5.monitor.isDragging()) {\n        _this5.actions.endDrag();\n\n        _this5.cancelHover();\n      } // Don't publish the source just yet (see why below)\n\n\n      _this5.actions.beginDrag(dragStartSourceIds || [], {\n        publishSource: false,\n        getSourceClientOffset: _this5.getSourceClientOffset,\n        clientOffset: clientOffset\n      });\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (_this5.monitor.isDragging()) {\n        if (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n          // Use custom drag image if user specifies it.\n          // If child drag source refuses drag but parent agrees,\n          // use parent's node as drag image. Neither works in IE though.\n          var sourceId = _this5.monitor.getSourceId();\n\n          var sourceNode = _this5.sourceNodes.get(sourceId);\n\n          var dragPreview = _this5.sourcePreviewNodes.get(sourceId) || sourceNode;\n\n          if (dragPreview) {\n            var _this5$getCurrentSour = _this5.getCurrentSourcePreviewNodeOptions(),\n                anchorX = _this5$getCurrentSour.anchorX,\n                anchorY = _this5$getCurrentSour.anchorY,\n                offsetX = _this5$getCurrentSour.offsetX,\n                offsetY = _this5$getCurrentSour.offsetY;\n\n            var anchorPoint = {\n              anchorX: anchorX,\n              anchorY: anchorY\n            };\n            var offsetPoint = {\n              offsetX: offsetX,\n              offsetY: offsetY\n            };\n            var dragPreviewOffset = getDragPreviewOffset(sourceNode, dragPreview, clientOffset, anchorPoint, offsetPoint);\n            dataTransfer.setDragImage(dragPreview, dragPreviewOffset.x, dragPreviewOffset.y);\n          }\n        }\n\n        try {\n          // Firefox won't drag without setting data\n          dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.setData('application/json', {});\n        } catch (err) {} // IE doesn't support MIME types in setData\n        // Store drag source node so we can check whether\n        // it is removed from DOM and trigger endDrag manually.\n\n\n        _this5.setCurrentDragSourceNode(e.target); // Now we are ready to publish the drag source.. or are we not?\n\n\n        var _this5$getCurrentSour2 = _this5.getCurrentSourcePreviewNodeOptions(),\n            captureDraggingState = _this5$getCurrentSour2.captureDraggingState;\n\n        if (!captureDraggingState) {\n          // Usually we want to publish it in the next tick so that browser\n          // is able to screenshot the current (not yet dragging) state.\n          //\n          // It also neatly avoids a situation where render() returns null\n          // in the same tick for the source element, and browser freaks out.\n          setTimeout(function () {\n            return _this5.actions.publishDragSource();\n          }, 0);\n        } else {\n          // In some cases the user may want to override this behavior, e.g.\n          // to work around IE not supporting custom drag previews.\n          //\n          // When using a custom drag layer, the only way to prevent\n          // the default drag preview from drawing in IE is to screenshot\n          // the dragging state in which the node itself has zero opacity\n          // and height. In this case, though, returning null from render()\n          // will abruptly end the dragging, which is not obvious.\n          //\n          // This is the reason such behavior is strictly opt-in.\n          _this5.actions.publishDragSource();\n        }\n      } else if (nativeType) {\n        // A native item (such as URL) dragged from inside the document\n        _this5.beginDragNativeItem(nativeType);\n      } else if (dataTransfer && !dataTransfer.types && (e.target && !e.target.hasAttribute || !e.target.hasAttribute('draggable'))) {\n        // Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n        // Just let it drag. It's a native type (URL or text) and will be picked up in\n        // dragenter handler.\n        return;\n      } else {\n        // If by this time no drag source reacted, tell browser not to drag.\n        e.preventDefault();\n      }\n    };\n\n    this.handleTopDragEndCapture = function () {\n      if (_this5.clearCurrentDragSourceNode() && _this5.monitor.isDragging()) {\n        // Firefox can dispatch this event in an infinite loop\n        // if dragend handler does something like showing an alert.\n        // Only proceed if we have not handled it already.\n        _this5.actions.endDrag();\n      }\n\n      _this5.cancelHover();\n    };\n\n    this.handleTopDragEnterCapture = function (e) {\n      _this5.dragEnterTargetIds = [];\n\n      if (_this5.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this5.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n\n      var isFirstEnter = _this5.enterLeaveCounter.enter(e.target);\n\n      if (!isFirstEnter || _this5.monitor.isDragging()) {\n        return;\n      }\n\n      var dataTransfer = e.dataTransfer;\n      var nativeType = matchNativeItemType(dataTransfer);\n\n      if (nativeType) {\n        // A native item (such as file or URL) dragged from outside the document\n        _this5.beginDragNativeItem(nativeType, dataTransfer);\n      }\n    };\n\n    this.handleTopDragEnter = function (e) {\n      var dragEnterTargetIds = _this5.dragEnterTargetIds;\n      _this5.dragEnterTargetIds = [];\n\n      if (!_this5.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        return;\n      }\n\n      _this5.altKeyPressed = e.altKey; // If the target changes position as the result of `dragenter`, `dragover` might still\n      // get dispatched despite target being no longer there. The easy solution is to check\n      // whether there actually is a target before firing `hover`.\n\n      if (dragEnterTargetIds.length > 0) {\n        _this5.actions.hover(dragEnterTargetIds, {\n          clientOffset: getEventClientOffset(e)\n        });\n      }\n\n      var canDrop = dragEnterTargetIds.some(function (targetId) {\n        return _this5.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // IE requires this to fire dragover events\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this5.getCurrentDropEffect();\n        }\n      }\n    };\n\n    this.handleTopDragOverCapture = function (e) {\n      _this5.dragOverTargetIds = [];\n\n      if (_this5.isDraggingNativeItem()) {\n        var ref;\n        (ref = _this5.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      }\n    };\n\n    this.handleTopDragOver = function (e) {\n      var dragOverTargetIds = _this5.dragOverTargetIds;\n      _this5.dragOverTargetIds = [];\n\n      if (!_this5.monitor.isDragging()) {\n        // This is probably a native item type we don't understand.\n        // Prevent default \"drop and blow away the whole document\" action.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n\n        return;\n      }\n\n      _this5.altKeyPressed = e.altKey;\n      _this5.lastClientOffset = getEventClientOffset(e);\n\n      _this5.scheduleHover(dragOverTargetIds);\n\n      var canDrop = (dragOverTargetIds || []).some(function (targetId) {\n        return _this5.monitor.canDropOnTarget(targetId);\n      });\n\n      if (canDrop) {\n        // Show user-specified drop effect.\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = _this5.getCurrentDropEffect();\n        }\n      } else if (_this5.isDraggingNativeItem()) {\n        // Don't show a nice cursor but still prevent default\n        // \"drop and blow away the whole document\" action.\n        e.preventDefault();\n      } else {\n        e.preventDefault();\n\n        if (e.dataTransfer) {\n          e.dataTransfer.dropEffect = 'none';\n        }\n      }\n    };\n\n    this.handleTopDragLeaveCapture = function (e) {\n      if (_this5.isDraggingNativeItem()) {\n        e.preventDefault();\n      }\n\n      var isLastLeave = _this5.enterLeaveCounter.leave(e.target);\n\n      if (!isLastLeave) {\n        return;\n      }\n\n      if (_this5.isDraggingNativeItem()) {\n        setTimeout(function () {\n          return _this5.endDragNativeItem();\n        }, 0);\n      }\n\n      _this5.cancelHover();\n    };\n\n    this.handleTopDropCapture = function (e) {\n      _this5.dropTargetIds = [];\n\n      if (_this5.isDraggingNativeItem()) {\n        var ref;\n        e.preventDefault();\n        (ref = _this5.currentNativeSource) === null || ref === void 0 ? void 0 : ref.loadDataTransfer(e.dataTransfer);\n      } else if (matchNativeItemType(e.dataTransfer)) {\n        // Dragging some elements, like <a> and <img> may still behave like a native drag event,\n        // even if the current drag event matches a user-defined type.\n        // Stop the default behavior when we're not expecting a native item to be dropped.\n        e.preventDefault();\n      }\n\n      _this5.enterLeaveCounter.reset();\n    };\n\n    this.handleTopDrop = function (e) {\n      var dropTargetIds = _this5.dropTargetIds;\n      _this5.dropTargetIds = [];\n\n      _this5.actions.hover(dropTargetIds, {\n        clientOffset: getEventClientOffset(e)\n      });\n\n      _this5.actions.drop({\n        dropEffect: _this5.getCurrentDropEffect()\n      });\n\n      if (_this5.isDraggingNativeItem()) {\n        _this5.endDragNativeItem();\n      } else if (_this5.monitor.isDragging()) {\n        _this5.actions.endDrag();\n      }\n\n      _this5.cancelHover();\n    };\n\n    this.handleSelectStart = function (e) {\n      var target = e.target; // Only IE requires us to explicitly say\n      // we want drag drop operation to start\n\n      if (typeof target.dragDrop !== 'function') {\n        return;\n      } // Inputs and textareas should be selectable\n\n\n      if (target.tagName === 'INPUT' || target.tagName === 'SELECT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n        return;\n      } // For other targets, ask IE\n      // to enable drag and drop\n\n\n      e.preventDefault();\n      target.dragDrop();\n    };\n\n    this.options = new OptionsReader(globalContext, options);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.registry = manager.getRegistry();\n    this.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument);\n  }\n\n  return HTML5BackendImpl;\n}();","map":{"version":3,"sources":["../src/HTML5BackendImpl.ts"],"names":["EnterLeaveCounter","createNativeDragSource","matchNativeItemType","NativeTypes","getDragPreviewOffset","getEventClientOffset","getNodeClientOffset","OptionsReader","HTML5BackendImpl","sourcePreviewNodes","sourcePreviewNodeOptions","sourceNodes","sourceNodeOptions","dragStartSourceIds","dropTargetIds","dragEnterTargetIds","currentNativeSource","currentNativeHandle","currentDragSourceNode","altKeyPressed","mouseMoveTimeoutTimer","asyncEndDragFrameId","dragOverTargetIds","lastClientOffset","hoverRafId","manager","globalContext","options","actions","getActions","monitor","getMonitor","registry","getRegistry","enterLeaveCounter","isNodeInDocument","size","length","window","document","rootElement","root","undefined","__isReactDndBackendSetUp","Error","addEventListeners","removeEventListeners","clearCurrentDragSourceNode","cancelAnimationFrame","sourceId","node","set","delete","handleDragStart","e","handleSelectStart","setAttribute","addEventListener","removeEventListener","targetId","handleDragEnter","handleDragOver","handleDrop","target","handleTopDragStart","handleTopDragStartCapture","handleTopDragEndCapture","handleTopDragEnter","handleTopDragEnterCapture","handleTopDragLeaveCapture","handleTopDragOver","handleTopDragOverCapture","handleTopDrop","handleTopDropCapture","getSourceId","get","dropEffect","isDraggingNativeItem","getCurrentSourceNodeOptions","anchorX","anchorY","captureDraggingState","getSourceClientOffset","source","itemType","getItemType","Object","keys","some","key","type","dataTransfer","addSource","beginDrag","endDragNativeItem","endDrag","removeSource","Boolean","body","contains","endDragIfSourceWasRemovedFromDOM","isDragging","cancelHover","MOUSE_MOVE_TIMEOUT","setTimeout","clearTimeout","scheduleHover","requestAnimationFrame","hover","clientOffset","defaultPrevented","unshift","publishSource","nativeType","setDragImage","sourceNode","dragPreview","offsetX","offsetY","getCurrentSourcePreviewNodeOptions","anchorPoint","offsetPoint","dragPreviewOffset","x","y","setData","err","setCurrentDragSourceNode","publishDragSource","beginDragNativeItem","types","hasAttribute","preventDefault","loadDataTransfer","isFirstEnter","enter","_e","altKey","canDrop","canDropOnTarget","getCurrentDropEffect","isLastLeave","leave","reset","drop","dragDrop","tagName","isContentEditable"],"mappings":"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","sourcesContent":["import type {\n\tBackend,\n\tDragDropActions,\n\tDragDropManager,\n\tDragDropMonitor,\n\tHandlerRegistry,\n\tIdentifier,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport { EnterLeaveCounter } from './EnterLeaveCounter.js'\nimport {\n\tcreateNativeDragSource,\n\tmatchNativeItemType,\n} from './NativeDragSources/index.js'\nimport type { NativeDragSource } from './NativeDragSources/NativeDragSource.js'\nimport * as NativeTypes from './NativeTypes.js'\nimport {\n\tgetDragPreviewOffset,\n\tgetEventClientOffset,\n\tgetNodeClientOffset,\n} from './OffsetUtils.js'\nimport { OptionsReader } from './OptionsReader.js'\nimport type { HTML5BackendContext, HTML5BackendOptions } from './types.js'\n\ntype RootNode = Node & { __isReactDndBackendSetUp: boolean | undefined }\n\nexport class HTML5BackendImpl implements Backend {\n\tprivate options: OptionsReader\n\n\t// React-Dnd Components\n\tprivate actions: DragDropActions\n\tprivate monitor: DragDropMonitor\n\tprivate registry: HandlerRegistry\n\n\t// Internal State\n\tprivate enterLeaveCounter: EnterLeaveCounter\n\n\tprivate sourcePreviewNodes: Map<string, Element> = new Map()\n\tprivate sourcePreviewNodeOptions: Map<string, any> = new Map()\n\tprivate sourceNodes: Map<string, Element> = new Map()\n\tprivate sourceNodeOptions: Map<string, any> = new Map()\n\n\tprivate dragStartSourceIds: string[] | null = null\n\tprivate dropTargetIds: string[] = []\n\tprivate dragEnterTargetIds: string[] = []\n\tprivate currentNativeSource: NativeDragSource | null = null\n\tprivate currentNativeHandle: Identifier | null = null\n\tprivate currentDragSourceNode: Element | null = null\n\tprivate altKeyPressed = false\n\tprivate mouseMoveTimeoutTimer: number | null = null\n\tprivate asyncEndDragFrameId: number | null = null\n\tprivate dragOverTargetIds: string[] | null = null\n\n\tprivate lastClientOffset: XYCoord | null = null\n\tprivate hoverRafId: number | null = null\n\n\tpublic constructor(\n\t\tmanager: DragDropManager,\n\t\tglobalContext?: HTML5BackendContext,\n\t\toptions?: HTML5BackendOptions,\n\t) {\n\t\tthis.options = new OptionsReader(globalContext, options)\n\t\tthis.actions = manager.getActions()\n\t\tthis.monitor = manager.getMonitor()\n\t\tthis.registry = manager.getRegistry()\n\t\tthis.enterLeaveCounter = new EnterLeaveCounter(this.isNodeInDocument)\n\t}\n\n\t/**\n\t * Generate profiling statistics for the HTML5Backend.\n\t */\n\tpublic profile(): Record<string, number> {\n\t\treturn {\n\t\t\tsourcePreviewNodes: this.sourcePreviewNodes.size,\n\t\t\tsourcePreviewNodeOptions: this.sourcePreviewNodeOptions.size,\n\t\t\tsourceNodeOptions: this.sourceNodeOptions.size,\n\t\t\tsourceNodes: this.sourceNodes.size,\n\t\t\tdragStartSourceIds: this.dragStartSourceIds?.length || 0,\n\t\t\tdropTargetIds: this.dropTargetIds.length,\n\t\t\tdragEnterTargetIds: this.dragEnterTargetIds.length,\n\t\t\tdragOverTargetIds: this.dragOverTargetIds?.length || 0,\n\t\t}\n\t}\n\n\t// public for test\n\tpublic get window(): Window | undefined {\n\t\treturn this.options.window\n\t}\n\tpublic get document(): Document | undefined {\n\t\treturn this.options.document\n\t}\n\t/**\n\t * Get the root element to use for event subscriptions\n\t */\n\tprivate get rootElement(): Node | undefined {\n\t\treturn this.options.rootElement as Node\n\t}\n\n\tpublic setup(): void {\n\t\tconst root = this.rootElement as RootNode | undefined\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\tif (root.__isReactDndBackendSetUp) {\n\t\t\tthrow new Error('Cannot have two HTML5 backends at the same time.')\n\t\t}\n\t\troot.__isReactDndBackendSetUp = true\n\t\tthis.addEventListeners(root)\n\t}\n\n\tpublic teardown(): void {\n\t\tconst root = this.rootElement as RootNode\n\t\tif (root === undefined) {\n\t\t\treturn\n\t\t}\n\n\t\troot.__isReactDndBackendSetUp = false\n\t\tthis.removeEventListeners(this.rootElement as Element)\n\t\tthis.clearCurrentDragSourceNode()\n\t\tif (this.asyncEndDragFrameId) {\n\t\t\tthis.window?.cancelAnimationFrame(this.asyncEndDragFrameId)\n\t\t}\n\t}\n\n\tpublic connectDragPreview(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourcePreviewNodeOptions.set(sourceId, options)\n\t\tthis.sourcePreviewNodes.set(sourceId, node)\n\n\t\treturn (): void => {\n\t\t\tthis.sourcePreviewNodes.delete(sourceId)\n\t\t\tthis.sourcePreviewNodeOptions.delete(sourceId)\n\t\t}\n\t}\n\n\tpublic connectDragSource(\n\t\tsourceId: string,\n\t\tnode: Element,\n\t\toptions: any,\n\t): Unsubscribe {\n\t\tthis.sourceNodes.set(sourceId, node)\n\t\tthis.sourceNodeOptions.set(sourceId, options)\n\n\t\tconst handleDragStart = (e: any) => this.handleDragStart(e, sourceId)\n\t\tconst handleSelectStart = (e: any) => this.handleSelectStart(e)\n\n\t\tnode.setAttribute('draggable', 'true')\n\t\tnode.addEventListener('dragstart', handleDragStart)\n\t\tnode.addEventListener('selectstart', handleSelectStart)\n\n\t\treturn (): void => {\n\t\t\tthis.sourceNodes.delete(sourceId)\n\t\t\tthis.sourceNodeOptions.delete(sourceId)\n\n\t\t\tnode.removeEventListener('dragstart', handleDragStart)\n\t\t\tnode.removeEventListener('selectstart', handleSelectStart)\n\t\t\tnode.setAttribute('draggable', 'false')\n\t\t}\n\t}\n\n\tpublic connectDropTarget(targetId: string, node: HTMLElement): Unsubscribe {\n\t\tconst handleDragEnter = (e: DragEvent) => this.handleDragEnter(e, targetId)\n\t\tconst handleDragOver = (e: DragEvent) => this.handleDragOver(e, targetId)\n\t\tconst handleDrop = (e: DragEvent) => this.handleDrop(e, targetId)\n\n\t\tnode.addEventListener('dragenter', handleDragEnter)\n\t\tnode.addEventListener('dragover', handleDragOver)\n\t\tnode.addEventListener('drop', handleDrop)\n\n\t\treturn (): void => {\n\t\t\tnode.removeEventListener('dragenter', handleDragEnter)\n\t\t\tnode.removeEventListener('dragover', handleDragOver)\n\t\t\tnode.removeEventListener('drop', handleDrop)\n\t\t}\n\t}\n\n\tprivate addEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.addEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.addEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStart as EventListener,\n\t\t)\n\t\ttarget.addEventListener('dragstart', this.handleTopDragStartCapture, true)\n\t\ttarget.addEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('dragover', this.handleTopDragOver as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.addEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.addEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate removeEventListeners(target: Node) {\n\t\t// SSR Fix (https://github.com/react-dnd/react-dnd/pull/813\n\t\tif (!target.removeEventListener) {\n\t\t\treturn\n\t\t}\n\t\ttarget.removeEventListener('dragstart', this.handleTopDragStart as any)\n\t\ttarget.removeEventListener(\n\t\t\t'dragstart',\n\t\t\tthis.handleTopDragStartCapture,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('dragend', this.handleTopDragEndCapture, true)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnter as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragenter',\n\t\t\tthis.handleTopDragEnterCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragleave',\n\t\t\tthis.handleTopDragLeaveCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOver as EventListener,\n\t\t)\n\t\ttarget.removeEventListener(\n\t\t\t'dragover',\n\t\t\tthis.handleTopDragOverCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t\ttarget.removeEventListener('drop', this.handleTopDrop as EventListener)\n\t\ttarget.removeEventListener(\n\t\t\t'drop',\n\t\t\tthis.handleTopDropCapture as EventListener,\n\t\t\ttrue,\n\t\t)\n\t}\n\n\tprivate getCurrentSourceNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourceNodeOptions = this.sourceNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tdropEffect: this.altKeyPressed ? 'copy' : 'move',\n\t\t\t...(sourceNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getCurrentDropEffect() {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\t// It makes more sense to default to 'copy' for native resources\n\t\t\treturn 'copy'\n\t\t}\n\n\t\treturn this.getCurrentSourceNodeOptions().dropEffect\n\t}\n\n\tprivate getCurrentSourcePreviewNodeOptions() {\n\t\tconst sourceId = this.monitor.getSourceId() as string\n\t\tconst sourcePreviewNodeOptions = this.sourcePreviewNodeOptions.get(sourceId)\n\n\t\treturn {\n\t\t\tanchorX: 0.5,\n\t\t\tanchorY: 0.5,\n\t\t\tcaptureDraggingState: false,\n\t\t\t...(sourcePreviewNodeOptions || {}),\n\t\t}\n\t}\n\n\tprivate getSourceClientOffset = (sourceId: string): XYCoord | null => {\n\t\tconst source = this.sourceNodes.get(sourceId)\n\t\treturn (source && getNodeClientOffset(source as HTMLElement)) || null\n\t}\n\n\tprivate isDraggingNativeItem() {\n\t\tconst itemType = this.monitor.getItemType()\n\t\treturn Object.keys(NativeTypes).some(\n\t\t\t(key: string) => (NativeTypes as any)[key] === itemType,\n\t\t)\n\t}\n\n\tprivate beginDragNativeItem(type: string, dataTransfer?: DataTransfer) {\n\t\tthis.clearCurrentDragSourceNode()\n\n\t\tthis.currentNativeSource = createNativeDragSource(type, dataTransfer)\n\t\tthis.currentNativeHandle = this.registry.addSource(\n\t\t\ttype,\n\t\t\tthis.currentNativeSource,\n\t\t)\n\t\tthis.actions.beginDrag([this.currentNativeHandle])\n\t}\n\n\tprivate endDragNativeItem = (): void => {\n\t\tif (!this.isDraggingNativeItem()) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.actions.endDrag()\n\t\tif (this.currentNativeHandle) {\n\t\t\tthis.registry.removeSource(this.currentNativeHandle)\n\t\t}\n\t\tthis.currentNativeHandle = null\n\t\tthis.currentNativeSource = null\n\t}\n\n\tprivate isNodeInDocument = (node: Node | null | undefined): boolean => {\n\t\t// Check the node either in the main document or in the current context\n\t\treturn Boolean(\n\t\t\tnode &&\n\t\t\t\tthis.document &&\n\t\t\t\tthis.document.body &&\n\t\t\t\tthis.document.body.contains(node),\n\t\t)\n\t}\n\n\tprivate endDragIfSourceWasRemovedFromDOM = (): void => {\n\t\tconst node = this.currentDragSourceNode\n\t\tif (node == null || this.isNodeInDocument(node)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tprivate setCurrentDragSourceNode(node: Element | null) {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.currentDragSourceNode = node\n\n\t\t// A timeout of > 0 is necessary to resolve Firefox issue referenced\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\tconst MOUSE_MOVE_TIMEOUT = 1000\n\n\t\t// Receiving a mouse event in the middle of a dragging operation\n\t\t// means it has ended and the drag source node disappeared from DOM,\n\t\t// so the browser didn't dispatch the dragend event.\n\t\t//\n\t\t// We need to wait before we start listening for mousemove events.\n\t\t// This is needed because the drag preview needs to be drawn or else it fires an 'mousemove' event\n\t\t// immediately in some browsers.\n\t\t//\n\t\t// See:\n\t\t//   * https://github.com/react-dnd/react-dnd/pull/928\n\t\t//   * https://github.com/react-dnd/react-dnd/issues/869\n\t\t//\n\t\tthis.mouseMoveTimeoutTimer = setTimeout(() => {\n\t\t\treturn this.rootElement?.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\ttrue,\n\t\t\t)\n\t\t}, MOUSE_MOVE_TIMEOUT) as any as number\n\t}\n\n\tprivate clearCurrentDragSourceNode() {\n\t\tif (this.currentDragSourceNode) {\n\t\t\tthis.currentDragSourceNode = null\n\n\t\t\tif (this.rootElement) {\n\t\t\t\tthis.window?.clearTimeout(this.mouseMoveTimeoutTimer || undefined)\n\t\t\t\tthis.rootElement.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tthis.endDragIfSourceWasRemovedFromDOM,\n\t\t\t\t\ttrue,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.mouseMoveTimeoutTimer = null\n\t\t\treturn true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tprivate scheduleHover = (dragOverTargetIds: string[] | null) => {\n\t\tif (\n\t\t\tthis.hoverRafId === null &&\n\t\t\ttypeof requestAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tthis.hoverRafId = requestAnimationFrame(() => {\n\t\t\t\tif (this.monitor.isDragging()) {\n\t\t\t\t\tthis.actions.hover(dragOverTargetIds || [], {\n\t\t\t\t\t\tclientOffset: this.lastClientOffset,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis.hoverRafId = null\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancelHover = () => {\n\t\tif (\n\t\t\tthis.hoverRafId !== null &&\n\t\t\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t) {\n\t\t\tcancelAnimationFrame(this.hoverRafId)\n\t\t\tthis.hoverRafId = null\n\t\t}\n\t}\n\n\tpublic handleTopDragStartCapture = (): void => {\n\t\tthis.clearCurrentDragSourceNode()\n\t\tthis.dragStartSourceIds = []\n\t}\n\n\tpublic handleDragStart(e: DragEvent, sourceId: string): void {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tif (!this.dragStartSourceIds) {\n\t\t\tthis.dragStartSourceIds = []\n\t\t}\n\t\tthis.dragStartSourceIds.unshift(sourceId)\n\t}\n\n\tpublic handleTopDragStart = (e: DragEvent): void => {\n\t\tif (e.defaultPrevented) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dragStartSourceIds } = this\n\t\tthis.dragStartSourceIds = null\n\n\t\tconst clientOffset = getEventClientOffset(e)\n\n\t\t// Avoid crashing if we missed a drop event or our previous drag died\n\t\tif (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t\tthis.cancelHover()\n\t\t}\n\n\t\t// Don't publish the source just yet (see why below)\n\t\tthis.actions.beginDrag(dragStartSourceIds || [], {\n\t\t\tpublishSource: false,\n\t\t\tgetSourceClientOffset: this.getSourceClientOffset,\n\t\t\tclientOffset,\n\t\t})\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (this.monitor.isDragging()) {\n\t\t\tif (dataTransfer && typeof dataTransfer.setDragImage === 'function') {\n\t\t\t\t// Use custom drag image if user specifies it.\n\t\t\t\t// If child drag source refuses drag but parent agrees,\n\t\t\t\t// use parent's node as drag image. Neither works in IE though.\n\t\t\t\tconst sourceId: string = this.monitor.getSourceId() as string\n\t\t\t\tconst sourceNode = this.sourceNodes.get(sourceId)\n\t\t\t\tconst dragPreview = this.sourcePreviewNodes.get(sourceId) || sourceNode\n\n\t\t\t\tif (dragPreview) {\n\t\t\t\t\tconst { anchorX, anchorY, offsetX, offsetY } =\n\t\t\t\t\t\tthis.getCurrentSourcePreviewNodeOptions()\n\t\t\t\t\tconst anchorPoint = { anchorX, anchorY }\n\t\t\t\t\tconst offsetPoint = { offsetX, offsetY }\n\t\t\t\t\tconst dragPreviewOffset = getDragPreviewOffset(\n\t\t\t\t\t\tsourceNode as HTMLElement,\n\t\t\t\t\t\tdragPreview as HTMLElement,\n\t\t\t\t\t\tclientOffset,\n\t\t\t\t\t\tanchorPoint,\n\t\t\t\t\t\toffsetPoint,\n\t\t\t\t\t)\n\n\t\t\t\t\tdataTransfer.setDragImage(\n\t\t\t\t\t\tdragPreview,\n\t\t\t\t\t\tdragPreviewOffset.x,\n\t\t\t\t\t\tdragPreviewOffset.y,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Firefox won't drag without setting data\n\t\t\t\tdataTransfer?.setData('application/json', {} as any)\n\t\t\t} catch (err) {\n\t\t\t\t// IE doesn't support MIME types in setData\n\t\t\t}\n\n\t\t\t// Store drag source node so we can check whether\n\t\t\t// it is removed from DOM and trigger endDrag manually.\n\t\t\tthis.setCurrentDragSourceNode(e.target as Element)\n\n\t\t\t// Now we are ready to publish the drag source.. or are we not?\n\t\t\tconst { captureDraggingState } = this.getCurrentSourcePreviewNodeOptions()\n\t\t\tif (!captureDraggingState) {\n\t\t\t\t// Usually we want to publish it in the next tick so that browser\n\t\t\t\t// is able to screenshot the current (not yet dragging) state.\n\t\t\t\t//\n\t\t\t\t// It also neatly avoids a situation where render() returns null\n\t\t\t\t// in the same tick for the source element, and browser freaks out.\n\t\t\t\tsetTimeout(() => this.actions.publishDragSource(), 0)\n\t\t\t} else {\n\t\t\t\t// In some cases the user may want to override this behavior, e.g.\n\t\t\t\t// to work around IE not supporting custom drag previews.\n\t\t\t\t//\n\t\t\t\t// When using a custom drag layer, the only way to prevent\n\t\t\t\t// the default drag preview from drawing in IE is to screenshot\n\t\t\t\t// the dragging state in which the node itself has zero opacity\n\t\t\t\t// and height. In this case, though, returning null from render()\n\t\t\t\t// will abruptly end the dragging, which is not obvious.\n\t\t\t\t//\n\t\t\t\t// This is the reason such behavior is strictly opt-in.\n\t\t\t\tthis.actions.publishDragSource()\n\t\t\t}\n\t\t} else if (nativeType) {\n\t\t\t// A native item (such as URL) dragged from inside the document\n\t\t\tthis.beginDragNativeItem(nativeType)\n\t\t} else if (\n\t\t\tdataTransfer &&\n\t\t\t!dataTransfer.types &&\n\t\t\t((e.target && !(e.target as Element).hasAttribute) ||\n\t\t\t\t!(e.target as Element).hasAttribute('draggable'))\n\t\t) {\n\t\t\t// Looks like a Safari bug: dataTransfer.types is null, but there was no draggable.\n\t\t\t// Just let it drag. It's a native type (URL or text) and will be picked up in\n\t\t\t// dragenter handler.\n\t\t\treturn\n\t\t} else {\n\t\t\t// If by this time no drag source reacted, tell browser not to drag.\n\t\t\te.preventDefault()\n\t\t}\n\t}\n\n\tpublic handleTopDragEndCapture = (): void => {\n\t\tif (this.clearCurrentDragSourceNode() && this.monitor.isDragging()) {\n\t\t\t// Firefox can dispatch this event in an infinite loop\n\t\t\t// if dragend handler does something like showing an alert.\n\t\t\t// Only proceed if we have not handled it already.\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDragEnterCapture = (e: DragEvent): void => {\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\n\t\tconst isFirstEnter = this.enterLeaveCounter.enter(e.target)\n\t\tif (!isFirstEnter || this.monitor.isDragging()) {\n\t\t\treturn\n\t\t}\n\n\t\tconst { dataTransfer } = e\n\t\tconst nativeType = matchNativeItemType(dataTransfer)\n\n\t\tif (nativeType) {\n\t\t\t// A native item (such as file or URL) dragged from outside the document\n\t\t\tthis.beginDragNativeItem(nativeType, dataTransfer as DataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragEnter(_e: DragEvent, targetId: string): void {\n\t\tthis.dragEnterTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragEnter = (e: DragEvent): void => {\n\t\tconst { dragEnterTargetIds } = this\n\t\tthis.dragEnterTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\n\t\t// If the target changes position as the result of `dragenter`, `dragover` might still\n\t\t// get dispatched despite target being no longer there. The easy solution is to check\n\t\t// whether there actually is a target before firing `hover`.\n\t\tif (dragEnterTargetIds.length > 0) {\n\t\t\tthis.actions.hover(dragEnterTargetIds, {\n\t\t\t\tclientOffset: getEventClientOffset(e),\n\t\t\t})\n\t\t}\n\n\t\tconst canDrop = dragEnterTargetIds.some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// IE requires this to fire dragover events\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragOverCapture = (e: DragEvent): void => {\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t}\n\t}\n\n\tpublic handleDragOver(_e: DragEvent, targetId: string): void {\n\t\tif (this.dragOverTargetIds === null) {\n\t\t\tthis.dragOverTargetIds = []\n\t\t}\n\t\tthis.dragOverTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDragOver = (e: DragEvent): void => {\n\t\tconst { dragOverTargetIds } = this\n\t\tthis.dragOverTargetIds = []\n\n\t\tif (!this.monitor.isDragging()) {\n\t\t\t// This is probably a native item type we don't understand.\n\t\t\t// Prevent default \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tthis.altKeyPressed = e.altKey\n\t\tthis.lastClientOffset = getEventClientOffset(e)\n\n\t\tthis.scheduleHover(dragOverTargetIds)\n\n\t\tconst canDrop = (dragOverTargetIds || []).some((targetId) =>\n\t\t\tthis.monitor.canDropOnTarget(targetId),\n\t\t)\n\n\t\tif (canDrop) {\n\t\t\t// Show user-specified drop effect.\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = this.getCurrentDropEffect()\n\t\t\t}\n\t\t} else if (this.isDraggingNativeItem()) {\n\t\t\t// Don't show a nice cursor but still prevent default\n\t\t\t// \"drop and blow away the whole document\" action.\n\t\t\te.preventDefault()\n\t\t} else {\n\t\t\te.preventDefault()\n\t\t\tif (e.dataTransfer) {\n\t\t\t\te.dataTransfer.dropEffect = 'none'\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTopDragLeaveCapture = (e: DragEvent): void => {\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tconst isLastLeave = this.enterLeaveCounter.leave(e.target)\n\t\tif (!isLastLeave) {\n\t\t\treturn\n\t\t}\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tsetTimeout(() => this.endDragNativeItem(), 0)\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleTopDropCapture = (e: DragEvent): void => {\n\t\tthis.dropTargetIds = []\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\te.preventDefault()\n\t\t\tthis.currentNativeSource?.loadDataTransfer(e.dataTransfer)\n\t\t} else if (matchNativeItemType(e.dataTransfer)) {\n\t\t\t// Dragging some elements, like <a> and <img> may still behave like a native drag event,\n\t\t\t// even if the current drag event matches a user-defined type.\n\t\t\t// Stop the default behavior when we're not expecting a native item to be dropped.\n\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tthis.enterLeaveCounter.reset()\n\t}\n\n\tpublic handleDrop(_e: DragEvent, targetId: string): void {\n\t\tthis.dropTargetIds.unshift(targetId)\n\t}\n\n\tpublic handleTopDrop = (e: DragEvent): void => {\n\t\tconst { dropTargetIds } = this\n\t\tthis.dropTargetIds = []\n\n\t\tthis.actions.hover(dropTargetIds, {\n\t\t\tclientOffset: getEventClientOffset(e),\n\t\t})\n\t\tthis.actions.drop({ dropEffect: this.getCurrentDropEffect() })\n\n\t\tif (this.isDraggingNativeItem()) {\n\t\t\tthis.endDragNativeItem()\n\t\t} else if (this.monitor.isDragging()) {\n\t\t\tthis.actions.endDrag()\n\t\t}\n\t\tthis.cancelHover()\n\t}\n\n\tpublic handleSelectStart = (e: DragEvent): void => {\n\t\tconst target = e.target as HTMLElement & { dragDrop: () => void }\n\n\t\t// Only IE requires us to explicitly say\n\t\t// we want drag drop operation to start\n\t\tif (typeof target.dragDrop !== 'function') {\n\t\t\treturn\n\t\t}\n\n\t\t// Inputs and textareas should be selectable\n\t\tif (\n\t\t\ttarget.tagName === 'INPUT' ||\n\t\t\ttarget.tagName === 'SELECT' ||\n\t\t\ttarget.tagName === 'TEXTAREA' ||\n\t\t\ttarget.isContentEditable\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\t// For other targets, ask IE\n\t\t// to enable drag and drop\n\t\te.preventDefault()\n\t\ttarget.dragDrop()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}