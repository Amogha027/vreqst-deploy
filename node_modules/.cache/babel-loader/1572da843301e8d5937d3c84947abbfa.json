{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _createClass = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContextRunnerImpl = exports.ResultWithContext = void 0;\n\nvar _ = require(\"lodash\");\n\nvar base_1 = require(\"../base\");\n\nvar context_1 = require(\"../context\");\n\nvar select_fields_1 = require(\"../select-fields\");\n\nvar validation_result_1 = require(\"../validation-result\");\n\nvar ResultWithContext =\n/*#__PURE__*/\nfunction (_validation_result_1$) {\n  _inherits(ResultWithContext, _validation_result_1$);\n\n  function ResultWithContext(context) {\n    var _this;\n\n    _classCallCheck(this, ResultWithContext);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResultWithContext).call(this, function (error) {\n      return error;\n    }, context.errors));\n    _this.context = context;\n    return _this;\n  }\n\n  return ResultWithContext;\n}(validation_result_1.Result);\n\nexports.ResultWithContext = ResultWithContext;\n\nvar ContextRunnerImpl =\n/*#__PURE__*/\nfunction () {\n  function ContextRunnerImpl(builderOrContext) {\n    var selectFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : select_fields_1.selectFields;\n\n    _classCallCheck(this, ContextRunnerImpl);\n\n    this.builderOrContext = builderOrContext;\n    this.selectFields = selectFields;\n  }\n\n  _createClass(ContextRunnerImpl, [{\n    key: \"run\",\n    value: function () {\n      var _run = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(req) {\n        var options,\n            context,\n            instances,\n            haltedInstances,\n            _iteratorNormalCompletion,\n            _didIteratorError,\n            _iteratorError,\n            _loop,\n            _iterator,\n            _step,\n            internalReq,\n            _args3 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                context = this.builderOrContext instanceof context_1.Context ? this.builderOrContext : this.builderOrContext.build();\n                instances = this.selectFields(req, context.fields, context.locations);\n                context.addFieldInstances(instances);\n                haltedInstances = new Set();\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context3.prev = 8;\n                _loop =\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _loop() {\n                  var contextItem, promises;\n                  return _regeneratorRuntime.wrap(function _loop$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          contextItem = _step.value;\n                          promises = context.getData({\n                            requiredOnly: true\n                          }).map(\n                          /*#__PURE__*/\n                          function () {\n                            var _ref = _asyncToGenerator(\n                            /*#__PURE__*/\n                            _regeneratorRuntime.mark(function _callee(instance) {\n                              var location, path, instanceKey, newValue, reqValue;\n                              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                while (1) {\n                                  switch (_context.prev = _context.next) {\n                                    case 0:\n                                      location = instance.location, path = instance.path;\n                                      instanceKey = \"\".concat(location, \":\").concat(path);\n\n                                      if (!haltedInstances.has(instanceKey)) {\n                                        _context.next = 4;\n                                        break;\n                                      }\n\n                                      return _context.abrupt(\"return\");\n\n                                    case 4:\n                                      _context.prev = 4;\n                                      _context.next = 7;\n                                      return contextItem.run(context, instance.value, {\n                                        req: req,\n                                        location: location,\n                                        path: path\n                                      });\n\n                                    case 7:\n                                      // An instance is mutable, so if an item changed its value, there's no need to call getData again\n                                      newValue = instance.value; // Checks whether the value changed.\n                                      // Avoids e.g. undefined values being set on the request if it didn't have the key initially.\n\n                                      reqValue = path !== '' ? _.get(req[location], path) : req[location];\n\n                                      if (!options.dryRun && reqValue !== instance.value) {\n                                        path !== '' ? _.set(req[location], path, newValue) : _.set(req, location, newValue);\n                                      }\n\n                                      _context.next = 18;\n                                      break;\n\n                                    case 12:\n                                      _context.prev = 12;\n                                      _context.t0 = _context[\"catch\"](4);\n\n                                      if (!(_context.t0 instanceof base_1.ValidationHalt)) {\n                                        _context.next = 17;\n                                        break;\n                                      }\n\n                                      haltedInstances.add(instanceKey);\n                                      return _context.abrupt(\"return\");\n\n                                    case 17:\n                                      throw _context.t0;\n\n                                    case 18:\n                                    case \"end\":\n                                      return _context.stop();\n                                  }\n                                }\n                              }, _callee, null, [[4, 12]]);\n                            }));\n\n                            return function (_x2) {\n                              return _ref.apply(this, arguments);\n                            };\n                          }());\n                          _context2.next = 4;\n                          return Promise.all(promises);\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n                _iterator = context.stack[Symbol.iterator]();\n\n              case 11:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                return _context3.delegateYield(_loop(), \"t0\", 13);\n\n              case 13:\n                _iteratorNormalCompletion = true;\n                _context3.next = 11;\n                break;\n\n              case 16:\n                _context3.next = 22;\n                break;\n\n              case 18:\n                _context3.prev = 18;\n                _context3.t1 = _context3[\"catch\"](8);\n                _didIteratorError = true;\n                _iteratorError = _context3.t1;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.prev = 23;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 25:\n                _context3.prev = 25;\n\n                if (!_didIteratorError) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 28:\n                return _context3.finish(25);\n\n              case 29:\n                return _context3.finish(22);\n\n              case 30:\n                if (!options.dryRun) {\n                  internalReq = req;\n                  internalReq[base_1.contextsKey] = (internalReq[base_1.contextsKey] || []).concat(context);\n                }\n\n                return _context3.abrupt(\"return\", new ResultWithContext(context));\n\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee2, this, [[8, 18, 22, 30], [23,, 25, 29]]);\n      }));\n\n      function run(_x) {\n        return _run.apply(this, arguments);\n      }\n\n      return run;\n    }()\n  }]);\n\n  return ContextRunnerImpl;\n}();\n\nexports.ContextRunnerImpl = ContextRunnerImpl;","map":{"version":3,"sources":["/home/amogha/btp/temp/VReqST-main/VReqST/frontend/client/node_modules/express-validator/src/chain/context-runner-impl.js"],"names":["Object","defineProperty","exports","value","ContextRunnerImpl","ResultWithContext","_","require","base_1","context_1","select_fields_1","validation_result_1","context","error","errors","Result","builderOrContext","selectFields","req","options","Context","build","instances","fields","locations","addFieldInstances","haltedInstances","Set","contextItem","promises","getData","requiredOnly","map","instance","location","path","instanceKey","has","run","newValue","reqValue","get","dryRun","set","ValidationHalt","add","Promise","all","stack","internalReq","contextsKey","concat"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContextRunnerImpl = exports.ResultWithContext = void 0;\nconst _ = require(\"lodash\");\nconst base_1 = require(\"../base\");\nconst context_1 = require(\"../context\");\nconst select_fields_1 = require(\"../select-fields\");\nconst validation_result_1 = require(\"../validation-result\");\nclass ResultWithContext extends validation_result_1.Result {\n    constructor(context) {\n        super(error => error, context.errors);\n        this.context = context;\n    }\n}\nexports.ResultWithContext = ResultWithContext;\nclass ContextRunnerImpl {\n    constructor(builderOrContext, selectFields = select_fields_1.selectFields) {\n        this.builderOrContext = builderOrContext;\n        this.selectFields = selectFields;\n    }\n    async run(req, options = {}) {\n        const context = this.builderOrContext instanceof context_1.Context\n            ? this.builderOrContext\n            : this.builderOrContext.build();\n        const instances = this.selectFields(req, context.fields, context.locations);\n        context.addFieldInstances(instances);\n        const haltedInstances = new Set();\n        for (const contextItem of context.stack) {\n            const promises = context.getData({ requiredOnly: true }).map(async (instance) => {\n                const { location, path } = instance;\n                const instanceKey = `${location}:${path}`;\n                if (haltedInstances.has(instanceKey)) {\n                    return;\n                }\n                try {\n                    await contextItem.run(context, instance.value, {\n                        req,\n                        location,\n                        path,\n                    });\n                    // An instance is mutable, so if an item changed its value, there's no need to call getData again\n                    const newValue = instance.value;\n                    // Checks whether the value changed.\n                    // Avoids e.g. undefined values being set on the request if it didn't have the key initially.\n                    const reqValue = path !== '' ? _.get(req[location], path) : req[location];\n                    if (!options.dryRun && reqValue !== instance.value) {\n                        path !== '' ? _.set(req[location], path, newValue) : _.set(req, location, newValue);\n                    }\n                }\n                catch (e) {\n                    if (e instanceof base_1.ValidationHalt) {\n                        haltedInstances.add(instanceKey);\n                        return;\n                    }\n                    throw e;\n                }\n            });\n            await Promise.all(promises);\n        }\n        if (!options.dryRun) {\n            const internalReq = req;\n            internalReq[base_1.contextsKey] = (internalReq[base_1.contextsKey] || []).concat(context);\n        }\n        return new ResultWithContext(context);\n    }\n}\nexports.ContextRunnerImpl = ContextRunnerImpl;\n"]},"metadata":{},"sourceType":"script"}